unit ClasseProdutos;

{*******************************************************************************
    Generated By   : JsonToDelphiClass - 0.65 (http://jsontodelphi.com)
    Projeto        : Mercos
    Gerado         : 2019-07-10 16:41:40
	Classe         : Produtos
	                 Categoria https://sandbox.mercos.com/api/v1/categorias
    Criado por     : Jairo Monassa
    
*******************************************************************************}


interface

uses Generics.Collections, Rest.Json;

type

TEstoque = class
private
  FNovo_saldo: Extended;
  FProduto_id: Extended;
public
  property novo_saldo: Extended read FNovo_saldo write FNovo_saldo;
  property produto_id: Extended read FProduto_id write FProduto_id;
  function ToJsonString: string;
  class function FromJsonString(AJsonString: string): TEstoque;
end;

TProdutos = class
private
  FNome: String; 
  FAtivo: Boolean;
  FCategoria_id: Extended;
  FCodigo: String;
  FCodigo_ncm: String;
  FExcluido: Boolean;
  FId: Extended;
  FMoeda: String;
  FMultiplo: Extended; 
  FObservacoes: String;
  FPeso_bruto: Extended;
  FPreco_minimo: Extended;
  FPreco_tabela: Extended;
  FTipo_ipi: String;
  fIpi: double;
  FUltima_alteracao: TDateTime;
  FUnidade: String;
  fSaldo_estoque : double;
public
  property ativo: Boolean read FAtivo write FAtivo;
  property categoria_id: Extended read FCategoria_id write FCategoria_id;
  property codigo: String read FCodigo write FCodigo;
  property codigo_ncm: String read FCodigo_ncm write FCodigo_ncm;
  property excluido: Boolean read FExcluido write FExcluido;
  property id: Extended read FId write FId;
  property moeda: String read FMoeda write FMoeda;
  property multiplo: Extended read FMultiplo write FMultiplo;
  property nome: String read FNome write FNome;
  property observacoes: String read FObservacoes write FObservacoes;
  property peso_bruto: Extended read FPeso_bruto write FPeso_bruto;
  property preco_minimo: Extended read FPreco_minimo write FPreco_minimo;
  property preco_tabela: Extended read FPreco_tabela write FPreco_tabela;
  property tipo_ipi: String read FTipo_ipi write FTipo_ipi;
  property ipi: double read fipi write fipi;
  property ultima_alteracao: TDateTime read FUltima_alteracao write FUltima_alteracao;
  property unidade: String read FUnidade write FUnidade;
  property saldo_estoque : double read fSaldo_estoque write fSaldo_estoque;
  function ToJsonString: string;
  class function FromJsonString(AJsonString: string): TProdutos;
end;

TPrecoPadrao = class
private
  FPreco_tabela: Extended;
  FNome: String;
public
  property nome : string read FNome write FNome;
  property preco_tabela: Extended read FPreco_tabela write FPreco_tabela;
  function ToJsonString: string;
  class function FromJsonString(AJsonString: string): TPrecoPadrao;
end;

TListaProdutos = class
private
  FItems: TArray<TProdutos>;
public
  property Items: TArray<TProdutos> read FItems write FItems;
  destructor Destroy; override;
  function ToJsonString: string;
  class function FromJsonString(AJsonString: string): TListaProdutos;
end;

TCategoria = class
private
  FCategoria_pai_id: Extended;
  FExcluido: Boolean;
  FNome: String;
public
  property categoria_pai_id: Extended read FCategoria_pai_id write FCategoria_pai_id;
  property excluido: Boolean read FExcluido write FExcluido;
  property nome: String read FNome write FNome;
  function ToJsonString: string;
  class function FromJsonString(AJsonString: string): TCategoria;
end;
implementation

{TProdutos}


function TProdutos.ToJsonString: string;
begin
  result := TJson.ObjectToJsonString(self);
end;

class function TProdutos.FromJsonString(AJsonString: string): TProdutos;
begin
  result := TJson.JsonToObject<TProdutos>(AJsonString)
end;

{TCategoria}
function TCategoria.ToJsonString: string;
begin
  result := TJson.ObjectToJsonString(self);
end;

class function TCategoria.FromJsonString(AJsonString: string): TCategoria;
begin
  result := TJson.JsonToObject<TCategoria>(AJsonString)
end;

 {TPrecoPadrao}
function TPrecoPadrao.ToJsonString: string;
begin
  result := TJson.ObjectToJsonString(self);
end;

class function TPrecoPadrao.FromJsonString(AJsonString: string): TPrecoPadrao;
begin
  result := TJson.JsonToObject<TPrecoPadrao>(AJsonString)
end;


{TListaProdutos}

destructor TListaProdutos.Destroy;
var
  LItemsItem: tprodutos;
begin

 for LItemsItem in FItems do
   LItemsItem.Free;

  inherited;
end;

function TListaProdutos.ToJsonString: string;
begin
  result := TJson.ObjectToJsonString(self);
end;

class function TListaProdutos.FromJsonString(AJsonString: string): TListaProdutos;
begin
  result := TJson.JsonToObject<TListaProdutos>(AJsonString)
end;

{TEstoque}


function TEstoque.ToJsonString: string;
begin
  result := TJson.ObjectToJsonString(self);
end;

class function TEstoque.FromJsonString(AJsonString: string): TEstoque;
begin
  result := TJson.JsonToObject<TEstoque>(AJsonString)
end;


end.