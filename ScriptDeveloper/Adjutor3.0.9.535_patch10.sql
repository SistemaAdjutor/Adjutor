-- inicio 20.03.2019'
-- Atualizado em 28/08/2019

UPDATE  VERSAOSISTEMA 
SET VERSAOSISTEMA.SCRIPTADJUTOR = '3.0.9.535 patch 10',
       VERSAOSISTEMA.DATA   = '28.08.2019',
	    VERSAO = '3.0.9.535'
 where VERSAOSISTEMA.CODIGO = 1;

commit work;


COMMENT ON SEQUENCE GEN_SEQ_NFCE IS 'GERADOR DA NFCE (NF0001.NF_NUM_NFCE)';
COMMENT ON SEQUENCE GEN_MANIFESTACAONFE IS ' GERADOR ManifestacaoNFE.MFE_REGISTRO';
 
CREATE TABLE TURNO (
    TPR_CODIGO INTEGER NOT NULL,
    TRP_NOME VARCHAR(30) NOT NULL,
	EMP_CODIGO VARCHAR(3) ,
    TRP_ATIVO VARCHAR(1) NOT NULL,
    TRP_DIASSEMANAS INTEGER,
    TRP_INICIO TIME,
    TRP_FIM TIME,
    TRP_DESCRICAO_INT1 VARCHAR(30),
    TRP_TEMPOINTERVALO1 TIME,
    TRP_DESCRICAO_INT2 VARCHAR(30),
    TRP_TEMPOINTERVALO2 TIME,
    TRP_DESCRICAO_INT3 VARCHAR(30),
    TRP_TEMPOINTERVALO3 TIME);

ALTER TABLE TURNO ADD CONSTRAINT PK_TURNO PRIMARY KEY (TPR_CODIGO);

COMMENT ON TABLE TURNO IS 'CADASTRO DE TURNO DE PRODUCAO';
COMMENT ON COLUMN TURNO.TPR_CODIGO IS 'CODIGO DO TURNO DE PRODUCAO';
COMMENT ON COLUMN TURNO.TRP_NOME IS 'NOME DO TURNO';
COMMENT ON COLUMN TURNO.TRP_ATIVO IS 'S : ATIVO - N - NAO ATIVO';
COMMENT ON COLUMN TURNO.TRP_DIASSEMANAS IS 'DIAS POR SEMANA';
COMMENT ON COLUMN TURNO.TRP_INICIO IS 'INICIO DO TURNO';
COMMENT ON COLUMN TURNO.TRP_FIM IS 'HORA FIM DO TURNO';
COMMENT ON COLUMN TURNO.TRP_DESCRICAO_INT1 IS 'DESCRICAO DO PRIMEIRO INTERVALO';
COMMENT ON COLUMN TURNO.TRP_TEMPOINTERVALO1 IS 'TEMPO DO PRIMEIRO INTERVALO DO TURNO';
COMMENT ON COLUMN TURNO.TRP_DESCRICAO_INT2 IS 'DESCRICAO DO SEGUNDO INTERVALO';
COMMENT ON COLUMN TURNO.TRP_TEMPOINTERVALO2 IS 'TEMPO DO SEGUNDO INTERVALO DO TURNO';
COMMENT ON COLUMN TURNO.TRP_DESCRICAO_INT3 IS 'DESCRICAO DO TERCEIRO INTERVALO';
COMMENT ON COLUMN TURNO.TRP_TEMPOINTERVALO3 IS 'TEMPO DO TERCEIRO INTERVALO DO TURNO';
COMMENT ON COLUMN TURNO.EMP_CODIGO IS 'CHAVE REFERENCIA DA TABELA EMPRESA (EMP0000)';

CREATE SEQUENCE GEN_TURNO_PRODUCAO;

ALTER SEQUENCE GEN_TURNO_PRODUCAO RESTART WITH 1;
COMMENT ON SEQUENCE GEN_TURNO_PRODUCAO IS 'GERADOR TURNO.TPR_CODIGO';

SET TERM ^ ;

create trigger TURNO_bi for TURNO
active before insert position 0
as
begin
  if (new.tpr_codigo is null) then
    new.tpr_codigo = gen_id(gen_turno_producao,1);
end
^
SET TERM ; ^


ALTER TABLE OPERACOES ADD OPE_NOME VARCHAR(30);
ALTER TABLE OPERACOES ADD PCX_CODIGO VARCHAR(3);
ALTER TABLE OPERACOES ADD OPE_CUSTOHORA NUMERIC(18,5);
ALTER TABLE OPERACOES ADD EMP_CODIGO VARCHAR(3);
ALTER TABLE OPERACOES ADD OPE_NAOUSACARGA VARCHAR(1);


--ALTER TABLE OPERACOES ADD CONSTRAINT FK_OPERACOES_PCX FOREIGN KEY (PCX_CODIGO) REFERENCES PCX0000(PCX_CODIGO); // BANCO N√ÉO CONSISTENTE

UPDATE OPERACOES
SET  EMP_CODIGO = '001'
    ,OPE_NAOUSACARGA = 'N';

COMMENT ON COLUMN OPERACOES.OPE_CUSTOHORA IS 'VALOR CUSTO POR HORA DA OPERACAO NA FABRICA';
COMMENT ON COLUMN OPERACOES.OPE_NOME IS 'NOME DA OPERACAO';
COMMENT ON COLUMN OPERACOES.EMP_CODIGO IS 'CHAVE REFERENCIA DA TABELA EMPRESA (EMP0000)';
COMMENT ON COLUMN OPERACOES.PCX_CODIGO IS 'REFERENCIA do CENTRO DE CUSTO (PCX0000)';
COMMENT ON TABLE OPERACOES IS 'OPERACOES DE PRODUCAO/FASES DO PROCESSO';
COMMENT ON COLUMN OPERACOES.OPE_CODIGO IS 'IDENTIFICADOR DAS OPERACOES DE PRODUCAO';
COMMENT ON COLUMN OPERACOES.OPE_NAOUSACARGA IS 'NAO APONTA CARGA';


ALTER TABLE EQUIPAMENTO ADD EQP_REFER VARCHAR(15);
ALTER TABLE EQUIPAMENTO ADD EQP_DATAAQUISICAO DATE;
ALTER TABLE EQUIPAMENTO ADD EQP_ESPECIFICACAO VARCHAR(300);
ALTER TABLE EQUIPAMENTO ADD PCX_CODIGO VARCHAR(3);
ALTER TABLE EQUIPAMENTO ADD TPR_CODIGO INTEGER ;
ALTER TABLE EQUIPAMENTO ADD EMP_CODIGO VARCHAR(3);

ALTER TABLE EQUIPAMENTO ADD EQP_CERTIFICADO VARCHAR(50); 
ALTER TABLE EQUIPAMENTO ADD EQP_DATACALIBRACAO DATE;
ALTER TABLE EQUIPAMENTO ADD EQP_DATAVALIDACAO DATE; 

COMMENT ON COLUMN EQUIPAMENTO.EQP_REFER IS 'REFERENCIA DO EQUIPAMENTO - CODIGO';
COMMENT ON COLUMN EQUIPAMENTO.EQP_DESCRICAO IS 'DESCRICAO DO EQUIPAMENTO';
COMMENT ON COLUMN EQUIPAMENTO.EQP_CODIGO IS 'CODIGO AUTOINCREMENTAL DO EQUIPAMENTO';
COMMENT ON COLUMN EQUIPAMENTO.EQP_DATAAQUISICAO IS 'DATA DE AQUISICAO DO EQUIPAMENTO';
COMMENT ON COLUMN EQUIPAMENTO.EQP_ESPECIFICACAO IS 'DESCRICAO TECNICA DO EQUIPAMENTO';

COMMENT ON COLUMN EQUIPAMENTO.EQP_CERTIFICADO IS 'CERTIFICADO DE CALIBRACAO';
COMMENT ON COLUMN EQUIPAMENTO.EQP_DATACALIBRACAO IS 'DATA DE CALIBRACAO';
COMMENT ON COLUMN EQUIPAMENTO.EQP_DATAVALIDACAO IS 'DATA DE VALIDACAO DA CALIBRACAO';

ALTER TABLE PRD0000 ADD PRO_CODIGO INTEGER ;
ALTER TABLE PRD0000 ADD PRD_TIPOPECA_TERM VARCHAR ( 30);
ALTER TABLE PRD0000 ADD PRD_MATERIAL_TERM VARCHAR (15);
ALTER TABLE PRD0000 ADD PRD_DUREZASUPERFICIAL_TERM   VARCHAR (30);
ALTER TABLE PRD0000 ADD PRD_DUREZANUCLEO_TERM VARCHAR(30);
ALTER TABLE PRD0000 ADD PRD_PROFUNDIDADE_TERM VARCHAR (30);
ALTER TABLE PRD0000 ADD PRD_TAMANHOGRAO_TERM  VARCHAR (20);
ALTER TABLE PRD0000 ADD PRD_EHT_TERM   VARCHAR (24);
ALTER TABLE PRD0000 ADD PRD_DESENHO_TERM  VARCHAR (20); 

COMMENT ON COLUMN PRD0000.PRD_Tipopeca_term IS 'TIPO DE PECA';
COMMENT ON COLUMN PRD0000.PRD_Material_term is 'MATERIAL';
COMMENT ON COLUMN PRD0000.PRD_DurezaSuperficial_term  is 'DUREZA';
COMMENT ON COLUMN PRD0000.PRD_Profundidade_term is 'PROFUNDIDADE';

/*
COMMENT ON COLUMN PRD0000.PRD_DurezaNucleo_term is 
COMMENT ON COLUMN PRD0000.PRD_TamanhoGrao_term  is '
COMMENT ON COLUMN PRD0000.PRD_EHT_term is 
COMMENT ON COLUMN PRD0000.PRD_desenho_term is
*/


ALTER TABLE PRMT0001 ADD PMT_HAB_TERMICO VARCHAR(1);
COMMENT ON COLUMN PRMT0001.PMT_HAB_TERMICO IS 'HABILITAR CAMPOS TRATAMENTO TERMICO DOS PRODUTOS';

UPDATE PRMT0001 SET PMT_HAB_TERMICO = 'N';

COMMIT WORK;

/* LISTA DE PRECOS */
ALTER TABLE PRECOS0000 ADD PRE_DATAELABORACAO TIMESTAMP;
ALTER TABLE PRECOS0000 ADD PRE_ACORDOCOM INTEGER;
ALTER TABLE PRECOS0000 ADD PRE_REVISAO INTEGER;
ALTER TABLE PRECOS0000 ADD PRE_DATAREVISAO TIMESTAMP;
ALTER TABLE PRECOS0000 ADD PRE_ISO_FORM VARCHAR(10);
ALTER TABLE PRECOS0000 ADD PRE_OBSGERAIS BLOB SUB_TYPE 0;
COMMENT ON COLUMN PRECOS0000.PRE_OBSGERAIS IS 'OBSERVACOES GERAIS DO ACORDO';

COMMENT ON COLUMN PRECOS0000.PRE_DATAELABORACAO IS 'DATA DA ELABORACAO DA LISTA DE PRECO';
COMMENT ON COLUMN PRECOS0000.PRE_ACORDOCOM IS 'ACORDO COMERCIAL';
COMMENT ON COLUMN PRECOS0000.PRE_REVISAO IS 'NUMERO DA REVISAO';
COMMENT ON COLUMN PRECOS0000.PRE_DATAREVISAO IS 'DATA DA ULTIMA REVISAO';
COMMENT ON COLUMN PRECOS0000.PRE_ISO_FORM IS 'ISO FORMULARIO';

ALTER TABLE precos0001 ADD PRE_PREV_ENTREGA INTEGER;
COMMENT ON COLUMN precos0001.PRE_PREV_ENTREGA IS 'PREVISAO DE ENTREGA EM DIAS ';


CREATE TABLE SERVICO (
    SRV_CODIGO     INTEGER NOT NULL,
	EMP_CODIGO VARCHAR(3),
    SRV_NOME  VARCHAR(60)
);

COMMENT ON COLUMN SERVICO.SRV_CODIGO IS 'IDENTIFICADOR DO SERVICO';
COMMENT ON COLUMN SERVICO.SRV_NOME IS 'NOME DO SERVICO';
COMMENT ON TABLE SERVICO IS 'CADASTRO DE SERVICOS DE PRODUCAO';
COMMENT ON COLUMN SERVICO.EMP_CODIGO IS 'CHAVE REFERENCIA DA TABELA EMPRESA (EMP0000)';

CREATE SEQUENCE GEN_SERVICO_ID;
COMMENT ON SEQUENCE GEN_SERVICO_ID IS 'GERADOR SERVICO.SRV_CODIGO';

SET TERM ^ ;

create trigger servico_bi for servico
active before insert position 0
as
begin
  if (new.SRV_codigo is null) then
    new.SRV_codigo = gen_id(gen_servico_id,1);
end
^

SET TERM ; ^


CREATE TABLE PROCESSOS (
    PRO_CODIGO INTEGER NOT NULL,
	EMP_CODIGO VARCHAR(3),
    PRO_DESCRICAO VARCHAR(100),
	TPR_CODIGO INTEGER
	
	);

ALTER TABLE PROCESSOS ADD CONSTRAINT PK_PROCESSOS PRIMARY KEY (PRO_CODIGO);
	
COMMENT ON COLUMN PROCESSOS.PRO_CODIGO IS 'CODIGO DE IDENTIFICADOR DO PROCESSO';
COMMENT ON COLUMN PROCESSOS.PRO_DESCRICAO IS 'DESCRICAO DA PRODUCAO';
COMMENT ON TABLE PROCESSOS IS 'PROCESSOS DE PRODUCAO';
COMMENT ON COLUMN PROCESSOS.EMP_CODIGO IS 'CHAVE REFERENCIA DA TABELA EMPRESA (EMP0000)';
COMMENT ON COLUMN PROCESSOS.TPR_CODIGO IS 'tipo de processo';

CREATE SEQUENCE GEN_PROCESSOS;
COMMENT ON SEQUENCE GEN_PROCESSOS IS 'GERADOR PROCESSOS.PRO_CODIGO';


SET TERM ^ ;
create trigger processos_bi for processos
active before insert position 0
as
begin
  if (new.pro_codigo is null) then
    new.pro_codigo = gen_id(gen_processos,1);
end^

SET TERM ; ^

ALTER TABLE PRD0000 ADD CONSTRAINT FK_PRD0000_PROCESSO
FOREIGN KEY (PRO_CODIGO) REFERENCES PROCESSOS(PRO_CODIGO)
ON DELETE SET NULL ON UPDATE CASCADE;


CREATE TABLE PROCESSOS_OPERACOES (
    POP_CODIGO INTEGER NOT NULL,
    PRO_CODIGO INTEGER NOT NULL,
    OPE_CODIGO INTEGER NOT NULL,
	POP_TEMPOESTIMADO TIME,
	POP_SEQ INTEGER);

ALTER TABLE PROCESSOS_OPERACOES ADD CONSTRAINT PK_PROCESSOS_OPERACOES  PRIMARY KEY (POP_CODIGO);
ALTER TABLE PROCESSOS_OPERACOES ADD CONSTRAINT FK_PROCESSOS_OPERACOES_1 FOREIGN KEY (PRO_CODIGO) REFERENCES PROCESSOS(PRO_CODIGO);
ALTER TABLE PROCESSOS_OPERACOES ADD CONSTRAINT FK_PROCESSOS_OPERACOES FOREIGN KEY (OPE_CODIGO) REFERENCES OPERACOES(OPE_CODIGO);

COMMENT ON COLUMN PROCESSOS_OPERACOES.POP_CODIGO IS 'IDENTIFICADOR DO PROCESSOS OPERACOES';
COMMENT ON COLUMN PROCESSOS_OPERACOES.PRO_CODIGO IS 'IDENTIFICADOR DO PROCESSO';
COMMENT ON TABLE PROCESSOS_OPERACOES IS 'DEFINICAO DO PROCESSO DE PRODUCAO';
COMMENT ON COLUMN PROCESSOS_OPERACOES.OPE_CODIGO IS 'REFERENCIA DE OPERACOES';
COMMENT ON COLUMN PROCESSOS_OPERACOES.POP_SEQ IS 'SEQUENCIA DO PROCESSO INDUSTRIALIZACAO';
COMMENT ON COLUMN PROCESSOS_OPERACOES.POP_TEMPOESTIMADO IS 'TEMPO ESTIMADO DA OPERACAO';

CREATE SEQUENCE GEN_PROCESSOS_OPERACOES_ID;

COMMENT ON SEQUENCE GEN_PROCESSOS_OPERACOES_ID IS 'GERADOR SEQ EM PROCESSOS_OPERACOES.POP_CODIGO';

SET TERM ^ ;

create trigger processos_operacoes_bi for processos_operacoes
active before insert position 0
as
begin
  if (new.pop_codigo is null) then
    new.pop_codigo = gen_id(gen_processos_operacoes_id,1);
end^

SET TERM ; ^

 
CREATE TABLE CUSTOINDUST(
    CIO_CODIGO INTEGER NOT NULL,
    EMP_CODIGO VARCHAR(3),
    CIO_MES INTEGER NOT NULL,
    CIO_ANO INTEGER NOT NULL,
	SRV_CODIGO INTEGER , 
    CIO_CUSTOS NUMERIC(15,2),
    CIO_DESPESAS NUMERIC(15,2),
    CIO_IMPOSTOS NUMERIC(15,2),
    CIO_MKP NUMERIC(15,2),
    CIO_REPORTE NUMERIC(15,2),
	CIO_PV NUMERIC(15,2)
	);

ALTER TABLE CUSTOINDUST ADD CONSTRAINT PK_CUSTOINDUST PRIMARY KEY (CIO_CODIGO);

COMMENT ON TABLE CUSTOINDUST IS 'CUSTOS DE INDUSTRIALIZACAO DE SERVICOS DE PRODUCAO';
COMMENT ON COLUMN CUSTOINDUST.CIO_CODIGO IS 'CODIGO IDENTIFICADOR DE CUSTO';
COMMENT ON COLUMN CUSTOINDUST.EMP_CODIGO IS 'IDENTIFICACAO DA EMPRESA';
COMMENT ON COLUMN CUSTOINDUST.CIO_MES IS 'MES REFERENCIA';
COMMENT ON COLUMN CUSTOINDUST.CIO_ANO IS 'ANO REFERENCIA';
COMMENT ON COLUMN CUSTOINDUST.CIO_CUSTOS IS 'VALOR DOS CUSTOS';
COMMENT ON COLUMN CUSTOINDUST.CIO_DESPESAS IS 'DESPESAS DA OPERACAO';
COMMENT ON COLUMN CUSTOINDUST.CIO_IMPOSTOS IS 'IMPOSTOS IMBUTIDO NA OPERACAO';
COMMENT ON COLUMN CUSTOINDUST.CIO_MKP IS 'MARKUP (LUCRO PREVISTO) EM PROCENTAGEM';
COMMENT ON COLUMN CUSTOINDUST.CIO_REPORTE IS 'REPORTE HORAS DE TRABALHO';

CREATE SEQUENCE GEN_CUSTOINDUST_ID;
COMMENT ON SEQUENCE GEN_CUSTOINDUST_ID IS 'GERADOR CUSTOINDUST.CIO_CODIGO';

SET TERM ^ ;

create trigger custoindust_bi for custoindust
active before insert position 0
as
begin
  if (new.cio_codigo is null) then
    new.cio_codigo = gen_id(gen_custoindust_id,1);
end^

SET TERM ; ^

/* ORCAMENTO DE PRODU√á√ÉO */

CREATE TABLE ORCAMENTO_PROD (
    ORC_CODIGO         INTEGER NOT NULL,
    EMP_CODIGO         VARCHAR(3) NOT NULL,
    ORC_DESCRICAO      VARCHAR(250),
    ORC_DATAAQUISICAO  TIMESTAMP,
    CLI_CODIGO         VARCHAR(5),
	REP_CODIGO         VARCHAR(3),
    ORC_CLIENTE        VARCHAR(100),
	ORC_CEP			   VARCHAR(8),
	ORC_ENDERECO       VARCHAR(100),
	ORC_BAIRRO		   VARCHAR(60),
	ORC_CIDADE 		  VARCHAR(60),
	CID_CODIGO 		   INTEGER DEFAULT 0,
	ORC_UF			   VARCHAR(2),
	ORC_CONTATO        VARCHAR(100),
    ORC_EMAIL          VARCHAR(100),
    ORC_FONE           VARCHAR(12),
    ORC_FAX            VARCHAR(12),
    ORC_DIAS_ENTREGA   INTEGER,
    ORC_DIAS_VALIDADE  INTEGER,   
	ORC_DATA_PROX_CONCAT DATE,
    FPG_REGISTRO       INTEGER,
    ORC_SITUACAO       VARCHAR(1),
    ORC_VLR_TOTAL      NUMERIC(15,4),
    ORC_OBSERVACAO     BLOB SUB_TYPE 0 SEGMENT SIZE 80,
    ORC_OBS_TRANSP     BLOB SUB_TYPE 0 SEGMENT SIZE 80,
	TRF_REGISTRO       INTEGER,
	ORC_CGCCPF 		   VARCHAR(14),
	ORC_REVISAO 	   INTEGER,
	PCL_CODIGO 		   VARCHAR(3)
	
);

ALTER TABLE ORCAMENTO_PROD ADD CONSTRAINT PK_ORCAMENTO_PROD PRIMARY KEY (ORC_CODIGO);


COMMENT ON TABLE ORCAMENTO_PROD IS 'PEDIDO DE ORCAMENTO DE PRODUCAO - INDUSTRIALIZACAO';

COMMENT ON COLUMN ORCAMENTO_PROD.ORC_CODIGO IS 'IDENTIFICADOR DE ORCAMENTO';
COMMENT ON COLUMN ORCAMENTO_PROD.EMP_CODIGO IS 'EMPRESA DO PEDIDO ORCAMENTO';
COMMENT ON COLUMN ORCAMENTO_PROD.ORC_DESCRICAO IS 'DESCRICAO DO ORCAMENTO';
COMMENT ON COLUMN ORCAMENTO_PROD.ORC_DATAAQUISICAO IS 'DATA DE INCLUSAO';
COMMENT ON COLUMN ORCAMENTO_PROD.CLI_CODIGO IS 'IDENTIFICADOR DO CLIENTE';
COMMENT ON COLUMN ORCAMENTO_PROD.ORC_CLIENTE IS 'CLIENTE NAO CADASTRADO';
COMMENT ON COLUMN ORCAMENTO_PROD.ORC_EMAIL IS 'EMAIL DO CLIENTE NAO CADASTRADO';
COMMENT ON COLUMN ORCAMENTO_PROD.ORC_FONE IS 'FONE';
COMMENT ON COLUMN ORCAMENTO_PROD.ORC_FAX IS 'FAX';
COMMENT ON COLUMN ORCAMENTO_PROD.ORC_DIAS_ENTREGA IS 'DIAS DE ENTREGA';
COMMENT ON COLUMN ORCAMENTO_PROD.ORC_DIAS_VALIDADE IS 'DIAS VALIDADE';
COMMENT ON COLUMN ORCAMENTO_PROD.ORC_ENDERECO IS 'ENDERECO';
COMMENT ON COLUMN ORCAMENTO_PROD.FPG_REGISTRO IS 'FORMA DE PAGAMENTO';
COMMENT ON COLUMN ORCAMENTO_PROD.ORC_SITUACAO IS 'P= Pendente; E = Em Andamento; A = Aprovado ; R = RECUSADO ; C= CANCELADO ; V - Em revis√£o';
COMMENT ON COLUMN ORCAMENTO_PROD.ORC_VLR_TOTAL IS 'VALOR TOTAL';
COMMENT ON COLUMN ORCAMENTO_PROD.ORC_OBSERVACAO IS 'OBSERVACOES';
COMMENT ON COLUMN ORCAMENTO_PROD.ORC_OBS_TRANSP IS 'INFORMACOES DE TRANSPORTADORAS';
COMMENT ON COLUMN ORCAMENTO_PROD.ORC_DATA_PROX_CONCAT IS 'DATA DO PROXIMO CONTATO';
COMMENT ON COLUMN ORCAMENTO_PROD.ORC_CEP IS 'CEP DO CLIENTE';
COMMENT ON COLUMN ORCAMENTO_PROD.ORC_BAIRRO IS 'BAIRRO DO CLIENTE';
COMMENT ON COLUMN ORCAMENTO_PROD.ORC_UF IS 'ESTADO';
COMMENT ON COLUMN ORCAMENTO_PROD.ORC_CONTATO IS 'CONTATO PARA CLIENTE EM ORCAMENTO';
COMMENT ON COLUMN ORCAMENTO_PROD.ORC_CIDADE IS 'NOME DA CIDADE DO CLIENTE';
COMMENT ON COLUMN ORCAMENTO_PROD.CID_CODIGO IS 'CHAVE REFERENCIA DE CIDADE (CID0000)';
COMMENT ON COLUMN ORCAMENTO_PROD.TRF_REGISTRO IS 'CHAVE REFERENCIA TRF (TAREFAS_CRM)';
COMMENT ON COLUMN CLI0000.CLI_CIDADE IS 'NOME DA CIDADE DO CLIENTE';
COMMENT ON COLUMN ORCAMENTO_PROD.REP_CODIGO IS 'CHAVE REFERENCIA DO VENDEDOR';
COMMENT ON COLUMN ORCAMENTO_PROD.ORC_REVISAO IS 'REVISAO DO ORCAMENTO';
 COMMENT ON COLUMN ORCAMENTO_PROD.ORC_REVISAO IS 'REVISAO DO ORCAMENTO';
COMMENT ON COLUMN CID0000.CID_CODIGO IS 'IDENTIFICADOR DA CIDADE';
COMMENT ON COLUMN CLI0000.CID_CODIGO IS 'CHAVE REFERENCIA DE CIDADE (CID0000)';
COMMENT ON COLUMN EMP0000.CID_CODIGO IS 'CHAVE REFERENCIA DE CIDADE (CID0000)';
COMMENT ON COLUMN FOR0000.CID_CODIGO IS 'CHAVE REFERENCIA DE CIDADE (CID0000)';
COMMENT ON COLUMN TRP0000.CID_CODIGO IS 'CHAVE REFERENCIA DE CIDADE (CID0000)';
COMMENT ON TABLE CID0000 IS 'CADASTRO DE CIDADES';
COMMENT ON COLUMN FOR0000.FOR_CIDADE IS 'NOME DA CIDADE DO FORNECEDOR';
COMMENT ON COLUMN FOR0000.FOR_RAZAO IS 'RAZAO SOCIAL DO FORNECEDOR';
COMMENT ON COLUMN ORCAMENTO_PROD.ORC_CGCCPF IS 'CPF/CGC DO CLIENTE';
COMMENT ON COLUMN ORCAMENTO_PROD.PCL_CODIGO IS 'PRAZO DE PAGAMENTO (PCL0000)';

CREATE SEQUENCE GEN_ORCAMENTO_PROD;
COMMENT ON SEQUENCE GEN_ORCAMENTO_PROD IS 'GERADOR ORCAMENTO_PROD.ORC_CODIGO';

SET TERM ^ ;

create trigger orcamento_prod_bi for orcamento_prod
active before insert position 0
as
begin
  if (new.orc_codigo is null) then
    new.orc_codigo = gen_id(gen_orcamento_prod,1);
end^

SET TERM ; ^

ALTER TABLE ORCAMENTO_PROD ADD CONSTRAINT FK_ORCAMENTO_PRAZO FOREIGN KEY (PCL_CODIGO) REFERENCES PCL0000(PCL_CODIGO) ON DELETE SET NULL ON UPDATE CASCADE;
--ALTER TABLE ORCAMENTO_PROD ADD CONSTRAINT FK_ORCAMENTO_CLIENTE FOREIGN KEY (CLI_CODIGO) REFERENCES CLI0000(CLI_CODIGO) ON DELETE SET NULL ON UPDATE CASCADE;
ALTER TABLE ORCAMENTO_PROD ADD CONSTRAINT FK_ORCAMENTO_REPRE FOREIGN KEY (REP_CODIGO) REFERENCES REP0000(REP_CODIGO) ON DELETE SET NULL ON UPDATE CASCADE;

--ALTER TABLE ORCAMENTO_PROD ADD CONSTRAINT FK_ORCAMENTO_FORMAPGTO FOREIGN KEY (FPG_REGISTRO) REFERENCES FORMA_PAGAMENTO(FPG_REGISTRO) ON DELETE SET NULL ON UPDATE CASCADE;

CREATE TABLE ORCIT_PROD (
    OIP_CODIGO                  INTEGER NOT NULL,
    ORC_CODIGO                  INTEGER NOT NULL,
    PRO_CODIGO                  INTEGER,
    PRD_REFER                   VARCHAR(20),
    PRD_CODIGO                  VARCHAR(5),
    OIP_UND                     VARCHAR(3),
    OIP_SEQ                     INTEGER,
    OIP_DESCRICAO               VARCHAR(100),
	SRV_CODIGO					INTEGER,
    OIP_TIPOPECA_TERM           VARCHAR(30),
    OIP_MATERIAL_TERM           VARCHAR(15),
    OIP_PESO                    NUMERIC(15,8),
    OIP_PROFUNDIDADE_TERM       VARCHAR(35),
    OIP_DUREZASUPERFICIAL_TERM  VARCHAR(20),
    OIP_DUREZANUCLEO_TERM       VARCHAR(20),
    PRDCO_CODIGO_ORIGINAL       VARCHAR(60),
    OIP_TAMANHOGRAO_TERM        VARCHAR(20),
    OIP_EHT_TERM                VARCHAR(10),
    OIP_DESENHO_TERM            VARCHAR(20),
    OIP_QDE                     NUMERIC(15,8),
    OIP_PRECO                   NUMERIC(15,8),
    OIP_TOTAL                   NUMERIC(15,8),
    OIP_PESOTOTAL               NUMERIC(15,8),
    OIP_PRAZOENTREGA            INTEGER,
    OIP_IMAGEM                  BLOB SUB_TYPE 0 SEGMENT SIZE 80

);
ALTER TABLE ORCIT_PROD ADD CONSTRAINT PK_ORCIT_PROD PRIMARY KEY (OIP_CODIGO);

---ALTER TABLE ORCIT_PROD ADD CONSTRAINT FK_ORCIT_PROD_1 FOREIGN KEY (ORC_CODIGO) REFERENCES ORCAMENTO_PROD(ORC_CODIGO);

    
COMMENT ON COLUMN ORCIT_PROD.ORC_CODIGO IS 'CHAVE REFERENCIA ORCAMENTO (orcamento_prod)';
COMMENT ON COLUMN ORCIT_PROD.PRO_CODIGO IS 'CHAVE REFERENCIA DO PROCESSO (PROCESSOS)';
COMMENT ON COLUMN ORCIT_PROD.PRD_REFER IS 'REFERENCIA DO PRODUTO (PRD0000)';
COMMENT ON COLUMN ORCIT_PROD.PRD_CODIGO IS 'IDENTIFICADOR DO PRODUTO';
COMMENT ON COLUMN ORCIT_PROD.OIP_CODIGO IS 'CODIGO IDENTIFICADOR DO ITEM';
COMMENT ON COLUMN ORCIT_PROD.OIP_SEQ IS 'SEQUENCIA NO ITEM';
COMMENT ON COLUMN ORCIT_PROD.SRV_CODIGO IS'REFERENCIA DE SERVICOS ';
COMMENT ON COLUMN ORCIT_PROD.OIP_QDE IS 'QUANTIDADE';
COMMENT ON COLUMN ORCIT_PROD.OIP_PESO IS 'PESO TOTAL';
COMMENT ON COLUMN ORCIT_PROD.OIP_PRECO IS 'VALOR COMERCIAL';
COMMENT ON COLUMN ORCIT_PROD.OIP_PRAZOENTREGA IS 'PRAZO DE ENTREGA';
COMMENT ON COLUMN ORCIT_PROD.OIP_DESCRICAO IS 'DESCRICAO COMPLETA';
COMMENT ON COLUMN ORCIT_PROD.OIP_IMAGEM IS 'IMAGEM';
COMMENT ON TABLE ORCIT_PROD IS 'ITEM DE ORCAMENTO DE PRODUCAO';
COMMENT ON COLUMN ORCIT_PROD.OIP_TIPOPECA_TERM IS 'TIPO PECA';
COMMENT ON COLUMN ORCIT_PROD.OIP_MATERIAL_TERM IS 'MATERIAL';
COMMENT ON COLUMN ORCIT_PROD.OIP_PROFUNDIDADE_TERM IS 'PROFUNDIDADE CAMADA';
COMMENT ON COLUMN ORCIT_PROD.OIP_DUREZASUPERFICIAL_TERM IS 'DUREZA SUPERFICIAL';
COMMENT ON COLUMN ORCIT_PROD.OIP_DUREZANUCLEO_TERM IS 'DUREZA NUCLEO';
COMMENT ON COLUMN ORCIT_PROD.PRDCO_CODIGO_ORIGINAL IS 'CODIGO ORIGINAL/PRODUTO DO CLIENTE';
COMMENT ON COLUMN ORCIT_PROD.OIP_TAMANHOGRAO_TERM IS 'TAMANHO GRAO';
COMMENT ON COLUMN ORCIT_PROD.OIP_EHT_TERM IS 'EHT';
COMMENT ON COLUMN ORCIT_PROD.OIP_DESENHO_TERM IS 'DESENHO';
COMMENT ON COLUMN ORCIT_PROD.OIP_TOTAL IS 'VALOR TOTAL';
COMMENT ON COLUMN ORCIT_PROD.OIP_UND IS 'UNIDADE DO PRODUTO';

CREATE SEQUENCE GEN_ORCIT_PROD;
COMMENT ON SEQUENCE GEN_ORCIT_PROD IS 'GERADOR DE SEQUENCIA ORCIT_PROD.OIP_CODIGO';
SET TERM ^ ;

create trigger orcit_prod_bi for orcit_prod 
active before insert position 0
as
begin
  if (new.oip_codigo is null) then
    new.oip_codigo = gen_id(gen_orcit_prod,1);
end^

SET TERM ; ^


COMMENT ON COLUMN PED0000.ENDERECO_ENTREGA IS 'CHAVE REFERENCIA DE ENDERECO ENTREGA DO CLIENTE (ENDERECO)';
COMMENT ON COLUMN PED0000.FPG_REGISTRO IS 'CHAVE REFERENCIA A FORMA PAGAMENTO  (FORMA_PAGAMENTO)';
COMMENT ON COLUMN PED0000.PED_VLTOTAL_LIQ IS 'VALOR TOTAL LIQUIDO DO PEDIDO';
COMMENT ON COLUMN PED0000.PED_VLFATURADO IS 'VALOR TOTAL QUE JA FOI FATURADO NO PEDIDO, GERALMENTE PEDIDO PARCIAL';
COMMENT ON COLUMN PED0000.REP_CODIGO IS 'CHAVE REFERENCIA DO VENDEDOR (REP0000)';
COMMENT ON COLUMN PED0000.PCX_CODIGO IS 'CHAVE REFERENCIA DO CENTRO DE CUSTO (PCX0000)';
COMMENT ON COLUMN PED0000.PED_MOTIVO_CANCELAMENTO IS 'MOTIVO DO CANCELAMENTO DO PEDIDO';

ALTER TABLE PED0000 ADD ORC_CODIGO INTEGER;
COMMENT ON COLUMN PED0000.ORC_CODIGO IS 'CHAVE REFERENCIA DO ORCAMENTO INDUSTRIAL (ORCAMENTO_PROD)';

ALTER TABLE PRMT0001 ADD PMT_ORC_GERAPEDIDO VARCHAR(1) DEFAULT 'N';
ALTER TABLE PRMT0001 ADD PMT_ORC_GERAACORDO VARCHAR(1) DEFAULT 'S';

COMMENT ON COLUMN PRMT0001.PMT_ORC_GERAPEDIDO IS 'ORCAMENTO DE PRODUCAO GERA PEDIDO AUTOMATICAMENTE NA APROVACAO';
COMMENT ON COLUMN PRMT0001.PMT_ORC_GERAACORDO IS 'ORCAMENTO DE PRODUCAO GERA O ACORDO AUTOMATICAMENTE NA APROVACAO';

UPDATE PRMT0001
SET PMT_ORC_GERAPEDIDO = 'N', PMT_ORC_GERAACORDO = 'N';

COMMIT WORK;

COMMENT ON TABLE PRD_LINHA IS 'LINHAS DOS PRODUTOS';
COMMENT ON TABLE PRD_TIPO IS 'TIPO DE PRODUTO';
COMMENT ON TABLE PRD_UNIDADE IS 'UNIDADES DE MEDIDA DE PRODUTO';
COMMENT ON TABLE SPED_ARQUIVOS IS 'ARQUIVOS DE SPED GERADOS POR MES/ANO';
COMMENT ON TABLE NF0001_HISTORICO IS 'HISTORICO DE RETORNO do SEFAZ/SCHEMAS';
COMMENT ON TABLE IBPT0001 IS 'CABECALHO DO ARQUIVO IBPT';
COMMENT ON TABLE IBPT0000 IS 'O VALOR APROXIMADO DOS TRIBUTOS DOS PRODUTOS';
COMMENT ON TABLE HISTORICO_EXPE IS 'HISTORICO DA EXPEDICAO';
COMMENT ON TABLE FOR_PROD IS 'FORNECEDORES DO PRODUTO';
COMMENT ON TABLE ENDERECO IS 'CADASTRO DE ENDERECOS DO CLIENTE';


CREATE TABLE ORDEMPRODUCAO (
    OPR_CODIGO         INTEGER NOT NULL ,
	EMP_CODIGO         VARCHAR(3) NOT NULL,
    OPR_EMISSAO        TIMESTAMP,
    PED_CODIGO         VARCHAR(7),
    OPR_CONCLUSAO      TIMESTAMP,
    OPR_STATUS         VARCHAR(1),
    CLI_CODIGO         VARCHAR(5),
    OPR_VALIDADE       TIMESTAMP,
    OPR_DTENTREGA      TIMESTAMP
);

ALTER TABLE ORDEMPRODUCAO  ADD CONSTRAINT PK_ORDEMPRODUCAO PRIMARY KEY (OPR_CODIGO);

ALTER TABLE ORDEMPRODUCAO ADD CONSTRAINT FK_ORDEMPRODUCAO_CLIENTE
FOREIGN KEY (CLI_CODIGO) REFERENCES CLI0000(CLI_CODIGO)
ON UPDATE CASCADE;

CREATE SEQUENCE GEN_ORDEMPRODUCAO;

SET TERM ^ ;

create trigger ORDEMPRODUCAO_bi for ORDEMPRODUCAO
active before insert position 0
as
begin
  if (new.OPR_CODIGO is null) then
    new.OPR_CODIGO = gen_id(gen_ORDEMPRODUCAO,1);
end
^

SET TERM ; ^


COMMENT ON TABLE ORDEMPRODUCAO IS 'ORDEM DE PRODUCAO INDUSTRIAL';
COMMENT ON COLUMN ORDEMPRODUCAO.OPR_CODIGO IS 'IDENTIFICADOR DO ORDEM DE PRODUCAO';
COMMENT ON COLUMN ORDEMPRODUCAO.OPR_STATUS IS ' P - PENDENTE ; L - LIBERADOS;F - FECHADAS CONCLUIDAS; C - CANCELADAS';
COMMENT ON COLUMN ORDEMPRODUCAO.EMP_CODIGO IS 'CHAVE REFERENCIA DA TABELA EMPRESA (EMP0000)';
COMMENT ON COLUMN ORDEMPRODUCAO.OPR_EMISSAO IS 'DATA DA LIBERACAO';
COMMENT ON COLUMN ORDEMPRODUCAO.PED_CODIGO IS 'CHAVE DE REFERENCIA DO PEDIDO (PED0000)';
COMMENT ON COLUMN ORDEMPRODUCAO.OPR_CONCLUSAO IS 'CONCLUSAO DA ORDEM DE PRODUCAO';
COMMENT ON COLUMN ORDEMPRODUCAO.CLI_CODIGO IS 'CHAVE REFERENCIA DO CLIENTE (CLI0000)';
COMMENT ON COLUMN ORDEMPRODUCAO.OPR_DTENTREGA IS 'PREVISAO DE ENTREGA';

CREATE TABLE ITEM_ORDEMPRODUCAO (
    IOP_CODIGO          INTEGER NOT NULL,
    PRD_CODIGO          VARCHAR(5),
    OPR_CODIGO          INTEGER,
    IOP_SEQUENCIA       INTEGER,
    IOP_NORDEM          VARCHAR(20),
    IOP_QUANTIDADE      NUMERIC(18,5),
    IOP_PESO            NUMERIC(18,5),
    IOP_STATUS          VARCHAR(1),
    IOP_DATA_INICIO     TIMESTAMP,
    IOP_DATA_CONCLUSAO  TIMESTAMP,
    IOP_DATA_PREVISTA   TIMESTAMP,
    IOP_PRECO           NUMERIC(18,5),
    IOP_CUSTO           NUMERIC(18,5),
    PRF_REGISTRO        INTEGER
);


ALTER TABLE ITEM_ORDEMPRODUCAO ADD CONSTRAINT PK_ITEM_ORDEMPRODUCAO PRIMARY KEY (IOP_CODIGO);

COMMENT ON COLUMN ITEM_ORDEMPRODUCAO.IOP_CODIGO IS 'IDENTIFICADOR DO ITEM DE PRODUCAO';
COMMENT ON COLUMN ITEM_ORDEMPRODUCAO.PRD_CODIGO IS 'CHAVE IDENTIFICADOR DO PRODUTO';
COMMENT ON COLUMN ITEM_ORDEMPRODUCAO.OPR_CODIGO IS 'CHAVE DO CABECALHO DA ORDEM PRODUCAO';
COMMENT ON COLUMN ITEM_ORDEMPRODUCAO.IOP_SEQUENCIA IS 'SEQUENCIA DA ORDEM DE PRODUCAO';
COMMENT ON COLUMN ITEM_ORDEMPRODUCAO.IOP_NORDEM IS 'NUMERO DA ORDEM DE PRODUCAO (OPR_CODIGO + SEQ)';
COMMENT ON COLUMN ITEM_ORDEMPRODUCAO.IOP_QUANTIDADE IS 'QUANTIDADE DE PRODUCAO';
COMMENT ON COLUMN ITEM_ORDEMPRODUCAO.IOP_PESO IS 'PESO UNITARIO';
COMMENT ON COLUMN ITEM_ORDEMPRODUCAO.IOP_CUSTO IS 'CUSTO UNITARIO';
COMMENT ON COLUMN ITEM_ORDEMPRODUCAO.IOP_PRECO IS 'PRECO UNITARIO';
COMMENT ON COLUMN ITEM_ORDEMPRODUCAO.PRF_REGISTRO IS 'CHAVE ESTRANGEIRO DO ITEM DO PEDIDO (PED_IT01)';
COMMENT ON TABLE  ITEM_ORDEMPRODUCAO IS 'ITEM DA ORDEM DE PRODUCAO INDUSTRIAL';

CREATE SEQUENCE GEN_ITEM_ORDEMPRODUCAO;

SET TERM ^ ;

create trigger item_ordemproducao_bi for item_ordemproducao
active before insert position 0
as
begin
  if (new.iop_codigo is null) then
    new.iop_codigo = gen_id(gen_item_ordemproducao,1);
end
^

SET TERM ; ^

ALTER TABLE ITEM_ORDEMPRODUCAO ADD CONSTRAINT FK_ITEM_ORDEMPRODUCAO_PRDODUTO 
FOREIGN KEY (PRD_CODIGO) REFERENCES PRD0000(PRD_CODIGO)
ON DELETE SET NULL ON UPDATE CASCADE;

ALTER TABLE ITEM_ORDEMPRODUCAO ADD CONSTRAINT FK_ORDEMPRODUCAO_MASTER 
FOREIGN KEY (OPR_CODIGO) REFERENCES ORDEMPRODUCAO(OPR_CODIGO)
ON DELETE CASCADE ON UPDATE CASCADE;

ALTER TABLE ITEM_ORDEMPRODUCAO ADD CONSTRAINT FK_ORDEMPRODUCAO_ITEM
FOREIGN KEY (PRF_REGISTRO) REFERENCES PED_IT01(PRF_REGISTRO);

CREATE TABLE CARGA (
    CAR_CODIGO      INTEGER NOT NULL,
    DATA_CARGA      TIMESTAMP,
    CAR_STATUS      VARCHAR(1),
    CAR_DATAINI     TIMESTAMP,
    CAR_DATAFIM     TIMESTAMP,
    CAR_PESOTOTAL   NUMERIC(18,4),
    CAR_CUSTO       NUMERIC(18,4),
    CAR_PRECOTOTAL  NUMERIC(18,4),
	CAR_TEMPOGASTO NUMERIC(18,4)
);


ALTER TABLE CARGA  ADD CONSTRAINT PK_CARGA PRIMARY KEY (CAR_CODIGO);

COMMENT ON COLUMN CARGA.CAR_CODIGO IS 'IDENTIFICADOR DA CARGA';
COMMENT ON COLUMN CARGA.DATA_CARGA IS 'DATA DA CARGA';
COMMENT ON COLUMN CARGA.CAR_STATUS IS 'STATUS P - PENDENTE ; C - CONFIRMADO ;F- FINALIZADO OU CONCLUIDO ;A- CANCELADO E - EM ANDAMENTO';
COMMENT ON TABLE CARGA IS 'CARGA DE PROCESSO DE PRODUCAO';
COMMENT ON COLUMN CARGA.CAR_DATAINI IS 'INICIO DO APONTAMENTO CARGA';
COMMENT ON COLUMN CARGA.CAR_DATAFIM IS 'FIM DO PROCESSO';
COMMENT ON COLUMN CARGA.CAR_PESOTOTAL IS 'PESO TAL DA CARGA';
COMMENT ON COLUMN CARGA.CAR_CUSTO IS 'CUSTO TOTAL DA CARGA';
COMMENT ON COLUMN CARGA.CAR_PRECOTOTAL IS 'PRECO TOTAL DA CARGA';
COMMENT ON COLUMN CARGA.CAR_TEMPOGASTO IS 'TEMPO GASTO NA CARGA';
	
CREATE SEQUENCE GEN_CARGA;

COMMENT ON SEQUENCE GEN_CARGA IS 'SEQUENCIADOR DE CARGA';

SET TERM ^ ;

create trigger carga_bi for carga
active before insert position 0
as
begin
  if (new.car_codigo is null) then
    new.car_codigo = gen_id(gen_carga,1);
end^

SET TERM ; ^

CREATE TABLE PROCESSOS_PRODUCAO (
	PCP_CODIGO INTEGER NOT NULL,
	IOP_CODIGO INTEGER NOT NULL,
	OPE_CODIGO INTEGER NOT NULL,
	CAR_CODIGO INTEGER ,
	PCP_STATUS VARCHAR(1),
	PCP_TEMPO_GASTO NUMERIC(18,4)
);

COMMENT ON COLUMN PROCESSOS_PRODUCAO.PCP_CODIGO IS 'IDENTIFICADOR DO PCP';
COMMENT ON COLUMN PROCESSOS_PRODUCAO.OPE_CODIGO IS 'CHAVE REFERENCIA DA OPERACAO DE PROCESSOS (OPERACOES)';
COMMENT ON COLUMN PROCESSOS_PRODUCAO.CAR_CODIGO IS 'REFERENCIA DA CARGA ';
COMMENT ON COLUMN PROCESSOS_PRODUCAO.IOP_CODIGO IS 'ITEM DA ORDEM DE PRODUCAO /PECAS ';
COMMENT ON COLUMN PROCESSOS_PRODUCAO.PCP_STATUS IS 'STATUS OS NA CARGA P - PENDENTE C - CARGA CONFIRMADA ; E - CARGA EM ANDAMENTO ; F - CARGA FINALIZADO; A - CANCELADA ';
COMMENT ON TABLE PROCESSOS_PRODUCAO IS 'PLANEJAMENTO E CONTROLE DE PRODUCAO';
COMMENT ON COLUMN PROCESSOS_PRODUCAO.PCP_TEMPO_GASTO IS 'TEMPO GASTO NA OPERACAO';


CREATE SEQUENCE GEN_PROCESSOS_PRODUCAO;
COMMENT ON SEQUENCE GEN_PROCESSOS_PRODUCAO IS 'SEQUENCIADOR DE PROCESSOS_PRODUCAO';
SET TERM ^ ;

create trigger PROCESSOS_PRODUCAO_bi for PROCESSOS_PRODUCAO
active before insert position 0
as
begin
  if (new.PCP_CODIGO is null) then
    new.PCP_CODIGO = gen_id(GEN_PROCESSOS_PRODUCAO,1);
end^

SET TERM ; ^


ALTER TABLE PROCESSOS_PRODUCAO ADD CONSTRAINT FK_CARGA_MASTER
FOREIGN KEY (CAR_CODIGO) REFERENCES CARGA(CAR_CODIGO)
ON DELETE CASCADE ON UPDATE CASCADE;

ALTER TABLE PROCESSOS_PRODUCAO ADD CONSTRAINT FK_CARGA_ORDEM
FOREIGN KEY (IOP_CODIGO) REFERENCES ITEM_ORDEMPRODUCAO(IOP_CODIGO)
ON DELETE CASCADE ON UPDATE CASCADE;



CREATE TABLE APONTAMENTO_PROCESSO (
    APP_CODIGO INTEGER NOT NULL,
    PCP_CODIGO INTEGER NOT NULL,
    EQP_CODIGO INTEGER,
	CAR_CODIGO INTEGER,
    APP_STATUS VARCHAR(1),
    APP_DATAINI TIMESTAMP,
    APP_DATAFIM TIMESTAMP,
    COL_CODIGO INTEGER,
    APP_CANCELADO CHAR(1),
    APP_MOTIVOCANCELAMENTO VARCHAR(100)	,
	USU_CODIGO_CANCEL INTEGER
	);


ALTER TABLE APONTAMENTO_PROCESSO  ADD CONSTRAINT PK_APONTAMENTO_PROCESSO PRIMARY KEY (APP_CODIGO);

COMMENT ON TABLE APONTAMENTO_PROCESSO IS 'APONTAMENTO DOS PROCESSOS / CARGAS';
COMMENT ON COLUMN APONTAMENTO_PROCESSO.APP_CODIGO IS  'IDENTIFICADOR DO APONTAMENTO DE CARGAS';
COMMENT ON COLUMN APONTAMENTO_PROCESSO.PCP_CODIGO IS 'REFERENCIA TAREFAS DA PRODUCAO (PROCESSOS_PRODUCAO)';
COMMENT ON COLUMN APONTAMENTO_PROCESSO.EQP_CODIGO IS 'REFERENCIA DE EQUIPAMENTO';
COMMENT ON COLUMN APONTAMENTO_PROCESSO.APP_STATUS IS 'SITUACAO :  E  - ANDAMENTO , F -FINALIZAR ; P - PARADO ';
COMMENT ON COLUMN APONTAMENTO_PROCESSO.APP_DATAINI IS 'DATA INICIO DA APONTAMENTO CARGA';
COMMENT ON COLUMN APONTAMENTO_PROCESSO.APP_DATAFIM IS 'DATA FIM DO APONTAMENTO DA CARGA';
COMMENT ON COLUMN APONTAMENTO_PROCESSO.COL_CODIGO IS 'CHAVE REFERENCIA DO COLOBORADOR';
COMMENT ON COLUMN APONTAMENTO_PROCESSO.APP_CANCELADO IS 'APONTAMENTO FOI CANCELADO SE FOR S';
COMMENT ON COLUMN APONTAMENTO_PROCESSO.APP_MOTIVOCANCELAMENTO IS 'MOTIVO DE CANCELAMENTO';
COMMENT ON COLUMN APONTAMENTO_PROCESSO.USU_CODIGO_CANCEL IS 'USUARIO LOGADO QUE CANCELOU';


CREATE SEQUENCE GEN_APONTAMENTO_PROCESSO;
COMMENT ON SEQUENCE GEN_APONTAMENTO_PROCESSO IS 'SEQUENCIADOR DE APONTAMENTO DOS PROCESSOS / CARGAS';

SET TERM ^ ;

create trigger APONTAMENTO_PROCESSO_bi for APONTAMENTO_PROCESSO
active before insert position 0
as
begin
  if (new.APP_CODIGO is null) then
    new.APP_CODIGO = gen_id(GEN_APONTAMENTO_PROCESSO,1);
end^

SET TERM ; ^


	
CREATE TABLE ESPECIFICACOES_OPERACAO (
    EOP_CODIGO INTEGER NOT NULL,
    EOP_SEQ INTEGER NOT NULL,
    OPE_CODIGO INTEGER NOT NULL,
    EOP_NOME VARCHAR(30), 
	EOP_DESCRICAO VARCHAR(100)
	);

ALTER TABLE ESPECIFICACOES_OPERACAO ADD CONSTRAINT PK_ESPECIFICACOES_OPERACAO PRIMARY KEY (EOP_CODIGO)	;

ALTER TABLE ESPECIFICACOES_OPERACAO ADD CONSTRAINT FK_ESPECIFICACOES_OPERACAO FOREIGN KEY (OPE_CODIGO) REFERENCES OPERACOES(OPE_CODIGO)
ON DELETE CASCADE ON UPDATE CASCADE;
	
COMMENT ON COLUMN ESPECIFICACOES_OPERACAO.EOP_CODIGO IS 'IDENTIFICADOR DE ESPECIFICACOES DA OPERACAO';
COMMENT ON COLUMN ESPECIFICACOES_OPERACAO.EOP_SEQ IS 'SEQUENCIA';
COMMENT ON COLUMN ESPECIFICACOES_OPERACAO.OPE_CODIGO IS 'REFERENCIA DE OPERACOES';
COMMENT ON COLUMN ESPECIFICACOES_OPERACAO.EOP_NOME IS 'NOME DA ESPECIFICACAO/NOME DA COLUNA(HEADER)';
COMMENT ON COLUMN ESPECIFICACOES_OPERACAO.EOP_DESCRICAO IS 'DESCRICAO DA ESPECIFICACAO';
COMMENT ON TABLE ESPECIFICACOES_OPERACAO IS 'PARAMETROS DE QUALIDADE/ESPECIFICACOES PARA CADA OPERACAO';


CREATE SEQUENCE GEN_ESPECIFICACOES_OPERACAO;
comment on sequence GEN_ESPECIFICACOES_OPERACAO is 'GERADOR ESPECIFICACOES_OPERACAO';

SET TERM ^ ;

create trigger especificacoes_operacao_bi for especificacoes_operacao
active before insert position 0
as
begin
  if (new.eop_codigo is null) then
    new.eop_codigo = gen_id(gen_especificacoes_operacao,1);
end
^

SET TERM ; ^



CREATE TABLE QUALIDADE_PRODUCAO (
    QPR_CODIGO INTEGER NOT NULL,
    QPR_SEQUENCIA INTEGER,
    EOP_CODIGO INTEGER NOT NULL,
    PRO_CODIGO INTEGER NOT NULL,
	POP_CODIGO INTEGER NOT NULL,
    QPR_VALOR VARCHAR(100) NOT NULL) ;

ALTER TABLE QUALIDADE_PRODUCAO  ADD CONSTRAINT PK_QUALIDADE_PRODUCAO PRIMARY KEY (QPR_CODIGO);
	
COMMENT ON COLUMN QUALIDADE_PRODUCAO.QPR_CODIGO IS 'IDENTIFICADO DO VALOR DA ESPECIFICACOES';
COMMENT ON COLUMN QUALIDADE_PRODUCAO.QPR_SEQUENCIA IS 'REGISTRO UMA ESPECIFICA√á√ïES PODE TER VARIOS REGISTROS';
COMMENT ON COLUMN QUALIDADE_PRODUCAO.EOP_CODIGO IS 'CHAVE IDENTIFICADOR DA ESPECIFICACOES (ESPECIFICACOES_OPERACAO)';
COMMENT ON COLUMN QUALIDADE_PRODUCAO.PRO_CODIGO IS 'CHAVE IDENTIFICADOR DO PROCESSO-REDUDANTE';
COMMENT ON COLUMN QUALIDADE_PRODUCAO.POP_CODIGO IS 'CHAVE IDENTIFICADOR DO PROCESSO-OPERACAO (PROCESSOS_OPERACOES)';
COMMENT ON COLUMN QUALIDADE_PRODUCAO.QPR_VALOR IS 'RESULTADO DA QUALIDADE DE PRODUCAO';

CREATE SEQUENCE GEN_QUALIDADE_PRODUCAO_ID;

SET TERM ^ ;

create trigger qualidade_producao_bi for qualidade_producao
active before insert position 0
as
begin
  if (new.qpr_codigo is null) then
    new.qpr_codigo = gen_id(gen_qualidade_producao_id,1);
end^

SET TERM ; ^


ALTER TABLE QUALIDADE_PRODUCAO  ADD CONSTRAINT FK_QUALIDADE_PRO_PARAMETROS
FOREIGN KEY (EOP_CODIGO) REFERENCES ESPECIFICACOES_OPERACAO(EOP_CODIGO)
ON DELETE CASCADE ON UPDATE CASCADE;


COMMENT ON SEQUENCE GEN_QUALIDADE_PRODUCAO_ID IS 'GERADOR DE RESULTADO DA QUALIDADE DE PRODUCAO';



CREATE TABLE TIPO_PROCESSO (
    TPR_CODIGO INTEGER NOT NULL,
    TPR_NOME VARCHAR(60) NOT NULL);

ALTER TABLE TIPO_PROCESSO
ADD CONSTRAINT PK_TIPO_PROCESSO
PRIMARY KEY (TPR_CODIGO);

COMMENT ON COLUMN TIPO_PROCESSO.TPR_CODIGO IS 'CODIGO CHAVE';
COMMENT ON COLUMN TIPO_PROCESSO.TPR_NOME IS 'DESCRI√á√ÉO DO TIPO';

CREATE SEQUENCE GEN_TIPO_PROCESSO;

SET TERM ^ ;

create trigger tipo_processo_bi for tipo_processo
active before insert position 0
as
begin
  if (new.tpr_codigo is null) then
    new.tpr_codigo = gen_id(gen_tipo_processo,1);
end^

SET TERM ; ^

COMMENT ON TABLE TIPO_PROCESSO IS 'CADASTRO DO TIPO DE PROCESSO';


insert into TIPO_PROCESSO (TPR_NOME) values ('ACABAMENTO');
insert into TIPO_PROCESSO (TPR_NOME) values ('ALIVIO DE TENS√ÉO');
insert into TIPO_PROCESSO (TPR_NOME) values ('CARBONITRETA√á√ÉO');
insert into TIPO_PROCESSO (TPR_NOME) values ('CEMENTA√á√ÉO');
insert into TIPO_PROCESSO (TPR_NOME) values ('INDU√á√ÉO');
insert into TIPO_PROCESSO (TPR_NOME) values ('INDU√á√ÉO/REVENIMENTO');
insert into TIPO_PROCESSO (TPR_NOME) values ('INSPE√á√ÉO METALOGR√ÅFICA');
insert into TIPO_PROCESSO (TPR_NOME) values ('NITRETA√á√ÉO');
insert into TIPO_PROCESSO (TPR_NOME) values ('NORMALIZA√á√ÉO')  ;
insert into TIPO_PROCESSO (TPR_NOME) values ('NORMALIZA√á√ÉO/INDU√á√ÉO');
insert into TIPO_PROCESSO (TPR_NOME) values ('RECOZIMENTO');
insert into TIPO_PROCESSO (TPR_NOME) values ('T√äMPERA');
insert into TIPO_PROCESSO (TPR_NOME) values ('T√äMPERA AF');
insert into TIPO_PROCESSO (TPR_NOME) values ('T√äMPERA/INDU√á√ÉO');

commit work;

CREATE INDEX PED0000_IDXORC ON PED0000 (ORC_CODIGO);

ALTER TABLE PROCESSOS ADD CONSTRAINT FK_PROCESSOS_TIPO FOREIGN KEY (TPR_CODIGO) REFERENCES TIPO_PROCESSO(TPR_CODIGO) ON DELETE SET NULL ON UPDATE CASCADE;
