UPDATE  VERSAOSISTEMA SET VERSAOSISTEMA.SCRIPTADJUTOR = '3.0.9.503',
       VERSAOSISTEMA.DATA   = '28.02.2018'
 where VERSAOSISTEMA.CODIGO = 1;
 
commit work;
 
ALTER TABLE PRD0000 ADD INTERNO NUMERIC(18,2);
ALTER TABLE PRD0000 ADD EXTERNO NUMERIC(18,2);
ALTER TABLE PRD0000 ADD ALTURA1 NUMERIC(18,2);
ALTER TABLE PRD0000 ADD ALTURA2 NUMERIC(18,2);

commit work;

COMMENT ON COLUMN PRD0000.INTERNO IS 'MEDIDA INTERNA DO PRODUTO EM MM';
COMMENT ON COLUMN PRD0000.EXTERNO IS 'MEDIDA EXTERNA DO PRODUTO EM MM';
COMMENT ON COLUMN PRD0000.ALTURA1 IS 'MEDIDA ALTURA 1 DO PRODUTO EM MM';
COMMENT ON COLUMN PRD0000.ALTURA2 IS 'MEDIDA ALTURA 2 DO PRODUTO EM MM';

commit work;

ALTER TABLE PRMT0001 ADD PMT_VARPERC_MEDIDA_PRODUTO NUMERIC(10,2);
ALTER TABLE PRMT0001 ADD PMT_HABILITA_MEDIDAPRD VARCHAR(1);
COMMENT ON COLUMN PRMT0001.PMT_VARPERC_MEDIDA_PRODUTO IS 'VARIACAO EM PERCENTUAL DE MEDIDA DE PRODUTO NA PESQUISA DE VENDA';
COMMENT ON COLUMN PRMT0001.PMT_HABILITA_MEDIDAPRD IS 'HABILITAR CAMPOS DE MEDIDAS DOS PRODUTOS PARA VENDA';
ALTER TABLE PRMT0001 ADD PMT_NCM_UND_ITEM_PROV VARCHAR(1);
COMMENT ON COLUMN PRMT0001.PMT_NCM_UND_ITEM_PROV IS 'LIBERAR DIGITACAO DE NCM E UND EM ITEM PROVISORIO';

commit work;


ALTER TABLE PED_IT01 ADD PRD_UND VARCHAR(3);
ALTER TABLE PED_IT01 ADD NCM_CODIGO VARCHAR(8);

commit work;

comment ON COLUMN PED_IT01.prd_und IS 'UNIDADE DE MEDIDA DO ITEM DO PEDIDO';
COMMENT ON COLUMN PRD0000.PRD_UND IS  'UNIDADE DE MEDIDA DO PRODUTO';
COMMENT ON COLUMN PRD0000.IPI_CODIGO IS 'CODIGO NCM DO PRODUTO/CLASSIFICACAO FISCAL';
COMMENT ON COLUMN PED_IT01.NCM_CODIGO IS 'CODIGO NCM DO PRODUTO';

COMMIT WORK;

COMMENT ON COLUMN PED0000.PED_SITUACAO IS 'A FATURAR = F , CANCELADO = C , FATURADO TOTAL = T, PARCIAL = P , FATURADO AGRUPADO  = A ';
 
ALTER TABLE PED0000 ADD PED_CODIGO_AGRUPADO VARCHAR(7);
ALTER TABLE PED_IT01 ADD PED_CODIGO_ORIGEM VARCHAR(7);

COMMENT ON COLUMN PED0000.PED_CODIGO_AGRUPADO IS 'NUMERO DO PEDIDO O QUAL FOI AGRUPADO';
COMMENT ON COLUMN PED_IT01.PED_CODIGO_ORIGEM IS 'ORIGEM DO PEDIDO DO ITEM AGRUPADO';
COMMENT ON COLUMN PED0000.PED_CODIGO IS 'CODIGO DO PEDIDO';
COMMENT ON COLUMN PED0000.PED_REGISTRO IS 'IDENTIFICADO SEQUENCIAL DO PEDIDO';
COMMENT ON COLUMN PED_IT01.PED_CODIGO IS 'CODIGO DO PEDIDO';
COMMENT ON COLUMN OSV0001.PED_CODIGO IS 'CODIGO DO PEDIDO';
COMMENT ON COLUMN NF0001.PED_CODIGO IS 'CODIGO DO PEDIDO';
COMMENT ON COLUMN FAT0000.PED_CODIGO IS 'CODIGO DO PEDIDO';                         
COMMENT ON COLUMN LOTE0000.PED_CODIGO IS 'CODIGO DO PEDIDO';
COMMENT ON COLUMN NF_IT01.PED_CODIGO IS 'CODIGO DO PEDIDO';   

COMMIT WORK;

ALTER TABLE OPV0000 ADD OPV_AGRUPADO VARCHAR(1);

COMMENT ON TABLE OPV0000 IS 'TIPO DE PEDIDO';
COMMENT ON COLUMN OPV0000.OPV_CODIGO IS 'IDENTIFICADO DO TIPO DE PEDIDO';
COMMENT ON COLUMN OPV0000.OPV_TIPOPADRAO IS 'TIPO PADRAO , AO CARREGAR UM NOVO';
COMMENT ON COLUMN OPV0000.OPV_SERVICO IS 'TIPO DE ORDEM DE SERVICO';
COMMENT ON COLUMN OPV0000.OPV_AGRUPADO IS 'TIPO AGRUPADO';
COMMENT ON COLUMN OPV0000.OPV_VENDA IS 'TIPO DE VENDA/FATURAMENTO . AUTORIZA TIPO DE PEDIDO PARA FATURAMENTO';
COMMENT ON COLUMN OPV0000.OPV_ORCAMENTO IS 'TIPO ORCAMENTO';
COMMENT ON COLUMN OPV0000.OPV_PRODUCAO IS 'PRODUCAO: LIBERA OS ITENS DO PEDIDO PARA ENVIAR PARA PCP';
COMMENT ON COLUMN OPV0000.OPV_CALCULA_ST IS 'CALCULA SUBSTITUICAO TRIBUTARIA NO PEDIDO';
COMMENT ON COLUMN OPV0000.OPV_INDUSTRIALIZACAO IS 'VINCULA OS ITENS A ENTRADA DE INDUSTRIALIZACAO';
COMMENT ON COLUMN OPV0000.OPV_ATUALIZA_DATA_PEDIDO IS 'ATUALIZA DATA DO PEDIDO QUANDO ATUALIZA O PEDIDO';
COMMENT ON COLUMN OPV0000.OPV_SEMLOTE IS 'NAO OBRIGA A SELECIONAR O LOTE';
COMMENT ON COLUMN OPV0000.OPV_COMISSAO_VERBA IS 'GERA COMISSAO COM VERBA';
COMMENT ON COLUMN OPV0000.OPV_BONIFICACAO IS 'BONIFICACAO GERA DEBITO DA VERBA DO TOTAL DE CADA ITEM';
COMMENT ON COLUMN OPV0000.OPV_ATESTOQUE IS 'ATUALIZA ESTOQUE';
INSERT INTO PED_MOTIVO VALUES (8,'001','CANCELAMENTO DO AGRUPAMENTO');

commit work;
SET TERM ^ ;
CREATE or alter  TRIGGER ITEM_PEDIDO_BI0 FOR PED_IT01 BEFORE INSERT
AS
BEGIN
    IF (NEW.Prf_registro IS NULL) THEN
       NEW.Prf_registro = GEN_ID(GEN_ITEM_PEDIDO,1);
    if (new.prf_qtde<new.prf_qtdefat) then
        new.prf_situacao='P';
    else
        new.prf_situacao='F';
end
^
SET TERM ; ^

COMMIT WORK;


SET TERM ^ ;
CREATE OR ALTER PROCEDURE PRD_AJUSTA_SITUACAO_PEDIDOITEM (VCOD_PEDIDO CHAR(7), VCOD_EMP CHAR(3))
AS
declare variable SIT char(1);
begin

  select PED_SITUACAO  from PED0000  where PED_CODIGO = :VCOD_PEDIDO and  EMP_CODIGO = :VCOD_EMP   into :SIT;

  if  (SIT not in ('C','A')) then
    update PED0000
    set PED_SITUACAO = (select VSIT
                        from PRD_AJUSTA_SITUACAO_PEDIDO(:VCOD_PEDIDO, :vcod_emp ))
    where PED_CODIGO = :VCOD_PEDIDO;
  suspend;
end 
^
SET TERM ; ^

SET TERM ^ ;
CREATE or ALTER TRIGGER PED0000_BU0 FOR PED0000 BEFORE UPDATE
as
begin
  if (new.PED_SITUACAO not in ('C','A')) then
    new.PED_SITUACAO = (select VSIT
    from PRD_AJUSTA_SITUACAO_PEDIDO(new.PED_CODIGO, new.EMP_CODIGO));
end  
^
SET TERM ; ^

COMMIT WORK;