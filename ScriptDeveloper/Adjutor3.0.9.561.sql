UPDATE  VERSAOSISTEMA 
SET VERSAOSISTEMA.SCRIPTADJUTOR = '3.0.9.561',
    VERSAOSISTEMA.DATA   = '04.10.2021',
	VERSAO = '3.0.9.561'
 where VERSAOSISTEMA.CODIGO = 1;
commit work;

CREATE OR ALTER VIEW VW_SPED_NOTAS_FISCAIS (DADOS_ADICIONAIS, INF_ADIC_FISCO, EMPRESA, REGISTRO, TIPO_NOTA, TIPO_EMITENTE, CODIGO_PARTICIPANTE, UF_PARTICIPANTE, CODIGO_MODELO, CODIGO_SITUACAO_TRIBUTARIA, SERIE, NUMERO, CHAVE_ELETRONICA, DATA_EMISSAO, DATA_ENTRADA_SAIDA, VALOR_NOTA, TIPO_PGTO, VALOR_DESCONTO, VALOR_ABATIMENTO, VALOR_MERCADORIAS, INDICADOR_FRETE, VALOR_FRETE, VALOR_SEGURO, VALOR_OUTRAS_DESP_ACES, VALOR_BASE_CALCULO_ICMS, VALOR_ICMS, VALOR_BASE_ICMS_ST, VALOR_RETIDO_ST, VALOR_IPI, VALOR_PIS, VALOR_COFINS, VALOR_PIS_RETIDO_ST, VALOR_COFINS_ST, CCT_CODIGO, OPE_CODIGO)
AS
SELECT
ENF_DADOS_ADICIONAIS AS DADOS_ADICIONAIS,
ENF_DADOS_ADICIONAIS_FISCO AS INF_ADIC_FISCO,
ENF.EMP_CODIGO as EMPRESA ,
('E'||ENF.ENF_NOTANUMBER ) as REGISTRO,
CAST((CASE WHEN (1=1) THEN 'E'
END) AS VARCHAR(1)),
CAST((CASE WHEN (1=1) THEN 'T'
END) AS VARCHAR(1)),
CAST('F'||ENF.FOR_CODIGO AS VARCHAR(10)) as CODIGO_PARTICIPANTE,
(SELECT FIRST 1 FOR_UF FROM FOR0000 F WHERE F.FOR_CODIGO = ENF.FOR_CODIGO) AS UF_PARTICIPANTE, 
enf.ENF_MODELO_NF as CODIGO_MODELO,
CAST((CASE WHEN (1=1) THEN
    '00'
END) AS VARCHAR(2)),
ENF.ENF_SERIE,
ENF.ENF_NOTANUMBER,
ENF.ENF_CHAVE_NFE,
ENF.ENF_EMISSAO,
ENF.ENF_ENTRADA AS DATA_ENTRADA_SAIDA,
ENF.ENF_TOT_NOTA as VALOR_NOTA,
coalesce (ENF_MODALIDADE,(SELECT T2.PCL_MODALIDADE FROM PCL0000 T2 WHERE T2.PCL_CODIGO =  ENF.PCL_CODIGO) ) as TIPO_PGTO,
ENF.ENF_VL_DESCTO,
CAST((CASE WHEN (1=1) THEN
    0
END) AS NUMERIC(18,4)),
ENF.ENF_TOT_PROD,
CASE
    WHEN (ENF.ENF_TIPO_FRETE = 1) THEN
        0
    WHEN (ENF.ENF_TIPO_FRETE = 2) THEN
        1
    WHEN (ENF.ENF_TIPO_FRETE = 0) THEN
        2
    ELSE
        9
END INDICADOR_FRETE,
ENF.ENF_VLFRETE,
ENF.ENF_VLSEGURO,
ENF.ENF_DESP_ACES,
ENF.ENF_BASEICMS,
ENF.ENF_VL_ICMS,
ENF.ENF_VLBASESUBTRIB as VALOR_BASE_ICMS_ST ,
ENF.ENF_VL_SUBTRIB as VALOR_RETIDO_ST,
ENF.ENF_VL_IPI,
ENF.ENF_VLPIS,
ENF.ENF_VLCOFINS,
CASE
    WHEN (1=1) THEN
        0.00
END, 
CASE
    WHEN (1=1) THEN
        0.00
END,
CCT_CODIGO,
OPE_CODIGO
FROM
ENF0001 ENF
WHERE ENF_MODELO_NF = '55'
UNION ALL
SELECT
NF_OBSERVACAO,
NF_OBSERVACAO, 
NF.EMP_CODIGO,
('S'||NF.NF_NOTANUMBER),
NF.NF_ENTR_SAID,
'P' AS TIPO_EMITENTE,
CAST('C'||NF.CLI_CODIGO AS VARCHAR(10)),
(SELECT FIRST 1 CLI_UF  FROM CLI0000 C WHERE C.CLI_CODIGO = NF.CLI_CODIGO ) AS UF_PARTICIPANTE,
CASE WHEN NF_NUM_NFCE IS NULL THEN '55'
ELSE '65' END  AS CODIGO_MODELO, 
CAST((
    CASE
        WHEN (NF.NF_STATUS_NFE = 'C') THEN
            '02'
        ELSE
            '00'
END) AS VARCHAR(2)),
COALESCE(NF_SERIE,'1'),
CASE WHEN NF_NUM_NFCE IS NOT NULL THEN NF_NUM_NFCE
     WHEN (NF.NF_CHAVE_NFE <> '') then NF.NF_NUM_NFE
     else
         COALESCE(NF.NF_NOTANUMBER,'1')
    end AS NUMERO,
NF.NF_CHAVE_NFE,
NF.NF_EMISSAO,
NF.NF_SAIDA,
NF.NF_TOT_NOTA as VALOR_NOTA,
(SELECT T2.PCL_MODALIDADE FROM PCL0000 T2 WHERE T2.PCL_CODIGO =  NF.PCL_CODIGO),
NF.NF_VL_DESCTO,
CAST((CASE WHEN (1=1) THEN
    0
END) AS NUMERIC(18,4)),
NF.NF_TOT_PROD,
CASE
    WHEN (NF.NF_TIPO_FRETE = 'C') THEN
        0
    WHEN (NF.NF_TIPO_FRETE = 'F') THEN
        1
    WHEN (NF.NF_TIPO_FRETE = 'O') THEN
        2
    ELSE
        9
END as INDICADOR_FRETE ,
NF.NF_VLFRETE,
NF.NF_VLSEGURO,
NF.NF_DESP_ACES,
NF.NF_BASEICMS,
NF.NF_VL_ICMS,
NF.NF_VLBASESUBTRIB,
NF.NF_VL_SUBTRIB,
NF.NF_VL_IPI,
NF.NF_VALORTOT_PIS,
NF.NF_VALORTOT_COFINS,
CASE
    WHEN (1=1) THEN
        0.00
END, 
CASE
    WHEN (1=1) THEN
        0.00
END,
(SELECT first 1 cct_codigo FROM FAT0000 WHERE fat_codigo = nf.NF_NOTANUMBER AND EMP_CODIGO = nf.emp_codigo ) as cct_codigo,
NULL AS OPE_CODIGO
FROM
NF0001 NF
where NF.nf_cancelada = 'N';





ALTER TABLE PRD_UNIDADE ADD PRD_UNIPADRAO CHAR(1);
COMMENT on column PRD_UNIDADE.PRD_UNIPADRAO is 'Flag de Unidade Padrão';

CREATE TABLE PRD_UNIDADE_EQUIVALENTE (
	PRD_UNISIGLA VARCHAR(6),
	PRD_UNIEQUIVALENTE VARCHAR(6),
	EMP_CODIGO VARCHAR(3)
);
COMMENT on column PRD_UNIDADE_EQUIVALENTE.PRD_UNISIGLA is 'Sigla da Unidade de Medida';
COMMENT on column PRD_UNIDADE_EQUIVALENTE.PRD_UNIEQUIVALENTE is 'Sigla da Unidade de Medida Equivalente';
COMMENT on column PRD_UNIDADE_EQUIVALENTE.EMP_CODIGO is 'Código da Empresa';

CREATE INDEX idx_PRD_UNID_EQUIV ON PRD_UNIDADE_EQUIVALENTE (PRD_UNIEQUIVALENTE);




