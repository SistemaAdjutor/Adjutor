
UPDATE  VERSAOSISTEMA 
SET VERSAOSISTEMA.SCRIPTADJUTOR = '3.0.9.531 patch 2',
       VERSAOSISTEMA.DATA   = '08.04.2019',
	    VERSAO = '3.0.9.531'
 where VERSAOSISTEMA.CODIGO = 1;

 commit work;



 ALTER TABLE TAREFAS_CRM ADD TRF_STATUS_FINAL VARCHAR(1);
 COMMENT ON COLUMN TAREFAS_CRM.TRF_STATUS_FINAL IS 'SITUACAO DA FINALIZACAO : S - SUCESSO EFETIVO ; B - FORA DO BUDGET; C - CONCORRENTE GANHOU; P - PRECO INCOMPATIVEL ; S - SEM FIT';
 
 ALTER TABLE TAREFAS_CRM ADD TRF_DATAABERTURA TIMESTAMP;
 COMMENT ON COLUMN TAREFAS_CRM.TRF_DATAABERTURA IS 'DATA DE ABERTURA';
 
 
UPDATE TAREFAS_CRM
SET TRF_DATAABERTURA = COALESCE((SELECT MIN(TAH_DATA_REGISTRO) FROM TAREFAS_HISTORICO HI WHERE HI.TRF_REGISTRO = TAREFAS_CRM.TRF_REGISTRO),TRF_DATA_REGISTRO);

 
ALTER TABLE PRMT0001 ADD PMT_NAO_AUTO_PVENDA VARCHAR(1);
COMMENT ON COLUMN PRMT0001.PMT_NAO_AUTO_PVENDA IS 'NAO PERMITE ATUALIZACAO AUTOMATICA DO PREÇO DE VENDA';

UPDATE PRMT0001 SET  PMT_NAO_AUTO_PVENDA = 'N';

COMMENT ON COLUMN FAT_PC01.fpc_tipodoc IS 'DP : DUPLICATA; BL : BOLETO ; RC : RECIBO ; CH: CHEQUE ; DN : DINHEIRO ; OUTROS : OUTROS CC : CREDITO EM CONTA ; CR - CARTÃO CRÉDITO';


SET TERM ^ ;
						  
CREATE OR ALTER PROCEDURE PCD_FLUXO_CAIXA(DATA_INICIAL DATE, DATA_FINAL DATE, CODIGO_EMPRESA VARCHAR(3), SALDOBANCO VARCHAR(1), MENSAL VARCHAR(1))
/* saldobanco - 1 - verifica saldo inicial do banco */
RETURNS (
    DATA_MOVIMENTO DATE,
    VALOR_PREVISAO_RECEBER NUMERIC(18,2),
    VALOR_RECEBIDO NUMERIC(18,2),
    VALOR_RECEBER NUMERIC(18,2),
    VALOR_DESCONTADO NUMERIC(18,2),
    VALOR_PREVISAO_PAGAR NUMERIC(18,2),
    VALOR_PAGO NUMERIC(18,2),
    VALOR_PAGAR NUMERIC(18,2),
    SALDO_DO_DIA_PREV NUMERIC(18,2),
    SALDO_DO_DIA_REAL NUMERIC(18,2),
    SALDO_ACUMULADO_PREV NUMERIC(18,2),
    SALDO_ACUMULADO_REAL NUMERIC(18,2),
    SALDO_INICIAL_PREV NUMERIC(18,2),
    SALDO_INICIAL_REAL NUMERIC(18,2)
)
AS
DECLARE VARIABLE DATA_PROCESSO DATE;
DECLARE VARIABLE DATA_CONCILIACAO DATE;
DECLARE VARIABLE SALDO_BANCO NUMERIC(18,2);

DECLARE VARIABLE SALDO_INI_PREV_TEMP NUMERIC(18,2);
DECLARE VARIABLE SALDO_INI_REAL_TEMP NUMERIC(18,2);

DECLARE VARIABLE RECEBER_BANCO NUMERIC(18,2);
DECLARE VARIABLE PAGAR_BANCO NUMERIC(18,2);

DECLARE VARIABLE PREVRECEBER_BANCO NUMERIC(18,2);
DECLARE VARIABLE PREVPAGAR_BANCO NUMERIC(18,2);

DECLARE VARIABLE BAN_CODIGO VARCHAR(4);
DECLARE VARIABLE BANCO_EXCLUSIVO VARCHAR(2);
begin
   /*Inicializa variaveis*/
   DATA_PROCESSO        = :DATA_INICIAL;
   SALDO_DO_DIA_PREV    = 0;
   SALDO_DO_DIA_REAL    = 0;
   SALDO_ACUMULADO_PREV = 0;
   SALDO_ACUMULADO_REAL = 0;
   SALDO_INICIAL_PREV = 0 ;
   SALDO_INICIAL_REAL = 0 ;
   SALDO_INI_REAL_TEMP = 0 ;
   SALDO_INI_PREV_TEMP = 0 ;
   PREVRECEBER_BANCO = 0 ;
   PREVPAGAR_BANCO = 0 ;
   RECEBER_BANCO = 0 ;
   PAGAR_BANCO = 0 ;
   SELECT BANCOS FROM SHAREDB
   INTO :BANCO_EXCLUSIVO;
   if (SALDOBANCO = 'S') then
   begin
    for
     SELECT BAN_CODIGO, COALESCE(BAN_CONCILIACAO_SALDO,0), BAN_CONCILIACAO_DATA
     FROM BAN0000 
     WHERE 
     /* BAN_FLUXOCAIXA = 'S'  SEM VAI PEGAR TODOS AS CONTAS
     AND BAN_CONCILIACAO_DATA IS NOT NULL */
      (EMP_CODIGO = :CODIGO_EMPRESA or :CODIGO_EMPRESA = '999' )
     INTO :BAN_CODIGO, :SALDO_BANCO, :DATA_CONCILIACAO
     do
     begin   
       If (DATA_CONCILIACAO   < DATA_INICIAL) then
       BEGIN
        SALDO_INI_PREV_TEMP = SALDO_BANCO + SALDO_INI_PREV_TEMP;
        SALDO_INI_REAL_TEMP = SALDO_BANCO + SALDO_INI_REAL_TEMP;
       END    
      /* RECEBIDO PELO CONTA BANCO ANTES DO PERIODO E DEPOIS DA CONCILIACAO */ 
        If (DATA_CONCILIACAO + 1  < DATA_INICIAL-1) then
        begin
            /* RECEBIDO */
            SELECT COALESCE(sum(COALESCE(FRE_RECEBIDO,0)),0)
            from FAT_RECEBIMENTO
           WHERE BAN_CODIGO = :BAN_CODIGO
             AND FRE_DATA_RECEBIMENTO BETWEEN :DATA_CONCILIACAO+1 AND  :DATA_INICIAL-1
             and (EMP_CODIGO = :CODIGO_EMPRESA or :CODIGO_EMPRESA = '999')
             INTO :RECEBER_BANCO;
            
            /*PAGO E DEPOSITADO NO BANCOS ANTES DO PERIODO SOLICITADO */
            Select COALESCE(sum(COALESCE(PAG_PAGO,0)),0)
            from PAG_PAGAMENTO
            WHERE BAN_CODIGO = :BAN_CODIGO
             AND PAG_DATA_PAGAMENTO BETWEEN :DATA_CONCILIACAO+1 AND :DATA_INICIAL-1
            and (EMP_CODIGO = :CODIGO_EMPRESA or :CODIGO_EMPRESA = '999')        
            INTO :PAGAR_BANCO;      
            SALDO_INI_REAL_TEMP = SALDO_INI_REAL_TEMP + RECEBER_BANCO - PAGAR_BANCO;
            
            /*  PREVISAO RECEBER */
            Select  COALESCE(sum(COALESCE(FPC_VLPARC,0)),0)
            from FAT_PC01 FT 
            LEFT JOIN FORMA_PAGAMENTO FP ON (FP.FPG_REGISTRO = FT.FPG_REGISTRO )
            LEFT JOIN BAN0000 B ON (FT.BAN_CODIGO = B.BAN_CODIGO AND (FT.FPC_TIPODOC = 'BL' OR FPG_DESCRICAO IN ('CARTÃO DE CRÉDITO', 'CARTAO DE CREDITO','CARTAO CREDITO','BOLETO')) 
                                    AND (B.EMP_CODIGO = FT.EMP_CODIGO OR :BANCO_EXCLUSIVO='C'))
            where FPC_EXCLUSAO = 'N'
            and (FPC_VENCTO + COALESCE(BAN_DIASCRED_COBRANCA,0)) BETWEEN :DATA_CONCILIACAO+1 AND  :DATA_INICIAL-1
            and  FT.BAN_CODIGO = :BAN_CODIGO
            and (FT.EMP_CODIGO = :CODIGO_EMPRESA or :CODIGO_EMPRESA = '999')
            INTO :PREVRECEBER_BANCO;            

            /*PREV conta a pagar*/
            Select COALESCE(sum(COALESCE(PPC_VLPARC,0)),0)
              from PAG_PC01
             where PPC_EXCLUSAO = 'N'
               and PPC_VENCTO  BETWEEN :DATA_CONCILIACAO+1 AND  :DATA_INICIAL-1
               and  BAN_CODIGO = :BAN_CODIGO
               and (EMP_CODIGO = :CODIGO_EMPRESA or :CODIGO_EMPRESA = '999')
              INTO :PREVPAGAR_BANCO;            
             
            SALDO_INI_PREV_TEMP =  SALDO_INI_PREV_TEMP +PREVRECEBER_BANCO - PREVPAGAR_BANCO;
        end
        
     end
   end
      /* xunxo - pegar as contas previsão a receber e pagar que não foram colocadas o banco*/
            /* RECEBIDO */
      DATA_CONCILIACAO = '2018-12-31';
     if (DATA_CONCILIACAO <> DATA_INICIAL-1) then
     begin
         PREVPAGAR_BANCO = 0 ;
         PREVRECEBER_BANCO = 0 ;
        /*  PREVISAO RECEBER */
        Select  sum(COALESCE(FPC_VLPARC,0))
        from FAT_PC01 FT 
        where FPC_EXCLUSAO = 'N'
        and FPC_VENCTO  BETWEEN :DATA_CONCILIACAO+1 AND  :DATA_INICIAL-1
        and  ( BAN_CODIGO  is null OR TRIM(BAN_CODIGO) = '' OR BAN_CODIGO = '0000')
        and (FT.EMP_CODIGO = :CODIGO_EMPRESA or :CODIGO_EMPRESA = '999')
        INTO :PREVRECEBER_BANCO;            
    
        /*PREV conta a pagar*/
        Select sum(COALESCE(PPC_VLPARC,0))
          from PAG_PC01
         where PPC_EXCLUSAO = 'N'
           and PPC_VENCTO  BETWEEN :DATA_CONCILIACAO+1 AND  :DATA_INICIAL-1
           and ( BAN_CODIGO  is null OR trim(BAN_CODIGO) = '' OR BAN_CODIGO = '0000')
           and (EMP_CODIGO = :CODIGO_EMPRESA or :CODIGO_EMPRESA = '999')
          INTO :PREVPAGAR_BANCO;            
          
         SALDO_INI_PREV_TEMP =  SALDO_INI_PREV_TEMP +PREVRECEBER_BANCO - PREVPAGAR_BANCO;
    end
   
   /* fim xunxo */
   /* 
   SALDO_INICIAL_PREV = SALDO_INICIAL;
   SALDO_INICIAL_REAL = SALDO_INICIAL; */
   SALDO_ACUMULADO_PREV = SALDO_INI_PREV_TEMP;
   SALDO_ACUMULADO_REAL =  SALDO_INI_REAL_TEMP;
   while (DATA_PROCESSO <= DATA_FINAL) do
    begin
    
     if (SALDOBANCO = 'S') then
     begin
         SALDO_BANCO = 0;
         SELECT SUM(COALESCE(BAN_CONCILIACAO_SALDO,0))
         FROM BAN0000 
         WHERE BAN_CONCILIACAO_DATA  = :DATA_PROCESSO
         /* BAN_FLUXOCAIXA = 'S'  SEM VAI PEGAR TODOS AS CONTAS
         AND BAN_CONCILIACAO_DATA IS NOT NULL */
         AND (EMP_CODIGO = :CODIGO_EMPRESA or :CODIGO_EMPRESA = '999' OR :BANCO_EXCLUSIVO='C')
         INTO :SALDO_BANCO;
         if (SALDO_BANCO is not null ) then
         begin
           SALDO_INI_PREV_TEMP = SALDO_INI_PREV_TEMP + SALDO_BANCO;
           SALDO_INI_REAL_TEMP = SALDO_INI_REAL_TEMP + SALDO_BANCO;
           SALDO_ACUMULADO_PREV = SALDO_ACUMULADO_PREV + SALDO_BANCO;
           SALDO_ACUMULADO_REAL =  SALDO_ACUMULADO_REAL + SALDO_BANCO;
         end
     end
		/* para multiempresa (CODIGO_EMPRESA = '999') ******/
        /*Previsão de Receber*/
        Select COALESCE(sum(FPC_VLPARC),0)
        from FAT_PC01 FT
        LEFT JOIN FORMA_PAGAMENTO FP ON (FP.FPG_REGISTRO = FT.FPG_REGISTRO )
        LEFT JOIN BAN0000 B ON (FT.BAN_CODIGO = B.BAN_CODIGO AND (FT.FPC_TIPODOC = 'BL' OR FPG_DESCRICAO IN ('CARTÃO DE CRÉDITO', 'CARTAO DE CREDITO','CARTAO CREDITO','BOLETO'))
                                            AND (B.EMP_CODIGO = FT.EMP_CODIGO OR :BANCO_EXCLUSIVO='C'))
        where FPC_EXCLUSAO = 'N'
        and (FPC_VENCTO + COALESCE(BAN_DIASCRED_COBRANCA,0)) = :DATA_PROCESSO
        and (FT.EMP_CODIGO = :CODIGO_EMPRESA or :CODIGO_EMPRESA = '999')
        group by  (FPC_VENCTO + COALESCE(BAN_DIASCRED_COBRANCA,0))
        INTO :VALOR_PREVISAO_RECEBER;
                
        /*Recebido*/
        Select COALESCE(sum(FRE_RECEBIDO),0)
        from FAT_RECEBIMENTO
        where FRE_DATA_RECEBIMENTO = :DATA_PROCESSO
          and (EMP_CODIGO = :CODIGO_EMPRESA or :CODIGO_EMPRESA = '999')
        group by FRE_DATA_RECEBIMENTO
         INTO :VALOR_RECEBIDO;

        /*Valor Receber*/
        VALOR_RECEBER = VALOR_PREVISAO_RECEBER - VALOR_RECEBIDO;

        /*duplicatas descontadas*/
        Select COALESCE(sum(FPC_VLPARC),0)
           from FAT_PC01
           where FPC_EXCLUSAO = 'N'
           and FPC_DATADESCTO = :DATA_PROCESSO
           and FPC_DESCONTADO = 'S'
           and (EMP_CODIGO = :CODIGO_EMPRESA or :CODIGO_EMPRESA = '999')
           group by FPC_DATADESCTO
           INTO :VALOR_DESCONTADO;

        if (:VALOR_PREVISAO_RECEBER IS NULL) then
           VALOR_PREVISAO_RECEBER = 0;
        /**/
        if (:VALOR_RECEBIDO IS NULL) then
           VALOR_RECEBIDO = 0;
        /**/
        if (:VALOR_RECEBER IS NULL) then
           VALOR_RECEBER = 0;
        /**/
        if (:VALOR_DESCONTADO IS NULL) then
           VALOR_DESCONTADO = 0;


        /*PREV conta a pagar*/
        Select COALESCE(sum(PPC_VLPARC),0)
       from PAG_PC01
       where PPC_EXCLUSAO = 'N'
         and PPC_VENCTO =:DATA_PROCESSO
         and (EMP_CODIGO = :CODIGO_EMPRESA or :CODIGO_EMPRESA = '999')
         group by PPC_VENCTO
         INTO:VALOR_PREVISAO_PAGAR;
         
        /*pago*/
        Select COALESCE(sum(PAG_PAGO),0)
        from PAG_PAGAMENTO
        where PAG_DATA_PAGAMENTO = :DATA_PROCESSO
        and (EMP_CODIGO = :CODIGO_EMPRESA or :CODIGO_EMPRESA = '999')
        group by PAG_DATA_PAGAMENTO
        INTO :VALOR_PAGO;
        /*Valor Pagar*/
        VALOR_PAGAR = VALOR_PREVISAO_PAGAR - VALOR_PAGO;

        /**/
        if (:VALOR_PREVISAO_PAGAR IS NULL) then
           VALOR_PREVISAO_PAGAR = 0;
        /**/
        if (:VALOR_PAGO IS NULL) then
           VALOR_PAGO = 0;
        /**/
        if (:VALOR_PAGAR IS NULL) then
           VALOR_PAGAR = 0;


        /*movimento*/
        DATA_MOVIMENTO = DATA_PROCESSO;
        /*SALDO DO DIA*/
        SALDO_DO_DIA_PREV    = ((VALOR_PREVISAO_RECEBER) - VALOR_PREVISAO_PAGAR);
        SALDO_DO_DIA_REAL    = ((VALOR_RECEBIDO) - VALOR_PAGO);
        
      
        /*SALDO ACUMULADO*/
        SALDO_ACUMULADO_PREV = (SALDO_ACUMULADO_PREV + SALDO_DO_DIA_PREV);
        SALDO_ACUMULADO_REAL = (SALDO_ACUMULADO_REAL + SALDO_DO_DIA_REAL);
        
        if (SALDOBANCO = 'S') then
        begin
         IF ((MENSAL = 'S' AND EXTRACT(DAY FROM DATA_MOVIMENTO )=1  ) OR (MENSAL <> 'S') ) THEN
          begin
            SALDO_INICIAL_PREV = SALDO_INI_PREV_TEMP;
            SALDO_INICIAL_REAL = SALDO_INI_REAL_TEMP;
          end    
          ELSE
          begin
            SALDO_INICIAL_PREV = 0;
            SALDO_INICIAL_REAL = 0;
          end    
        end

        SUSPEND;

        /* SALDOS INICIAIS */
        if (SALDOBANCO = 'S') then
        begin
          SALDO_INI_REAL_TEMP = SALDO_ACUMULADO_REAL;
          SALDO_INI_PREV_TEMP = SALDO_ACUMULADO_PREV;
        end
        
        DATA_PROCESSO = DATA_PROCESSO + 1;
        /*inicializa variaveis */
        VALOR_PREVISAO_RECEBER = 0;
        VALOR_RECEBIDO = 0;
        VALOR_RECEBER = 0;
        VALOR_DESCONTADO = 0;
        VALOR_PREVISAO_PAGAR  = 0;
        VALOR_PAGO = 0;
        VALOR_PAGAR = 0;
    end
end
^
SET TERM ; ^


update  FAT_PC01
set cli_codigo = (select cli_codigo from fat0000 fat where fat.emp_codigo = fat_pc01.emp_codigo and fat.fat_codigo = fat_pc01.fat_codigo)
where exists
 (select 1 from sharedb where receber = 'E');
 
 
 COMMIT WORK;
 