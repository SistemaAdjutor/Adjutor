/*
 - preencher a aba de sped no cadastro de empresa
   - TODOS AS INFORMAÇÕES DO CONTADOR SÃO OBRIGATÓRIA
 - Produtos
   - os CEST se preenchidos devem existir  
 - conta contábil nos grupos do produtos
 
AJUSTAR CST ICMS NO PRODUTO
em todos os produtos deve ser complementado com s informações da aba fiscal -> sped
produto como serviço deve como cadastro a parte fiscal sped tipo como serviço
alterações no cliente e fornecedores irão para próximo mes que houve movimentação: nome,  cpf, cnpj, suframa, pais, cidade, endereço, bairro
alterações do produto só irão a alterações do nome
Ativo imobilizado deve ser cadastrado como tipo de produto de ativo imobilizado e no grupo de produto deve colocar a conta contabil para contabilizar o bem
plano de contas vai ter DATA DE ALTERAÇÃO 
ajustar o cadastro de prazo de pagamentos, foi ajustado o tipo de prazo

para registro k deve indicar no produto o tipo de estoque propriedade do informante, em posse de terceiros, ou em posso de ambos

NOTA DE ENTRADA VAI TER O CAMPO ESPECIFICO PAAR TIPO DE PAGAMENTO  A VISTA, PRAZO E OUTROS E VEM DO XML SE IMPORTADO

NA FICHA TECNICA DIGITAR O PERCENTUAL DE PERDA NO SPED É OBRIGATÓRIO
 
IMPORTAR S NOTAS DE CTE CORRETAMENTE COLOCANDO O CFOP 
 
*/


UPDATE  VERSAOSISTEMA 
SET VERSAOSISTEMA.SCRIPTADJUTOR = '3.0.9.528',
       VERSAOSISTEMA.DATA   = '30.01.2019',
	    VERSAO = '3.0.9.528'
 where VERSAOSISTEMA.CODIGO = 1;
commit work;


-- SOMENTE INCLUI COMENTÁRIOS, SE DER ERRO NÃO TEM MUITA IMPORTÂNCIA 
COMMENT ON COLUMN VW_CABECALHO_NFE.CCT_CODIGO IS 'CODIGO DA CONTA CONTABIL' ; 
COMMENT ON COLUMN FORMA_PAGAMENTO.CCT_CODIGO IS 'CODIGO DA CONTA CONTABIL' ; 
COMMENT ON COLUMN CAIXA001.CCT_CODIGO IS 'CODIGO DA CONTA CONTABIL' ; 
COMMENT ON COLUMN DDC0000.CCT_CODIGO IS 'CODIGO DA CONTA CONTABIL' ; 
COMMENT ON COLUMN CCT_0000.CCT_CODIGO IS 'CODIGO DA CONTA CONTABIL' ; 
COMMENT ON COLUMN NF_PC01.CCT_CODIGO IS 'CODIGO DA CONTA CONTABIL' ; 
COMMENT ON COLUMN ENF0001.CCT_CODIGO IS 'CODIGO DA CONTA CONTABIL' ; 
COMMENT ON COLUMN FAT_PC01.CCT_CODIGO IS 'CODIGO DA CONTA CONTABIL' ; 
COMMENT ON COLUMN FAT0000.CCT_CODIGO IS 'CODIGO DA CONTA CONTABIL' ; 
COMMENT ON COLUMN FOR0000.CCT_CODIGO IS 'CODIGO DA CONTA CONTABIL' ; 
COMMENT ON COLUMN OPE0000.CCT_CODIGO IS 'CODIGO DA CONTA CONTABIL' ; 
COMMENT ON COLUMN PAG_PC01.CCT_CODIGO IS 'CODIGO DA CONTA CONTABIL' ; 
COMMENT ON COLUMN PAG0000.CCT_CODIGO IS 'CODIGO DA CONTA CONTABIL' ; 
COMMENT ON COLUMN VW_FINANCEIRO_DUPLICATA_RATEIO.CCT_CODIGO IS 'CODIGO DA CONTA CONTABIL' ; 
COMMENT ON COLUMN LISTA_PL_CC_VENCTO_VIEW.CCT_CODIGO IS 'CODIGO DA CONTA CONTABIL' ; 
COMMENT ON COLUMN LISTA_PL_CC_VENCTO_VIEW_GERAL.CCT_CODIGO IS 'CODIGO DA CONTA CONTABIL' ; 
COMMENT ON COLUMN PL_CC_VENCTO_VIEW.CCT_CODIGO IS 'CODIGO DA CONTA CONTABIL' ; 
COMMENT ON COLUMN PL_CC_VENCTO_VIEW_GERAL.CCT_CODIGO IS 'CODIGO DA CONTA CONTABIL' ; 
COMMENT ON COLUMN LISTA_PL_CC_PAGTO_VIEW.CCT_CODIGO IS 'CODIGO DA CONTA CONTABIL' ; 
COMMENT ON COLUMN LISTA_PL_CC_PAGTO_VIEW_GERAL.CCT_CODIGO IS 'CODIGO DA CONTA CONTABIL' ; 
COMMENT ON COLUMN PL_CC_PAGTO_VIEW.CCT_CODIGO IS 'CODIGO DA CONTA CONTABIL' ; 
COMMENT ON COLUMN PL_CC_PAGTO_VIEW_GERAL.CCT_CODIGO IS 'CODIGO DA CONTA CONTABIL' ; 
COMMENT ON COLUMN PL_VENCTO_VIEW.CCT_CODIGO IS 'CODIGO DA CONTA CONTABIL' ; 
COMMENT ON COLUMN PL_VENCTO_VIEW_GERAL.CCT_CODIGO IS 'CODIGO DA CONTA CONTABIL' ; 
COMMENT ON COLUMN RESUMO_PL_VENCTO_VIEW.CCT_CODIGO IS 'CODIGO DA CONTA CONTABIL' ; 
COMMENT ON COLUMN RESUMO_PL_VENCTO_VIEW_GERAL.CCT_CODIGO IS 'CODIGO DA CONTA CONTABIL' ; 
COMMENT ON COLUMN RES_PL_VENCTO_SEM_VIEW.CCT_CODIGO IS 'CODIGO DA CONTA CONTABIL' ; 
COMMENT ON COLUMN RES_PL_VENCTO_SEM_VIEW_GERAL.CCT_CODIGO IS 'CODIGO DA CONTA CONTABIL' ; 
COMMENT ON COLUMN RES_PL_VENCTO_MES_VIEW.CCT_CODIGO IS 'CODIGO DA CONTA CONTABIL' ; 
COMMENT ON COLUMN RES_PL_VENCTO_MES_VIEW_GERAL.CCT_CODIGO IS 'CODIGO DA CONTA CONTABIL' ; 
COMMENT ON COLUMN RES_PL_VENCTO_BIM_VIEW.CCT_CODIGO IS 'CODIGO DA CONTA CONTABIL' ; 
COMMENT ON COLUMN RES_PL_VENCTO_BIM_VIEW_GERAL.CCT_CODIGO IS 'CODIGO DA CONTA CONTABIL' ; 
COMMENT ON COLUMN RES_PL_VENCTO_TRI_VIEW.CCT_CODIGO IS 'CODIGO DA CONTA CONTABIL' ; 
COMMENT ON COLUMN RES_PL_VENCTO_TRI_VIEW_GERAL.CCT_CODIGO IS 'CODIGO DA CONTA CONTABIL' ; 
COMMENT ON COLUMN RES_PL_VENCTO_SMS_VIEW.CCT_CODIGO IS 'CODIGO DA CONTA CONTABIL' ; 
COMMENT ON COLUMN RES_PL_VENCTO_SMS_VIEW_GERAL.CCT_CODIGO IS 'CODIGO DA CONTA CONTABIL' ; 
COMMENT ON COLUMN RES_PL_VENCTO_ANO_VIEW.CCT_CODIGO IS 'CODIGO DA CONTA CONTABIL' ; 
COMMENT ON COLUMN RES_PL_VENCTO_ANO_VIEW_GERAL.CCT_CODIGO IS 'CODIGO DA CONTA CONTABIL' ; 
COMMENT ON COLUMN PL_EMISSAO_VIEW.CCT_CODIGO IS 'CODIGO DA CONTA CONTABIL' ; 
COMMENT ON COLUMN RESUMO_PL_EMISSAO_VIEW.CCT_CODIGO IS 'CODIGO DA CONTA CONTABIL' ; 
COMMENT ON COLUMN RESUMO_PL_EMISSAO_VIEW_GERAL.CCT_CODIGO IS 'CODIGO DA CONTA CONTABIL' ; 
COMMENT ON COLUMN RES_PL_EMISSAO_SEM_VIEW.CCT_CODIGO IS 'CODIGO DA CONTA CONTABIL' ; 
COMMENT ON COLUMN RES_PL_EMISSAO_SEM_VIEW_GERAL.CCT_CODIGO IS 'CODIGO DA CONTA CONTABIL' ; 
COMMENT ON COLUMN RES_PL_EMISSAO_MES_VIEW.CCT_CODIGO IS 'CODIGO DA CONTA CONTABIL' ; 
COMMENT ON COLUMN RES_PL_EMISSAO_MES_VIEW_GERAL.CCT_CODIGO IS 'CODIGO DA CONTA CONTABIL' ; 
COMMENT ON COLUMN RES_PL_EMISSAO_BIM_VIEW.CCT_CODIGO IS 'CODIGO DA CONTA CONTABIL' ; 
COMMENT ON COLUMN RES_PL_EMISSAO_BIM_VIEW_GERAL.CCT_CODIGO IS 'CODIGO DA CONTA CONTABIL' ; 
COMMENT ON COLUMN RES_PL_EMISSAO_TRI_VIEW.CCT_CODIGO IS 'CODIGO DA CONTA CONTABIL' ; 
COMMENT ON COLUMN RES_PL_EMISSAO_TRI_VIEW_GERAL.CCT_CODIGO IS 'CODIGO DA CONTA CONTABIL' ; 
COMMENT ON COLUMN RES_PL_EMISSAO_SMS_VIEW.CCT_CODIGO IS 'CODIGO DA CONTA CONTABIL' ; 
COMMENT ON COLUMN RES_PL_EMISSAO_SMS_VIEW_GERAL.CCT_CODIGO IS 'CODIGO DA CONTA CONTABIL' ; 
COMMENT ON COLUMN RES_PL_EMISSAO_ANO_VIEW.CCT_CODIGO IS 'CODIGO DA CONTA CONTABIL' ; 
COMMENT ON COLUMN RES_PL_EMISSAO_ANO_VIEW_GERAL.CCT_CODIGO IS 'CODIGO DA CONTA CONTABIL' ; 
COMMENT ON COLUMN PL_PAGTO_VIEW.CCT_CODIGO IS 'CODIGO DA CONTA CONTABIL' ; 
COMMENT ON COLUMN RESUMO_PL_PAGTO_VIEW.CCT_CODIGO IS 'CODIGO DA CONTA CONTABIL' ; 
COMMENT ON COLUMN RESUMO_PL_PAGTO_VIEW_GERAL.CCT_CODIGO IS 'CODIGO DA CONTA CONTABIL' ; 
COMMENT ON COLUMN RES_PL_PAGTO_SEM_VIEW.CCT_CODIGO IS 'CODIGO DA CONTA CONTABIL' ; 
COMMENT ON COLUMN RES_PL_PAGTO_SEM_VIEW_GERAL.CCT_CODIGO IS 'CODIGO DA CONTA CONTABIL' ; 
COMMENT ON COLUMN RES_PL_PAGTO_MES_VIEW.CCT_CODIGO IS 'CODIGO DA CONTA CONTABIL' ; 
COMMENT ON COLUMN RES_PL_PAGTO_MES_VIEW_GERAL.CCT_CODIGO IS 'CODIGO DA CONTA CONTABIL' ; 
COMMENT ON COLUMN RES_PL_PAGTO_BIM_VIEW.CCT_CODIGO IS 'CODIGO DA CONTA CONTABIL' ; 
COMMENT ON COLUMN RES_PL_PAGTO_BIM_VIEW_GERAL.CCT_CODIGO IS 'CODIGO DA CONTA CONTABIL' ; 
COMMENT ON COLUMN RES_PL_PAGTO_TRI_VIEW.CCT_CODIGO IS 'CODIGO DA CONTA CONTABIL' ; 
COMMENT ON COLUMN RES_PL_PAGTO_TRI_VIEW_GERAL.CCT_CODIGO IS 'CODIGO DA CONTA CONTABIL' ; 
COMMENT ON COLUMN RES_PL_PAGTO_SMS_VIEW.CCT_CODIGO IS 'CODIGO DA CONTA CONTABIL' ; 
COMMENT ON COLUMN RES_PL_PAGTO_SMS_VIEW_GERAL.CCT_CODIGO IS 'CODIGO DA CONTA CONTABIL' ; 
COMMENT ON COLUMN RES_PL_PAGTO_ANO_VIEW.CCT_CODIGO IS 'CODIGO DA CONTA CONTABIL' ; 
COMMENT ON COLUMN RES_PL_PAGTO_ANO_VIEW_GERAL.CCT_CODIGO IS 'CODIGO DA CONTA CONTABIL' ; 
comment ON VIEW VW_SPED_EMPRESA IS 'INFORMACOES SPED EMPRESA';
COMMENT ON VIEW VW_SPED_INSCRICAO_ST IS 'INFORMACOES SPED DO CONTRIBUINTE SUBSTITUTO OU RESPONSAVEL PELO ICMS DESTINO';
COMMENT ON VIEW VW_SPED_CONTADOR IS 'INFORMACOES SPED DO CONTADOR';
COMMENT ON VIEW VW_SPED_UNIDADE_MEDIDA IS 'INFORMACOES SPED UNIDADE DE MEDIDA';
COMMENT ON COLUMN FIN_RATEIO.PCX_CODIGO IS 'CODIGO DO CENTRO DE CUSTO' ; 
COMMENT ON COLUMN PED0000.PCX_CODIGO IS 'CODIGO DO CENTRO DE CUSTO' ; 
COMMENT ON COLUMN PCX0000_PLANO.PCX_CODIGO IS 'CODIGO DO CENTRO DE CUSTO' ; 
COMMENT ON COLUMN ENF_IT01_PROJETO_OBRA.PCX_CODIGO IS 'CODIGO DO CENTRO DE CUSTO' ; 
COMMENT ON COLUMN CLI0000.PCX_CODIGO IS 'CODIGO DO CENTRO DE CUSTO' ; 
COMMENT ON COLUMN NF_PC01.PCX_CODIGO IS 'CODIGO DO CENTRO DE CUSTO' ; 
COMMENT ON COLUMN ENF0001.PCX_CODIGO IS 'CODIGO DO CENTRO DE CUSTO' ; 
COMMENT ON COLUMN FAT_PC01.PCX_CODIGO IS 'CODIGO DO CENTRO DE CUSTO' ; 
COMMENT ON COLUMN FAT0000.PCX_CODIGO IS 'CODIGO DO CENTRO DE CUSTO' ; 
COMMENT ON COLUMN PAG_PC01.PCX_CODIGO IS 'CODIGO DO CENTRO DE CUSTO' ; 
COMMENT ON COLUMN PAG0000.PCX_CODIGO IS 'CODIGO DO CENTRO DE CUSTO' ; 
COMMENT ON COLUMN PCX0000.PCX_CODIGO IS 'CODIGO DO CENTRO DE CUSTO' ; 
COMMENT ON COLUMN PCX0000_PERFIL_COLABORADOR.PCX_CODIGO IS 'CODIGO DO CENTRO DE CUSTO' ; 
COMMENT ON COLUMN LISTA_RATEIO_VIEW.PCX_CODIGO IS 'CODIGO DO CENTRO DE CUSTO' ; 
COMMENT ON COLUMN LISTA_RATEIO_VIEW_GERAL.PCX_CODIGO IS 'CODIGO DO CENTRO DE CUSTO' ; 
COMMENT ON COLUMN RESUMO_RATEIO_VIEW.PCX_CODIGO IS 'CODIGO DO CENTRO DE CUSTO' ; 
COMMENT ON COLUMN RESUMO_RATEIO_VIEW_GERAL.PCX_CODIGO IS 'CODIGO DO CENTRO DE CUSTO' ; 
COMMENT ON COLUMN RESUMO_RATEIO_SEMANA_VIEW.PCX_CODIGO IS 'CODIGO DO CENTRO DE CUSTO' ; 
COMMENT ON COLUMN RESUMO_RATEIO_SEMANA_VIEW_GERAL.PCX_CODIGO IS 'CODIGO DO CENTRO DE CUSTO' ; 
COMMENT ON COLUMN RESUMO_BIMESTRE_VIEW.PCX_CODIGO IS 'CODIGO DO CENTRO DE CUSTO' ; 
COMMENT ON COLUMN RESUMO_BIMESTRE_VIEW_GERAL.PCX_CODIGO IS 'CODIGO DO CENTRO DE CUSTO' ; 
COMMENT ON COLUMN RESUMO_TRIMESTRE_VIEW.PCX_CODIGO IS 'CODIGO DO CENTRO DE CUSTO' ; 
COMMENT ON COLUMN RESUMO_TRIMESTRE_VIEW_GERAL.PCX_CODIGO IS 'CODIGO DO CENTRO DE CUSTO' ; 
COMMENT ON COLUMN RESUMO_SEMESTRE_VIEW.PCX_CODIGO IS 'CODIGO DO CENTRO DE CUSTO' ; 
COMMENT ON COLUMN RESUMO_SEMESTRE_VIEW_GERAL.PCX_CODIGO IS 'CODIGO DO CENTRO DE CUSTO' ; 
COMMENT ON COLUMN RESUMO_ANO_VIEW.PCX_CODIGO IS 'CODIGO DO CENTRO DE CUSTO' ; 
COMMENT ON COLUMN RESUMO_ANO_VIEW_GERAL.PCX_CODIGO IS 'CODIGO DO CENTRO DE CUSTO' ; 
COMMENT ON COLUMN RESUMO_MENSAL_VIEW.PCX_CODIGO IS 'CODIGO DO CENTRO DE CUSTO' ; 
COMMENT ON COLUMN RESUMO_MENSAL_VIEW_GERAL.PCX_CODIGO IS 'CODIGO DO CENTRO DE CUSTO' ; 
COMMENT ON COLUMN PCX0000_VIEW.PCX_CODIGO IS 'CODIGO DO CENTRO DE CUSTO' ; 
COMMENT ON COLUMN LISTA_PL_CC_VENCTO_VIEW.PCX_CODIGO IS 'CODIGO DO CENTRO DE CUSTO' ; 
COMMENT ON COLUMN LISTA_PL_CC_VENCTO_VIEW_GERAL.PCX_CODIGO IS 'CODIGO DO CENTRO DE CUSTO' ; 
COMMENT ON COLUMN PL_CC_VENCTO_VIEW.PCX_CODIGO IS 'CODIGO DO CENTRO DE CUSTO' ; 
COMMENT ON COLUMN PL_CC_VENCTO_VIEW_GERAL.PCX_CODIGO IS 'CODIGO DO CENTRO DE CUSTO' ; 
COMMENT ON COLUMN LISTA_PL_CC_PAGTO_VIEW.PCX_CODIGO IS 'CODIGO DO CENTRO DE CUSTO' ; 
COMMENT ON COLUMN LISTA_PL_CC_PAGTO_VIEW_GERAL.PCX_CODIGO IS 'CODIGO DO CENTRO DE CUSTO' ; 
COMMENT ON COLUMN PL_CC_PAGTO_VIEW.PCX_CODIGO IS 'CODIGO DO CENTRO DE CUSTO' ; 
COMMENT ON COLUMN PL_CC_PAGTO_VIEW_GERAL.PCX_CODIGO IS 'CODIGO DO CENTRO DE CUSTO' ; 


ALTER TABLE ENF_IT01 ADD ENF_UCOM VARCHAR(5);
ALTER TABLE ENF_IT01 ADD ENF_UTRIB VARCHAR(5);
COMMENT ON COLUMN ENF_IT01.ENF_UCOM IS 'UNIDADE COMERCIAL/ VENDIDA';
COMMENT ON COLUMN ENF_IT01.ENF_UTRIB IS 'UNIDADE TRIBUTADA';
ALTER TABLE ENF_IT01 ADD ENF_QTDE_ORIGINAL NUMERIC(18,5);
ALTER TABLE ENF_IT01 ADD ENF_PRECO_ORIGINAL NUMERIC(18,5);
ALTER TABLE ENF_IT01 ADD ENF_PTOTAL_ORIGINAL NUMERIC(18,5);
COMMENT ON COLUMN ENF_IT01.ENF_QTDE_ORIGINAL IS 'QUANTIDADE QUE VEIO NA NOTA, SEM SER CONVERTIDA NA UNIDADE USADA PARA ARMAZENAR';
COMMENT ON COLUMN ENF_IT01.ENF_PRECO_ORIGINAL IS 'PRECO QUE VEIO NA NOTA ';
COMMENT ON COLUMN ENF_IT01.ENF_PTOTAL_ORIGINAL IS 'TOTAL QUE VEIO NA NOTA ';

CREATE OR ALTER VIEW VW_SPED_UNIDADE_MEDIDA (UNIDADE_SIGLA, UNIDADE_DESCRICAO)
AS
SELECT DISTINCT pr.PRD_UND,COALESCE(PRD_UNIdescri,pr.PRD_UND) 
FROM PRD0000 pr  JOIN PRD_UNIDADE un ON (un.PRD_UNISIGLA = pr.PRD_UND) 
WHERE pr.PRD_UND <> '';

CREATE OR ALTER VIEW VW_SPED_CONTADOR (EMPRESA, NOME, CPF, CNPJ, CRC, CEP, ENDERECO, NUMERO, COMPLEMENTO, BAIRRO, FONE, FAX, EMAIL, CODIGO_MUNICIPIO_IBGE)
AS
SELECT
T1.EMP_CODIGO,
T1.EMP_CONT_NOME,
T1.EMP_CONT_CPF,
T1.EMP_CONT_CNPJ,
T1.EMP_CONT_CRC,
T1.EMP_CONT_CEP,
T1.EMP_CONT_ENDERECO,
T1.EMP_CONT_NUMERO,
T1.EMP_CONT_COMPLEMENTO,
T1.EMP_CONT_BAIRRO,
T1.EMP_CONT_FONE,
T1.EMP_CONT_FAX,
T1.EMP_CONT_EMAIL,
(SELECT T2.CID_COD_IBGE FROM CID0000 T2 WHERE T2.CID_CODIGO = T1.EMP_CONT_CID)
FROM
EMP0000 T1;

SET TERM ^ ;  
CREATE or ALTER  TRIGGER CLI0000_BU0 FOR CLI0000 BEFORE UPDATE
AS
DECLARE VARIABLE CID_IBGE_ANT INTEGER;
DECLARE VARIABLE CID_IBGE_NOVO INTEGER;
begin
  /* Trigger text */
  /*RAZAO - CAMPO 3(NOME DO PARTICIPANTES)*/
  IF (NEW.CLI_RAZAO <> OLD.CLI_RAZAO) THEN
    INSERT INTO CLI0000_ALTER (CLI_CODIGO, EMP_CODIGO,CLIA_DATA,CLIA_CAMPO,CLIA_VALOR_ANTERIOR,CLIA_VALOR_NOVO)
                          VALUES (NEW.CLI_CODIGO, NEW.EMP_CODIGO,CURRENT_DATE,'CLI_RAZAO',OLD.CLI_RAZAO,NEW.CLI_RAZAO);
  /*PAI_CODIGO CAMPO 4*/
  IF (NEW.PAI_CODIGO <> OLD.PAI_CODIGO) THEN
    INSERT INTO CLI0000_ALTER (CLI_CODIGO,EMP_CODIGO,CLIA_DATA,CLIA_CAMPO,CLIA_VALOR_ANTERIOR,CLIA_VALOR_NOVO)
                          VALUES (NEW.CLI_CODIGO,NEW.EMP_CODIGO,CURRENT_DATE,'PAI_CODIGO',OLD.PAI_CODIGO,NEW.PAI_CODIGO);

  /*CLI_CGC CAMPO 5 E 6*/
  IF (NEW.CLI_CGC <> OLD.CLI_CGC) THEN
    INSERT INTO CLI0000_ALTER (CLI_CODIGO,EMP_CODIGO,CLIA_DATA,CLIA_CAMPO,CLIA_VALOR_ANTERIOR,CLIA_VALOR_NOVO)
                          VALUES (NEW.CLI_CODIGO,NEW.EMP_CODIGO,CURRENT_DATE,'CLI_CGC',OLD.CLI_CGC,NEW.CLI_CGC);
   
 /* CID_CODIGO CAMPO 8 (CODIGO_MUNICIPIO_IBGE)*/
 IF (NEW.CID_CODIGO <> OLD.CID_CODIGO) THEN 
 BEGIN
    SELECT CID_COD_IBGE FROM CID0000 T2 WHERE T2.CID_CODIGO = NEW.CID_CODIGO INTO CID_IBGE_NOVO;
    SELECT CID_COD_IBGE FROM CID0000 T2 WHERE T2.CID_CODIGO = OLD.CID_CODIGO INTO CID_IBGE_ANT;
    
    INSERT INTO CLI0000_ALTER (CLI_CODIGO,EMP_CODIGO,CLIA_DATA,CLIA_CAMPO,CLIA_VALOR_ANTERIOR,CLIA_VALOR_NOVO)
                          VALUES (NEW.CLI_CODIGO,NEW.EMP_CODIGO,CURRENT_DATE,'CID_COD_IBGE',:CID_IBGE_ANT,:CID_IBGE_NOVO);
 END
/* CLI_SUFRAMA CAMPO 9*/
 IF (NEW.CLI_SUFRAMA <> OLD.CLI_SUFRAMA) THEN
    INSERT INTO CLI0000_ALTER (CLI_CODIGO,EMP_CODIGO,CLIA_DATA,CLIA_CAMPO,CLIA_VALOR_ANTERIOR,CLIA_VALOR_NOVO)
                          VALUES (NEW.CLI_CODIGO,NEW.EMP_CODIGO,CURRENT_DATE,'CLI_SUFRAMA',OLD.CLI_SUFRAMA,NEW.CLI_SUFRAMA);
                         
                          
  /*ENDEREÇO CLI_ENDERE CAMPO 10*/
  IF (NEW.CLI_ENDERE <> OLD.CLI_ENDERE) THEN
    INSERT INTO CLI0000_ALTER (CLI_CODIGO,EMP_CODIGO,CLIA_DATA,CLIA_CAMPO,CLIA_VALOR_ANTERIOR,CLIA_VALOR_NOVO)
                          VALUES (NEW.CLI_CODIGO,NEW.EMP_CODIGO,CURRENT_DATE,'CLI_ENDERE',OLD.CLI_ENDERE,NEW.CLI_ENDERE);
  /*BAIRRO CLI_BAIRRO CAMPO 13*/
  IF (NEW.CLI_BAIRRO <> OLD.CLI_BAIRRO) THEN
    INSERT INTO CLI0000_ALTER (CLI_CODIGO,EMP_CODIGO,CLIA_DATA,CLIA_CAMPO,CLIA_VALOR_ANTERIOR,CLIA_VALOR_NOVO)
                          VALUES (NEW.CLI_CODIGO,NEW.EMP_CODIGO,CURRENT_DATE,'CLI_BAIRRO',OLD.CLI_BAIRRO,NEW.CLI_BAIRRO);
  /*CLI_INSC*/
  IF (NEW.CLI_INSC <> OLD.CLI_INSC) THEN
    INSERT INTO CLI0000_ALTER (CLI_CODIGO,EMP_CODIGO,CLIA_DATA,CLIA_CAMPO,CLIA_VALOR_ANTERIOR,CLIA_VALOR_NOVO)
                          VALUES (NEW.CLI_CODIGO,NEW.EMP_CODIGO,CURRENT_DATE,'CLI_INSC',OLD.CLI_INSC,NEW.CLI_INSC);
                          
                          
end
^
SET TERM ; ^

COMMENT ON TRIGGER CLI0000_BU0 IS 'ALTERACOES FEITAS NO CLIENTE SEGUNDO SPED';
COMMENT ON TABLE CLI0000_ALTER IS 'HISTORICO DE ALTERACOES DO CLIENTE';

SET TERM ^ ;
CREATE OR ALTER TRIGGER FOR0000_BU0 FOR FOR0000 BEFORE UPDATE
AS
DECLARE VARIABLE CID_IBGE_ANT INTEGER;
DECLARE VARIABLE CID_IBGE_NOVO INTEGER;
begin

  /*RAZAO CAMPO 3*/
  IF (NEW.FOR_RAZAO <> OLD.FOR_RAZAO) THEN
    INSERT INTO FOR0000_ALTER (FOR_CODIGO, EMP_CODIGO,FORA_DATA,FORA_CAMPO,FORA_VALOR_ANTERIOR,FORA_VALOR_NOVO)
                          VALUES (NEW.FOR_CODIGO,NEW.EMP_CODIGO,CURRENT_DATE,'FOR_RAZAO',OLD.FOR_RAZAO,NEW.FOR_RAZAO);
                          
  /*FOR_CGC CAMPO 5 E 6*/
  IF (NEW.FOR_CGC <> OLD.FOR_CGC) THEN
    INSERT INTO FOR0000_ALTER (FOR_CODIGO, EMP_CODIGO,FORA_DATA,FORA_CAMPO,FORA_VALOR_ANTERIOR,FORA_VALOR_NOVO)
                          VALUES (NEW.FOR_CODIGO,NEW.EMP_CODIGO,CURRENT_DATE,'FOR_CGC',OLD.FOR_CGC,NEW.FOR_CGC);
                          
    /*CID_CODIGO CAMPO 8*/
  IF (NEW.CID_CODIGO <> OLD.CID_CODIGO) THEN
   BEGIN
    SELECT CID_COD_IBGE FROM CID0000 T2 WHERE T2.CID_CODIGO = NEW.CID_CODIGO INTO CID_IBGE_NOVO;
    SELECT CID_COD_IBGE FROM CID0000 T2 WHERE T2.CID_CODIGO = OLD.CID_CODIGO INTO CID_IBGE_ANT;
    INSERT INTO FOR0000_ALTER (FOR_CODIGO, EMP_CODIGO,FORA_DATA,FORA_CAMPO,FORA_VALOR_ANTERIOR,FORA_VALOR_NOVO)
                          VALUES (NEW.FOR_CODIGO,NEW.EMP_CODIGO,CURRENT_DATE,'CID_COD_IBGE',:CID_IBGE_ANT,:CID_IBGE_NOVO);
  END                        
                          
    /*FOR_SUFRAMA CAMPO 9*/
  IF (NEW.FOR_SUFRAMA <> OLD.FOR_SUFRAMA) THEN
    INSERT INTO FOR0000_ALTER (FOR_CODIGO, EMP_CODIGO,FORA_DATA,FORA_CAMPO,FORA_VALOR_ANTERIOR,FORA_VALOR_NOVO)
                          VALUES (NEW.FOR_CODIGO,NEW.EMP_CODIGO,CURRENT_DATE,'FOR_SUFRAMA',OLD.FOR_SUFRAMA,NEW.FOR_SUFRAMA);                        
                               
                          
  /*ENDEREÇO CAMPO 10*/
  IF (NEW.FOR_ENDERE <> OLD.FOR_ENDERE) THEN
    INSERT INTO FOR0000_ALTER (FOR_CODIGO, EMP_CODIGO,FORA_DATA,FORA_CAMPO,FORA_VALOR_ANTERIOR,FORA_VALOR_NOVO)
                          VALUES (NEW.FOR_CODIGO,NEW.EMP_CODIGO,CURRENT_DATE,'FOR_ENDERE',OLD.FOR_ENDERE,NEW.FOR_ENDERE);
  /*BAIRRO CAMPO 13*/
  IF (NEW.FOR_BAIRRO <> OLD.FOR_BAIRRO) THEN
    INSERT INTO FOR0000_ALTER (FOR_CODIGO, EMP_CODIGO,FORA_DATA,FORA_CAMPO,FORA_VALOR_ANTERIOR,FORA_VALOR_NOVO)
                          VALUES (NEW.FOR_CODIGO,NEW.EMP_CODIGO,CURRENT_DATE,'FOR_BAIRRO',OLD.FOR_BAIRRO,NEW.FOR_BAIRRO);
  /*CLI_INSC*/
  IF (NEW.FOR_INSC <> OLD.FOR_INSC) THEN
    INSERT INTO FOR0000_ALTER (FOR_CODIGO, EMP_CODIGO,FORA_DATA,FORA_CAMPO,FORA_VALOR_ANTERIOR,FORA_VALOR_NOVO)
                          VALUES (NEW.FOR_CODIGO,NEW.EMP_CODIGO,CURRENT_DATE,'FOR_INSC',OLD.FOR_INSC,NEW.FOR_INSC);
END
^
SET TERM ; ^

COMMENT ON TRIGGER FOR0000_BU0 IS 'ALTERACOES FEITAS NO FORNECEDOR SEGUNDO SPED';
COMMENT ON TABLE FOR0000_ALTER IS 'HISTORICO DE ALTERACOES DO FORNECEDOR';

ALTER TABLE CLI0000_ALTER ADD CLIA_SPED_DTENVIADO DATE;
ALTER TABLE FOR0000_ALTER ADD FORA_SPED_DTENVIADO DATE;

COMMENT ON COLUMN FOR0000_ALTER.FORA_SPED_DTENVIADO IS 'DATA DE ENVIO DO SPED REGISTRO 175';
COMMENT ON COLUMN CLI0000_ALTER.CLIA_SPED_DTENVIADO IS 'DATA DE ENVIO DO SPED REGISTRO 175';

CREATE SEQUENCE GEN_PRD0000_ALTER;

CREATE TABLE PRD0000_ALTER
(   PRDA_REGISTRO INTEGER NOT NULL,
    EMP_CODIGO VARCHAR(3),
	PRDA_DATAINI DATE,
	PRDA_DATAFIM DATE,
	PRDA_CAMPO VARCHAR(30),
	PRDA_VALOR_ANTERIOR VARCHAR(100),
	PRDA_VALOR_NOVO VARCHAR(100),
	PRD_CODIGO VARCHAR(5),
	PRDA_SPED_DTENVIADO date ,
	CONSTRAINT PK_PRD0000_ALTER PRIMARY KEY (PRDA_REGISTRO)
);

COMMENT ON TABLE PRD0000_ALTER IS 'HISTORICO DE ALTERACOES DO PRODUTO';

SET TERM ^ ;
CREATE OR ALTER TRIGGER PRD0000_BU FOR PRD0000 BEFORE UPDATE
AS 
DECLARE VARIABLE CHAVE INTEGER;
DECLARE VARIABLE vPRDA_REGISTRO INTEGER;
DECLARE VARIABLE vDataInicial DATE;
BEGIN
   IF (NEW.PRD_DESCRI <> OLD.PRD_DESCRI) THEN
   BEGIN
   
       vdataInicial = NEW.PRD_DTCADASTRO;
       
       IF (vdataInicial IS NULL) THEN
        SELECT min(DATA_HORA)  FROM KARDEX
        WHERE PRD_CODIGO = NEW.prd_codigo
        INTO :vDataInicial;
        
       IF (vdataInicial IS NULL) THEN
          SELECT MIN (ef.ENF_EMISSAO) FROM ENF0001 ef INNER JOIN  ENF_IT01 IT ON (IT.ENF_IT_NOTANUMBER = EF.ENF_NOTANUMBER AND IT.EMP_CODIGO = EF.EMP_CODIGO)
          INTO :vDataInicial;
          
       IF (vdataInicial IS null) THEN
         SELECT min(nf_emissao) FROM NF0001 nf INNER JOIN NF_IT01 it ON (it.NF_IT_NOTANUMER = nf.NF_NOTANUMBER  )   
         WHERE PRD_REFER = NEW.prd_refer 
         INTO :vDataInicial;

         CHAVE = GEN_ID(GEN_PRD0000_ALTER,1);
         INSERT INTO PRD0000_ALTER (PRDA_REGISTRO,EMP_CODIGO,PRDA_DATAINI,PRDA_DATAFIM, PRDA_CAMPO,PRDA_VALOR_ANTERIOR,PRDA_VALOR_NOVO,PRD_CODIGO )
         VALUES (:CHAVE, NEW.EMP_CODIGO,:vDataInicial,CURRENT_DATE,'PRD_DESCRI',OLD.PRD_DESCRI,NEW.PRD_DESCRI, NEW.PRD_CODIGO ) ;            
   END
   
END
^
SET TERM ; ^
COMMENT ON TRIGGER PRD0000_BU IS 'GRAVA HISTORICO DO PRODUTO';

-- CONTA CONTABIL NO GRUPO
COMMENT ON COLUMN PRD0000.PTI_CODIGO IS 'TIPO DE PRODUTO';
COMMENT ON COLUMN PRD_TIPO.PTI_CODIGO IS 'IDENTIFICADO DO TIPO DE PRODUTO';
COMMENT ON TABLE PRD_TIPO IS 'CADASTRO DE TIPO DE PRODUTO';
ALTER TABLE PRD_GRUPO ADD CCT_CODIGO VARCHAR(3);
COMMENT ON COLUMN PRD_GRUPO.CCT_CODIGO IS 'CODIGO DA CONTA CONTABIL';


ALTER TABLE PRD0000 ADD PCX_CODIGO VARCHAR(3);
COMMENT ON COLUMN PRD0000.PCX_CODIGO IS 'CODIGO DO CENTRO DE CUSTO' ; 

ALTER TABLE CCT_0000 ADD DT_ALT TIMESTAMP ;

UPDATE CCT_0000 
SET DT_ALT = CURRENT_DATE;

commit work;

SET TERM ^ ;
CREATE trigger cct_0000_biu0 for cct_0000
active before insert or update position 0
AS
begin
 NEW.DT_ALT = CURRENT_DATE;
end
^
SET TERM ; ^

comment ON VIEW VW_SPED_NOTAS_FISCAIS IS 'NOTAS FISCAIS DE ENTRADA E SAIDA PARA SPED';
comment ON VIEW VW_SPED_NOTAS_FISCAIS_ITENS IS 'ITENS DAS NOTAS PARA O SPED';
COMMENT ON TABLE PCL0000 IS 'PRAZOS DE PAGAMENTO';


CREATE OR ALTER VIEW VW_SPED_NOTAS_FISCAIS (EMPRESA, REGISTRO, TIPO_NOTA, TIPO_EMITENTE, CODIGO_PARTICIPANTE, UF_PARTICIPANTE, CODIGO_MODELO, CODIGO_SITUACAO_TRIBUTARIA, SERIE, NUMERO, CHAVE_ELETRONICA, DATA_EMISSAO, DATA_ENTRADA_SAIDA, VALOR_NOTA, TIPO_PGTO, VALOR_DESCONTO, VALOR_ABATIMENTO, VALOR_MERCADORIAS, INDICADOR_FRETE, VALOR_FRETE, VALOR_SEGURO, VALOR_OUTRAS_DESP_ACES, VALOR_BASE_CALCULO_ICMS, VALOR_ICMS, VALOR_BASE_ICMS_ST, VALOR_RETIDO_ST, VALOR_IPI, VALOR_PIS, VALOR_COFINS, VALOR_PIS_RETIDO_ST, VALOR_COFINS_ST,CCT_CODIGO, OPE_CODIGO)
AS
SELECT
ENF.EMP_CODIGO as EMPRESA ,
('E'||ENF.ENF_NOTANUMBER ) as REGISTRO,
CAST((CASE WHEN (1=1) THEN 'E'
END) AS VARCHAR(1)),
CAST((CASE WHEN (1=1) THEN 'T'
END) AS VARCHAR(1)),
CAST('F'||ENF.FOR_CODIGO AS VARCHAR(10)) as CODIGO_PARTICIPANTE,
(SELECT FIRST 1 FOR_UF FROM FOR0000 F WHERE F.FOR_CODIGO = ENF.FOR_CODIGO) AS UF_PARTICIPANTE, 
enf.ENF_MODELO_NF as CODIGO_MODELO,
--(SELECT T1.SMDF_CODIGO FROM SPED_MODELO_DOC_FISCAL T1 WHERE T1.SMDF_REGISTRO = ENF.SMDF_REGISTRO),
CAST((CASE WHEN (1=1) THEN
    '00'
END) AS VARCHAR(2)),
ENF.ENF_SERIE,
ENF.ENF_NOTANUMBER,
ENF.ENF_CHAVE_NFE,
ENF.ENF_EMISSAO,
ENF.ENF_ENTRADA AS DATA_ENTRADA_SAIDA,
ENF.ENF_TOT_PROD as VALOR_NOTA,
coalesce (ENF_MODALIDADE,(SELECT T2.PCL_MODALIDADE FROM PCL0000 T2 WHERE T2.PCL_CODIGO =  ENF.PCL_CODIGO) ) as TIPO_PGTO,
ENF.ENF_VL_DESCTO,
CAST((CASE WHEN (1=1) THEN
    0
END) AS NUMERIC(18,4)),
ENF.ENF_TOT_PROD,
CASE
    WHEN (ENF.ENF_TIPO_FRETE = 1) THEN
        0
    WHEN (ENF.ENF_TIPO_FRETE = 2) THEN
        1
    WHEN (ENF.ENF_TIPO_FRETE = 0) THEN
        2
    ELSE
        9
END INDICADOR_FRETE,
ENF.ENF_VLFRETE,
ENF.ENF_VLSEGURO,
ENF.ENF_DESP_ACES,
ENF.ENF_BASEICMS,
ENF.ENF_VL_ICMS,
ENF.ENF_VLBASESUBTRIB as VALOR_BASE_ICMS_ST ,
ENF.ENF_VL_SUBTRIB as VALOR_RETIDO_ST,
ENF.ENF_VL_IPI,
ENF.ENF_VLPIS,
ENF.ENF_VLCOFINS,
CASE
    WHEN (1=1) THEN
        0.00
END, 
CASE
    WHEN (1=1) THEN
        0.00
END,
CCT_CODIGO,
OPE_CODIGO
FROM
ENF0001 ENF
WHERE ENF_MODELO_NF = '55'
UNION ALL
SELECT
NF.EMP_CODIGO,
('S'||NF.NF_NOTANUMBER),
NF.NF_ENTR_SAID,
'P' AS TIPO_EMITENTE,
CAST('C'||NF.CLI_CODIGO AS VARCHAR(10)),
(SELECT FIRST 1 CLI_UF  FROM CLI0000 C WHERE C.CLI_CODIGO = NF.CLI_CODIGO ) AS UF_PARTICIPANTE,
CASE WHEN NF_NUM_NFCE IS NULL THEN '55'
ELSE '65' END  AS CODIGO_MODELO, 
--(SELECT T1.SMDF_CODIGO FROM SPED_MODELO_DOC_FISCAL T1 WHERE T1.SMDF_REGISTRO = NF.SMDF_REGISTRO),
CAST((
    CASE
        WHEN (NF.NF_STATUS_NFE = 'C') THEN
            '02'
        ELSE
            '00'
END) AS VARCHAR(2)),
COALESCE(NF_SERIE,'1'),

CASE WHEN NF_NUM_NFCE IS NOT NULL THEN NF_NUM_NFCE
     WHEN (NF.NF_CHAVE_NFE <> '') then NF.NF_NUM_NFE
     else
         COALESCE(NF.NF_NOTANUMBER,'1')
    end AS NUMERO,
NF.NF_CHAVE_NFE,
NF.NF_EMISSAO,
NF.NF_SAIDA,
NF.NF_TOT_PROD as VALOR_NOTA,
(SELECT T2.PCL_MODALIDADE FROM PCL0000 T2 WHERE T2.PCL_CODIGO =  NF.PCL_CODIGO),
NF.NF_VL_DESCTO,
CAST((CASE WHEN (1=1) THEN
    0
END) AS NUMERIC(18,4)),
NF.NF_TOT_PROD,
CASE
    WHEN (NF.NF_TIPO_FRETE = 'C') THEN
        0
    WHEN (NF.NF_TIPO_FRETE = 'F') THEN
        1
    WHEN (NF.NF_TIPO_FRETE = 'O') THEN
        2
    ELSE
        9
END as INDICADOR_FRETE ,
NF.NF_VLFRETE,
NF.NF_VLSEGURO,
NF.NF_DESP_ACES,
NF.NF_BASEICMS,
NF.NF_VL_ICMS,
NF.NF_VLBASESUBTRIB,
NF.NF_VL_SUBTRIB,
NF.NF_VL_IPI,
NF.NF_VALORTOT_PIS,
NF.NF_VALORTOT_COFINS,
CASE
    WHEN (1=1) THEN
        0.00
END, 
CASE
    WHEN (1=1) THEN
        0.00
END,
(SELECT first 1 cct_codigo FROM FAT0000 WHERE fat_codigo = nf.NF_NOTANUMBER AND EMP_CODIGO = nf.emp_codigo ) as cct_codigo,
NULL AS OPE_CODIGO
FROM
NF0001 NF
where NF.nf_cancelada = 'N';
       
--- view do item da nota       
CREATE OR ALTER VIEW VW_SPED_NOTAS_FISCAIS_ITENS (REGISTRO_NOTA, CODIGO_ITEM, DESCRICAO_ITEM, QUANTIDADE, UNIDADE, VALOR_ITEM, VALOR_DESCONTO, INDICADOR_MOVIMENTACAO, CST_ICMS, CFOP, CODIGO_CFOP,OPE_CODIGO, VALOR_BASE_ICMS, ALIQUOTA_ICMS, VALOR_ICMS, VALOR_BASE_ICMS_ST, ALIQUOTA_ICMS_ST, VALOR_ICMS_ST, INDICADOR_APURACAO_IPI, CST_IPI, CODIGO_ENQUAD_IPI, VALOR_BASE_IPI, ALIQUOTA_IPI, VALOR_IPI, CST_PIS, VALOR_BASE_PIS, ALIQ_PIS, QUANTIDADE_BASE_PIS, ALIQ_PIS_REAIS, VALOR_PIS, CST_COFINS, VALOR_BASE_COFINS, ALIQUOTA_COFINS, QUANTIDADE_BASE_COFINS, ALIQ_COFINS_REAIS, VALOR_COFINS, FOR_CODIGO)
AS
SELECT
CAST('E'||T1.ENF_IT_NOTANUMBER AS VARCHAR(30)),
T1.PRD_CODIGO,
CAST(T1.PRD_DESCRI AS VARCHAR(500)),
coalesce(t1.ENF_QTDE_ORIGINAL, T1.ENF_QTDE),
COALESCE(T1.ENF_UCOM,(SELECT FIRST 1 CASE PRD_PRODSERV    WHEN 'S' THEN COALESCE(T3.PRD_UND,'UN') ELSE T3.PRD_UND END AS UNIDADE_MEDIDA  FROM PRD0000 T3 WHERE T3.PRD_REFER = T1.PRD_REFER)),
COALESCE(T1.ENF_PRECO_ORIGINAL,T1.ENF_PRECO),
T1.ENF_IT_DESCTO,
CAST((CASE WHEN (1=1) THEN
    'S'
END) AS VARCHAR(1)),
COALESCE(t1.STB_TRIBUTACAO,'00'),
/*(CASE WHEN
(SELECT FIRST 1 ENF_MODELO_NF FROM enf0001 EF WHERE  T1.ENF_IT_NOTANUMBER = EF.ENF_NOTANUMBER)='57' THEN '00'
ELSE COALESCE(t1.STB_TRIBUTACAO,'00') END) AS CST_ICMS,*/
t1.ENF_CFOP,
t1.ENF_CFOP,
T1.OPE_CODIGO AS OPE_CODIGO,
t1.ENF_IT_BASEICMS,
t1.ENF_ICMSALIQ,
t1.ENF_ICMS,
t1.ENF_IT_BASESUBTRIB AS VALOR_BASE_ICMS_ST,
t1.ENF_IT_ALIQSUBTRIB AS ALIQUOTA_ICMS_ST,
CAST(ENF_IT_VLSUBTRIB AS NUMERIC(18,2)) as VALOR_ICMS_ST,
CAST((CASE WHEN (1=1) THEN
    0
END) AS INTEGER),
t1.CST_IPI,
CAST(CASE WHEN (1=1) THEN
    'XXX'
END as varchar(3)),
COALESCE(T1.ENF_IT_BASEIPI,0) AS VALOR_BASE_IPI,
COALESCE(T1.ENF_IPIALIQ,0) AS ALIQUOTA_IPI,
COALESCE(T1.ENF_IT_VLIPI,0) AS VALOR_IPI ,
t1.CST_PIS,
COALESCE(T1.ENF_BASEPIS,0),
COALESCE(T1.ENF_IT_ALIQPIS,0),
CASE WHEN (1=1) THEN
    0.00
END,
CASE WHEN (1=1) THEN
    0.00
END,
COALESCE(T1.ENF_IT_VLPIS,0),
t1.CST_COFINS,
COALESCE(T1.ENF_BASECOFINS,0),
COALESCE(T1.ENF_IT_ALIQCOFINS,0),
CASE WHEN (1=1) THEN
    0.00
END,
CASE WHEN (1=1) THEN
    0.00
END,
COALESCE(T1.ENF_IT_VLCOFINS,0),
T1.FOR_CODIGO
FROM
ENF_IT01 T1
UNION ALL 
SELECT
CAST('S'||T2.NF_IT_NOTANUMER AS VARCHAR(30)),
(SELECT FIRST 1 T3.PRD_CODIGO FROM PRD0000 T3 WHERE T3.PRD_REFER = T2.PRD_REFER),
T2.PRD_DESCRI,
T2.NF_QTDE,
(SELECT FIRST 1 T3.PRD_UND FROM PRD0000 T3 WHERE T3.PRD_REFER = T2.PRD_REFER),
T2.NF_PRECO,
T2.NF_IDESCTO1,
CAST((CASE WHEN (1=1) THEN
    'S'
END) AS VARCHAR(1)),
COALESCE((SELECT FIRST 1 cast(T3.PRD_ORIGEM as varchar(1)) FROM PRD0000 T3 WHERE T3.PRD_REFER = T2.PRD_REFER),'00')||t2.STB_TRIBUTACAO,
cast(t2.NTP_CFOP as varchar(4)),
cast(t2.NTP_CFOP as varchar(4)),
OPE_CODIGO,
t2.NF_ICMSBASE,
t2.NF_ICMSALIQ,
t2.NF_ICMSVALOR,
t2.NF_SUBTRIBASE,
t2.NF_ALIQSUBTRIB,
CAST(t2.NF_VLSUBST AS NUMERIC(18,2)) as VALOR_ICMS_ST,
CAST((CASE WHEN (1=1) THEN  0 END) AS INTEGER),
(case when T2.NF_IPIVALOR > 0 then '50' end) CST_IPI, -- fixo na nf como 50
CAST(CASE WHEN (1=1) THEN  'XXX' END as varchar(3)),
COALESCE(T2.NF_IPIBASE,0) AS VALOR_BASE_IPI,
COALESCE(T2.NF_IPIALIQ,0) AS ALIQUOTA_IPI,
COALESCE(T2.NF_IPIVALOR,0) AS VALOR_IPI,
CAST(CASE WHEN (T2.NF_BASE_PIS > 0) THEN
    '01'
    ELSE
    '99'
END as varchar(3)),
COALESCE(T2.NF_BASE_PIS,0),
COALESCE(T2.NF_ALIQPIS,0),
CASE WHEN (1=1) THEN
    0.00
END,
CASE WHEN (1=1) THEN
    0.00
END,
COALESCE(T2.NF_VLPIS,0),
cast(CASE WHEN (T2.NF_BASE_COFINS > 0) THEN
    '01'
    ELSE
    '99'
END as varchar(3)),
COALESCE(T2.NF_BASE_COFINS,0),
COALESCE(T2.NF_ALIQCOFINS,0),
CASE WHEN (1=1) THEN
    0.00
END,
CASE WHEN (1=1) THEN
    0.00
END,
COALESCE(T2.NF_VLCOFINS,0),
NULL
FROM
NF_IT01 T2
WHERE
  EXISTS (SELECT 1 FROM PRD0000 T3 WHERE T3.PRD_REFER = T2.PRD_REFER)
  AND PRD_REFER IS NOT NULL
;
              

CREATE INDEX NFSERVICO_SRV_CODIGO_IDX ON NFSERVICO (SRV_CODIGO) ;
CREATE INDEX CLI0000_ALTER_DATA_IDX ON CLI0000_ALTER (CLIA_DATA) ;
CREATE INDEX CLI0000_ALTER_CLIA_SPED_DT_IDX ON CLI0000_ALTER (CLIA_SPED_DTENVIADO) ;

CREATE INDEX FOR0000_ALTER_FOR_CODIGO_IDX ON FOR0000_ALTER (FOR_CODIGO) ;
CREATE INDEX FOR0000_ALTER_DATA_IDX ON FOR0000_ALTER (FORA_DATA) ;
CREATE INDEX FOR0000_ALTER_SPED_DT_IDX ON FOR0000_ALTER (FORA_SPED_DTENVIADO) ;

  
DROP VIEW VW_SPED_NATUREZA_OPERACAO;

DELETE FROM PRD_UNIDADE;

INSERT INTO PRD_UNIDADE VALUES (0, 1, 'UN', 'Unidade', '001');
INSERT INTO PRD_UNIDADE VALUES (1, 2, 'PC', 'Peca', '001');
INSERT INTO PRD_UNIDADE VALUES (2, 3, 'BD', 'Balde', '001');
INSERT INTO PRD_UNIDADE VALUES (3, 4, 'BR', 'Barril', '001');
INSERT INTO PRD_UNIDADE VALUES (4, 5, 'CX', 'Caixa', '001');
INSERT INTO PRD_UNIDADE VALUES (5, 6, 'EMB', 'Embalagem', '001');
INSERT INTO PRD_UNIDADE VALUES (6, 7, 'FD', 'Fardo', '001');
INSERT INTO PRD_UNIDADE VALUES (7, 8, 'FR', 'Frasco ', '001');
INSERT INTO PRD_UNIDADE VALUES (8, 9, 'GL', 'Galão', '001');
INSERT INTO PRD_UNIDADE VALUES (9, 10, 'GR', 'Grama', '001');
INSERT INTO PRD_UNIDADE VALUES (10, 11, 'LT', 'Litro', '001');
INSERT INTO PRD_UNIDADE VALUES (11, 12, 'ML', 'Mililitro', '001');
INSERT INTO PRD_UNIDADE VALUES (12, 13, 'MT', 'Metro', '001');
INSERT INTO PRD_UNIDADE VALUES (13, 14, 'M2', 'Metro Quadrado', '001');
INSERT INTO PRD_UNIDADE VALUES (14, 15, 'M3', 'Metro Cubico', '001');
INSERT INTO PRD_UNIDADE VALUES (15, 16, 'MIL', 'Milheiro', '001');
INSERT INTO PRD_UNIDADE VALUES (16, 17, 'PCT', 'Pacote', '001');
INSERT INTO PRD_UNIDADE VALUES (17, 18, 'KG', 'Quilograma', '001');
INSERT INTO PRD_UNIDADE VALUES (18, 19, 'RL', 'Rolo', '001');
INSERT INTO PRD_UNIDADE VALUES (19, 20, 'CT', 'Cento', '001');
INSERT INTO PRD_UNIDADE VALUES (20, 21, 'LA', 'Lata', '001');
INSERT INTO PRD_UNIDADE VALUES (21, 22, 'T', 'Tonel', '001');
INSERT INTO PRD_UNIDADE VALUES (22, 23, 'PAR', 'Pares', '001');
INSERT INTO PRD_UNIDADE VALUES (23, 24, 'CJ', 'Conjunto', '001');
INSERT INTO PRD_UNIDADE VALUES (24, 25, 'TB', 'Tambor', '001');
INSERT INTO PRD_UNIDADE VALUES (25, 25, 'KIT', 'KIT de produtos', '001');
INSERT INTO PRD_UNIDADE VALUES (26, 26, 'MM', 'Milimetro', '001');
INSERT INTO PRD_UNIDADE VALUES (27, 27, 'KWH', 'Kilowatts (Energia)', '001');
INSERT INTO PRD_UNIDADE VALUES (28, 28, 'BOB', 'Bobina', '001');
INSERT INTO PRD_UNIDADE VALUES (29, 29, 'HR', 'Hora (refere-se a seviço)', '001');
INSERT INTO PRD_UNIDADE VALUES (30, 30, 'SC', 'Saco', '001');
INSERT INTO PRD_UNIDADE VALUES (31, 31, 'EX', 'Exemplar', '001');
INSERT INTO PRD_UNIDADE VALUES (32, 32, 'JG', 'Jogo', '001');
INSERT INTO PRD_UNIDADE VALUES (33, 33, 'DL', 'Decilitro','001');


COMMIT WORK;


UPDATE PCL0000
SET PCL_MODALIDADE = '0'
WHERE PCL_MODALIDADE = 'A';

commit work;

UPDATE PCL0000
SET PCL_MODALIDADE = '1'
WHERE PCL_MODALIDADE = 'P';
commit work;

UPDATE PCL0000
SET PCL_MODALIDADE = '2'
WHERE PCL_MODALIDADE = 'O';

commit work;

COMMENT ON TABLE PCL0000 IS 'PRAZOS DE PAGAMENTO';
COMMENT ON COLUMN PCL0000.PCL_MODALIDADE IS 'TIPO DE PAGAMENTO 0 - A VISTA, 1 - PRAZO, 2 - OUTROS, 9 - SEM PAGAMENTO';
/*  criado na versão 504, porque deu erro na tela
ALTER TABLE ENF0001 ADD ENF_MODALIDADE VARCHAR(1);
COMMENT ON COLUMN ENF0001.ENF_MODALIDADE IS 'TIPO DE PAGAMENTO 0 - A VISTA, 1 - PRAZO, 2 - OUTROS, 9 - SEM PAGAMENTO'; */

CREATE INDEX NF0001_IDX2 ON NF0001 (NF_EMISSAO);
CREATE INDEX ENF0001_IDX2 ON ENF0001 (ENF_ENTRADA);

ALTER TABLE EMP0000 ADD EMP_CONIPI VARCHAR(1) ;
COMMENT ON COLUMN EMP0000.EMP_CONIPI IS 'EMPRESA NAO ENQUADRADA COMO CONTRIBUINTE DE IPI';

CREATE OR ALTER VIEW VW_SPED_EMPRESA (EMPRESA, RAZAO_SOCIAL, CNPJ_CPF, UF, IE, CODIGO_MUNICIPIO_IBGE, INSCRICAO_MUNICIPAL, SUFRAMA, INDICADOR_ATIVIDADE, NOME_FANTASIA, CEP, ENDERECO, NUMERO, COMPLEMENTO, BAIRRO, FONE, FAX, EMAIL, EMP_COD_INC_TRIBUTARIA, EMP_COD_IND_APROP_CREDITO, EMP_COD_IND_TIPO_APURADA, EMP_COD_IND_REGIME, MODALIDADE, EMP_COD_IND_ESCRITURACAO,
CONTRIBUINTE_IPI)
AS
SELECT
T1.EMP_CODIGO,
T1.EMP_RAZAO,
T1.EMP_CGC,
T1.EMP_UF,
T1.EMP_INSC,
(SELECT T2.CID_COD_IBGE FROM CID0000 T2 WHERE T2.CID_CODIGO = T1.EMP_CONT_CID),
T1.EMP_INSC_MUNICIPAL,
T1.EMP_SUFRAMA,
T1.EMP_INDICADOR_ATIVIDADE,
T1.EMP_FANTASIA,
T1.EMP_CEP,
T1.EMP_ENDERE,
CASE WHEN (1 = 1) THEN
    ''
END,
CASE WHEN (1 = 1) THEN
    ''
END,
T1.EMP_BAIRRO,
T1.EMP_FONE,
T1.EMP_FAX,
T1.EMP_EMAIL,
T1.EMP_COD_INC_TRIBUTARIA,
T1.EMP_COD_IND_APROP_CREDITO,
T1.EMP_COD_IND_TIPO_APURADA,
T1.EMP_COD_IND_REGIME,
T1.EMP_MODALIDADE,
t1.EMP_COD_IND_ESCRITURACAO,
t1.EMP_CONIPI
FROM
EMP0000 T1;


COMMENT ON TABLE PAG0000 IS 'CONTAS A PAGAR';
COMMENT ON TABLE PAG_PC01 IS 'PARCELAS DE CONTAS A PAGAR';

ALTER TABLE FTC_IT01 ADD FTI_PERDA NUMERIC(18,5);
COMMENT ON COLUMN FTC_IT01.FTI_PERDA IS 'PERDA/QUEBRA NOERMAL PERCENTUAL';

-- QUANDO TEM FICHA TECNICA ELE É PRODUTO ACABADO OU EM PROCESSO, COMO DEFAULT COLOQUEI PRODUTO EM PROCESSO
UPDATE PRD0000
SET SPED_TIPCODIGO = '03'
WHERE (Select Count(*) from ftc_it01 FTC where FTC.prd_refer = PRD0000.prd_refer) > 0
AND SPED_TIPCODIGO = '';

commit work;

-- TEM ALGUMAS ITENS DA NOTA FISCAL DE ENTRADA SEM PRD_CODIGO PREENCHIDO
UPDATE ENF_IT01
SET PRD_CODIGO = (SELECT FIRST 1 PRD_CODIGO 
FROM PRD0000 P, SHAREDB WHERE
(P.PRD_REFER = ENF_IT01.PRD_REFER AND PRODUTOS = 'E' AND ENF_IT01.EMP_CODIGO =  P.EMP_CODIGO) OR
(P.PRD_REFER = ENF_IT01.PRD_REFER AND PRODUTOS = 'C')
)
WHERE PRD_CODIGO IS NULL ;

commit work;

-- ATUALIZANDO AS OPE_CODIGO E NATUREZA DA OPERAÇÃO PARA ITENS DA NOTA DE ENTRADA QUANDO ESTIVER COM 0000 OU OPE_CODIGO NULL
UPDATE ENF_IT01
SET ENF_CFOP = (SELECT FIRST 1 E.OPE_NATUREZA FROM ENF0001 E WHERE E.ENF_NOTANUMBER = ENF_IT01.ENF_IT_NOTANUMBER AND E.EMP_CODIGO = ENF_IT01.EMP_CODIGO)
WHERE OPE_CODIGO IS NULL
AND  (ENF_CFOP = '0000' OR ENF_CFOP = '0001');

commit work;

UPDATE ENF_IT01
SET OPE_CODIGO = (SELECT FIRST 1 OPE_CODIGO FROM OPE0000 O WHERE O.OPE_NATUREZA = ENF_CFOP AND O.EMP_CODIGO = ENF_IT01.EMP_CODIGO) 
WHERE OPE_CODIGO IS NULL AND  (ENF_CFOP <> '0000' OR ENF_CFOP <> '0001') ;

commit work;

--ATUALIZANDO OS CODIGO DO SPED 08 PARA ATIVO IMOBILIZADO 
UPDATE PRD0000
SET SPED_TIPCODIGO = '08'
WHERE EXISTS 
(SELECT 1 FROM PRD_TIPO TP 
 WHERE  PTI_SIGLA = 'IM'
 AND TP.PTI_CODIGO = PRD0000.PTI_CODIGO )
AND SPED_TIPCODIGO <> '08';

commit work;

-- ATUALIZANDO O CODIGO DA CIDADE NO CADASTRO DE FORNECEDORES

UPDATE FOR0000
SET CID_CODIGO = (SELECT FIRST 1 T2.CID_CODIGO FROM CID0000 T2 WHERE T2.CID_CIDADE= FOR0000.FOR_CIDADE AND FOR0000.FOR_UF = T2.CID_ESTADO)
WHERE CID_CODIGO = 0 OR CID_CODIGO IS NULL;

commit work;

-- ATUALIZANDO OPE_CODIGO DA TABELA CTE ENTCTE
UPDATE ENTCTE
SET OPE_CODIGO = (SELECT FIRST 1 OPE.OPE_CODIGO FROM OPE0000 OPE WHERE OPE.OPE_NATUREZA = ENTCTE.OPE_NATUREZA)
WHERE ope_codigo IS NULL OR ope_codigo = '0' OR OPE_CODIGO = '' ;
commit work;

-- TIRANDO OS ESPAÇOS EM BRANCO PRODUTOS/ CLIENTES E FORNECEDOR
UPDATE PRD0000
SET prd_descri = TRIM (PRD_DESCRI);
commit work;

UPDATE CLI0000
SET CLI_RAZAO = TRIM(CLI_RAZAO);
commit work;

UPDATE FOR0000
SET FOR_RAZAO = TRIM(FOR_RAZAO);
commit work;

-- ATUALIZANDO O COFINS NA NOTA DE ENTRADA
UPDATE ENF_IT01 SET CST_COFINS = '50' WHERE CST_COFINS = '01';
UPDATE ENF_IT01 SET CST_COFINS = '70' WHERE CST_COFINS IN ('04','02', '03');
UPDATE ENF_IT01 SET CST_COFINS = '71' WHERE CST_COFINS = '06' AND ENF_BASECOFINS = 0; -- INSENÇÃO
UPDATE ENF_IT01 SET CST_COFINS = '72' WHERE CST_COFINS = '09'; 
UPDATE ENF_IT01 SET CST_COFINS = '73' WHERE CST_COFINS = '06' AND ENF_BASECOFINS > 0 ; -- ALIQUOTA ZERO 
UPDATE ENF_IT01 SET CST_COFINS = '74' WHERE CST_COFINS = '08';
UPDATE ENF_IT01 SET CST_COFINS = '75' WHERE CST_COFINS = '05';
UPDATE ENF_IT01 SET CST_COFINS = '99' WHERE CST_COFINS IN ( '07','49');
UPDATE ENF_IT01 SET CST_COFINS = '71' WHERE CST_COFINS = '' AND ENF_BASECOFINS = 0 AND  ENF_IT_VLCOFINS = 0 ;
UPDATE ENF_IT01 SET CST_COFINS = '73' WHERE CST_COFINS = '' AND (ENF_BASECOFINS > 0 or  ENF_IT_VLCOFINS > 0) ;

commit work;

-- ATUALIZANDO O PIS NA NOTA DE ENTRADA
UPDATE ENF_IT01 SET CST_PIS = '50' WHERE CST_PIS = '01';
UPDATE ENF_IT01 SET CST_PIS = '70' WHERE CST_PIS IN ('04','02', '03');
UPDATE ENF_IT01 SET CST_PIS = '71' WHERE CST_PIS = '06' AND ENF_BASEPIS = 0; -- INSENÇÃO
UPDATE ENF_IT01 SET CST_PIS = '72' WHERE CST_PIS = '09'; 
UPDATE ENF_IT01 SET CST_PIS = '73' WHERE CST_PIS = '06' AND ENF_BASEPIS > 0 ; -- ALIQUOTA ZERO 
UPDATE ENF_IT01 SET CST_PIS = '74' WHERE CST_PIS = '08';
UPDATE ENF_IT01 SET CST_PIS = '75' WHERE CST_PIS = '05';
UPDATE ENF_IT01 SET CST_PIS = '99' WHERE CST_PIS IN ( '07','49');

UPDATE ENF_IT01 SET CST_PIS = '71' WHERE CST_PIS = '' AND ENF_BASEPIS = 0 AND  ENF_IT_VLPIS = 0 ;
UPDATE ENF_IT01 SET CST_PIS = '73' WHERE CST_PIS = '' AND (ENF_BASEPIS > 0 or  ENF_IT_VLPIS > 0) ;

commit work;

CREATE TABLE sped_bloco1 (
EMP_CODIGO VARCHAR(3),
IND_EXP VARCHAR(1),
IND_CCRF VARCHAR(1),
IND_COMB VARCHAR(1),
IND_USINA VARCHAR(1),
IND_VA VARCHAR(1),
IND_EE VARCHAR(1),
IND_CART VARCHAR(1),
IND_FORM VARCHAR(1),
IND_GIAF1 VARCHAR(1),
IND_GIAF3 VARCHAR(1),
IND_GIAF4 VARCHAR(1),
IND_AER VARCHAR(1));

comment ON TABLE sped_bloco1 IS 'INFORMACOES SOBRE O BLOCO 1 PARA SPED';


COMMENT ON COLUMN VW_CABECALHO_NFE.OPE_CODIGO IS 'CHAVE REFERENCIA DA OPERACAO FISCAL (OPE0000)'; 
COMMENT ON COLUMN VW_SPED_NOTAS_FISCAIS.OPE_CODIGO IS 'CHAVE REFERENCIA DA OPERACAO FISCAL (OPE0000)'; 
COMMENT ON COLUMN VW_SPED_NOTAS_FISCAIS_ITENS.OPE_CODIGO IS 'CHAVE REFERENCIA DA OPERACAO FISCAL (OPE0000)'; 

ALTER TABLE ALMOX0000 ADD AMX_CNPJ_PART VARCHAR(14);
COMMENT ON COLUMN ALMOX0000.AMX_CNPJ_PART IS 'CNPJ DO TERCEIRO QUE POSSUI A POSSE OU PROPRIEDADE DO ESTOQUE';


CREATE TABLE SPED_APURACAO_ICMS (
	emp_codigo VARCHAR(3),
	MES INTEGER,
	ANO INTEGER,
	SALDO_APURADO NUMERIC(15,8),
	DEDUCOES NUMERIC (15,8),
	ICMS_RECOLHER NUMERIC (15,8),
	SALDO_TRANSPORTAR NUMERIC(15,8)
);

COMMENT ON TABLE SPED_APURACAO_ICMS IS 'APURACAO DE ICMS ANO /MES SPED E110';
COMMENT ON COLUMN SPED_APURACAO_ICMS.ANO IS 'ANO APURACAO';
COMMENT ON COLUMN SPED_APURACAO_ICMS.MES IS 'MES APURACAO';
COMMENT ON COLUMN SPED_APURACAO_ICMS.SALDO_APURADO IS 'VALOR DO SALDO DEVEDOR APURADO';
COMMENT ON COLUMN SPED_APURACAO_ICMS.DEDUCOES IS 'VALOR TOTAL DE DEDUCOES';
COMMENT ON COLUMN SPED_APURACAO_ICMS.ICMS_RECOLHER IS 'VALOR DE ICMS A RECOLHER = APURADO - DEDUCOES';
COMMENT ON COLUMN SPED_APURACAO_ICMS.SALDO_TRANSPORTAR IS 'VALOR TOTAL DO SALDO CREDOR A TRANSPORTAR PARA PERIODO SEGUINTE';

CREATE TABLE SPED_APURACAO_ICMS_ST (
	emp_codigo VARCHAR(3),
	MES INTEGER,
	ANO INTEGER,
	UF VARCHAR(2),
	SALDO_DEVEDOR_ANT_DEDUCOES NUMERIC (15,8),
	DEDUCOES_ST NUMERIC (15,8),
	ICMS_RECOLHER_ST NUMERIC (15,8),
	SALDO_TRANSPORTAR_ST NUMERIC (15,8)
);

COMMENT ON TABLE SPED_APURACAO_ICMS_ST IS 'APURACAO ICMS ST ANO/MES SPED E210';
COMMENT ON COLUMN SPED_APURACAO_ICMS_ST.ANO IS 'ANO APURACAO';
COMMENT ON COLUMN SPED_APURACAO_ICMS_ST.MES IS 'MES APURACAO';
COMMENT ON COLUMN SPED_APURACAO_ICMS_ST.UF IS 'UF DA APURACAO';
COMMENT ON COLUMN SPED_APURACAO_ICMS_ST.SALDO_DEVEDOR_ANT_DEDUCOES IS 'VALOR DO SALDO DEVEDOR APURADO ANTES DAS DEDUCOES';
COMMENT ON COLUMN SPED_APURACAO_ICMS_ST.DEDUCOES_ST IS 'VALOR TOTAL DE DEDUCOES';
COMMENT ON COLUMN SPED_APURACAO_ICMS_ST.ICMS_RECOLHER_ST IS 'VALOR DE ICMS A RECOLHER = APURADO - DEDUCOES';
COMMENT ON COLUMN SPED_APURACAO_ICMS_ST.SALDO_TRANSPORTAR_ST IS 'VALOR TOTAL DO SALDO CREDOR A TRANSPORTAR PARA PERIODO SEGUINTE';


CREATE TABLE SPED_APURACAO_IPI (
	emp_codigo VARCHAR(3),
	MES INTEGER,
	ANO INTEGER,
	SALDO_TRANSPORTAR NUMERIC(15,8),
	SALDO_RECOLHER NUMERIC (15,8)
	);

COMMENT ON TABLE SPED_APURACAO_IPI IS 'APURACAO IPI ANO/MES SPED E520';
COMMENT ON COLUMN SPED_APURACAO_IPI.ANO IS 'ANO APURACAO';
COMMENT ON COLUMN SPED_APURACAO_IPI.MES IS 'MES APURACAO';
COMMENT ON COLUMN SPED_APURACAO_IPI.SALDO_TRANSPORTAR IS 'VALOR DO SALDO CREDOR DE IPI A TRANSPORTAR PARA PERIODO SEGUINTE';
COMMENT ON COLUMN SPED_APURACAO_IPI.SALDO_RECOLHER IS 'VALOR DO SALDO DEVEDOR DO IPI A RECOLHER';

CREATE TABLE SPED_ARQUIVOS (
 emp_codigo VARCHAR(3),
 mes integer,
 ano integer,
 arq BLOB SUB_TYPE 0);

 CREATE TABLE SPED_ARQUIVOS_CONT (
 emp_codigo VARCHAR(3),
 mes integer,
 ano integer,
 arq BLOB SUB_TYPE 0);

 
UPDATE ENF_IT01
SET ENF_BASEPIS =  ENF_QTDE*ENF_PRECO, ENF_BASECOFINS = ENF_QTDE*ENF_PRECO;

commit work;

CREATE SEQUENCE GEN_fatorconversao;

CREATE TABLE PRD_FATORCONVERSAO (
FCV_REGISTRO INTEGER NOT NULL,
PRD_CODIGO VARCHAR(5) NOT NULL,
FOR_CODIGO VARCHAR(4) NOT NULL,
UNID_CONV VARCHAR(6) NOT NULL,
FAT_CONV NUMERIC(18,5) NOT NULL,
CONSTRAINT PK_FCV_FATOR PRIMARY KEY (FCV_REGISTRO)
);

SET TERM ^ ;
CREATE TRIGGER tr_fatorconversao FOR prd_fatorconversao
active BEFORE INSERT POSITION 0
AS BEGIN
	NEW.fcv_registro = gen_id(GEN_fatorconversao,1);
END
^
SET TERM ; ^

COMMENT ON TABLE PRD_FATORCONVERSAO IS 'FORES DE CONVERSAO DE UNIDADES';
COMMENT ON COLUMN PRD_FATORCONVERSAO.PRD_CODIGO IS 'CODIGO DO PRODUTO (CHAVE ESTRANGEIRA)';
COMMENT ON COLUMN PRD_FATORCONVERSAO.FOR_CODIGO IS 'CODIGO DO FORNECEDOR (CHAVE ESTRANGEIRA)';
COMMENT ON COLUMN PRD_FATORCONVERSAO.UNID_CONV IS 'UNIDADE DE ENTRADA DA NOTA- UNIDADE A SER CONVERTIDA NA UNIDADE DE ESTOQUE, REFERIDA NO REGISTRO 0200 (CADASTRO DE PRODUTO)';
COMMENT ON COLUMN PRD_FATORCONVERSAO.FAT_CONV IS 'FATOR DE CONVERSAO , UTILIZADO PARA CONVERTER (MULTIPLICAR) A UNIDADE A SER CONVERTIDA NA UNIDADE ADOTADA NO INVENTARIO';


UPDATE FAT_PC01
SET FPC_COBNUM = SUBSTRING(FPC_COBNUM FROM 4 for 8 )
WHERE ban_codigo  in (SELECT BAN_CODIGO FROM BAN0000 WHERE BAN_COD_APELIDO = 341)
AND CHAR_LENGTH(FPC_COBNUM) = 11 ;

commit work;