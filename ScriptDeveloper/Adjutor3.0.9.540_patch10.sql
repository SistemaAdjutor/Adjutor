UPDATE  VERSAOSISTEMA 
SET VERSAOSISTEMA.SCRIPTADJUTOR = '3.0.9.540 patch 10',
       VERSAOSISTEMA.DATA   = '22.01.2020',
	    VERSAO = '3.0.9.540'
 where VERSAOSISTEMA.CODIGO = 1;

 commit work;
 

ALTER TABLE PRD0000_CODIGO ALTER PRDC_REFERENCIA TYPE varchar(50);
ALTER TABLE PRD_FATORCONVERSAO ALTER UNID_CONV TYPE varchar(6);

COMMENT ON COLUMN ORDEMPRODUCAO.OPR_STATUS IS 'P - PENDENTE ; L - LIBERADOS; F - FECHADAS CONCLUIDAS E APROVADA; C - CANCELADAS';


UPDATE ORDEMPRODUCAO OPR
SET OPR_STATUS = 'F'
 ,  OPR_CONCLUSAO = (SELECT  NF_EMISSAO FROM  NF0001 NF WHERE NF.PED_CODIGO = OPR.PED_CODIGO AND NF.EMP_CODIGO = OPR.EMP_CODIGO )
WHERE EXISTS (SELECT * FROM PED0000 PE WHERE PE.PED_CODIGO = OPR.PED_CODIGO AND PE.EMP_CODIGO = OPR.EMP_CODIGO AND PE.PED_SITUACAO = 'T' );

COMMIT WORK;

CREATE OR ALTER VIEW VW_CABECALHO_NFE(
    EMP_CODIGO,
    PED_EXP_UF,
    PED_EXP_LOCAL_EXP,
    PED_EXP_LOCAL_RECINTO,
    CLI_CONSFINAL,
    NF_TIPO,
    NF_STATUS_NFE,
    NF_ENVIADO_NFE_EMAIL,
    NF_EMAIL_ENVIO_NFE,
    NF_REGISTRO,
    CCT_CODIGO,
    NF_TIPO_PEDIDO,
    NF_CHAVE_NFE,
    NF_CHAVE_NFE_REFERENCIADA,
    NF_LOTE_NFE,
    NF_PROTOCOLO_NFE,
    NF_PROTOCOLO_NFE_CANCEL,
    NF_DATA_EMISSAO,
    NF_SAIDA,
    NF_NUM_NOTA_FISCAL,
    NF_NUM_NFE,
    OPE_CODIGO,
    NF_CFOP,
    NF_PERCENTUAL_MVA,
    NOP_DESCRICAO,
    PED_NUM_PEDIDO,
    PED_DATA_EMISSAO,
    NF_COD_CLI_FORN,
    RAZAO,
    FANTASIA,
    CNPJ_CPF,
    INC_ESTADUAL,
    ENDERECO,
    BAIRRO,
    CID_COD_IBGE,
    CIDADE,
    AUF_COD_IBGE,
    AUF_CODIGO,
    CEP,
    FONE,
    EMAIL,
    CONSFINAL,
    AUF_INSCRICAO_SUB,
    NF_BASE_ICMS,
    NF_VALOR_ICMS,
    NF_BASE_ICMS_SUBST,
    NF_VALOR_ICMS_SUBST,
    NF_VALOR_PRODUTOS,
    NF_VALOR_SERVICOS,
    NF_VALOR_FRETE,
    NF_VALOR_SEGURO,
    NF_OUTROS,
    NF_VALOR_IPI,
    NF_BASE_IPI,
    NF_VALOR_NOTA_FISCAL,
    TR_CODIGO,
    TR_RAZAO,
    NF_TIPO_FRETE,
    NF_PLACA_VEICULO,
    TR_UF,
    TR_INSC_EST,
    TR_CNPJ_CNPF,
    TR_ENDERECO,
    TR_CIDADE,
    TR_FONE,
    NF_QUANTIDADE,
    NF_ESPECIE,
    NF_MARCA,
    NF_NUMERO,
    NF_PESO_BRUTO,
    NF_PESO_LIQUIDO,
    NF_MENSAGEM_01,
    NF_MENSAGEM_02,
    PED_OBSERVACAO_NOTA,
    NFC_INF_COMPLEMENTARES,
    MSG_NFE_OPER_FISCAL,
    MSG_NFE_FATURAMENTO,
    TP_DESCRICAO,
    NF_POR_CONTA,
    NF_VALOR_PRODUTOS_ST,
    NOP_IMPORTACAO,
    FATURAS,
    NF_VL_DESCTO,
    NF_PROTOCOLO_AUTORIZACAO,
    NF_DATA_AUTORIZACAO,
    NF_HORA_AUTORIZACAO,
    NF_ALIQCREDSIMPLES,
    NF_VLCREDSIMPLES,
    NF_ENTRADA_SAIDA,
    NF_STATUS_NFSE,
    SRV_REGISTRO,
    NF_NFSE_VLR_IR,
    NF_NFSE_VLR_CSLL,
    NF_NFSE_VLR_INSS,
    NF_NFSE_VLR_COFINS,
    NF_NFSE_VLR_PIS,
    NF_NFSE_VLR_DEDUCOES,
    NF_NFSE_VLR_ISS,
    NF_NFSE_VLR_BASE_CALCULO,
    NF_NFSE_DESCRICAO,
    NF_NFSE_ALIQUOTA_ISS,
    NF_EXPORT_UF_EMBARQUE,
    NF_EXPORT_LOCAL_EMBARQUE,
    NF_DESP_ACES,
    NF_VALORTOT_PIS,
    NF_VALORTOT_COFINS,
    NF_COMPLEMENTAR,
    NFE_STATUS_PRODUCAO,
    NF_CC_STATUS,
    NF_CC_DATA,
    NF_CC_SEQUENCIA,
    NF_CC_USUARIO,
    NF_CC_DESCRICAO,
    NF_SERIE,
    NF_CANCELADA,
    NF_INTERNO,
    NF_VALOR_TOTAL_FCP,
    NF_VALOR_TOTAL_PARTILHA_DEST,
    NF_VALOR_TOTAL_PARTILHA_ORIG,
    IBPT_VL_APROX_TRIBUTOS,
    NF_UF_VEICULO,
    NF_FINALIDADE)
AS
SELECT
            T1.EMP_CODIGO,
            t2.ped_exp_uf,
            t2.ped_exp_local_exp,
            t2.ped_exp_local_recinto,
            t4.cli_consfinal,
            T1.NF_ENTR_SAID AS NF_TIPO,
            T1.NF_STATUS_NFE,
            T1.NF_ENVIADO_NFE_EMAIL,
            T1.NF_EMAIL_ENVIO_NFE,
            T1.NF_REGISTRO,
            'C' AS CCT_CODIGO,
            'C' AS NF_TIPO_PEDIDO,
            T1.NF_CHAVE_NFE,
            T1.nf_chave_nfe_referenciada,
            T1.NF_LOTE_NFE,
            T1.NF_PROTOCOLO_NFE,
            T1.NF_PROTOCOLO_NFE_CANC,
            T1.NF_EMISSAO,
            cast(T1.NF_SAIDA||' '||t1.nf_horasaida as timestamp),
            T1.NF_NOTANUMBER,
            T1.NF_NUM_NFE,
            t1.ope_codigo,
            T1.OPE_NATUREZA,
            0 AS NF_PERCENTUAL_MVA,
            T3.OPE_DESCRINATUREZA,
            T2.PED_CODIGO,
            T2.PED_DTENTRADA,
            T2.CLI_CODIGO,
            T4.CLI_RAZAO AS RAZAO,
            T4.CLI_FANTASIA AS FANTASIA,
            T4.CLI_CGC AS CNPJ_CPF,
            T4.CLI_INSC AS INC_ESTADUAL,
            T4.CLI_ENDERE AS ENDERECO,
            T4.CLI_BAIRRO AS BAIRRO,
            T6.CID_COD_IBGE AS CID_COD_IBGE,
            T6.CID_CIDADE AS CIDADE,
            ( SELECT  T55.ICM_COD_IBGE FROM  ICM0000 T55 WHERE T55.ICM_DESTINO = T4.CLI_UF)  AS AUF_COD_IBGE,
            T4.CLI_UF AS AUF,
            T4.CLI_CEP AS CEP,
            T4.CLI_FONE AS FONE,
            T4.CLI_EMAIL AS EMAIL,
            T4.CLI_CONSFINAL AS CONSFINAL,
            T7.ICM_IE_SUBTRIB AS AUF_INSCRICAO_SUB,
            T1.NF_BASEICMS AS NF_BASE_ICMS,
            T1.NF_VL_ICMS AS NF_VALOR_ICMS,
            T1.NF_VLBASESUBTRIB AS NF_BASE_ICMS_SUBST,
            T1.NF_VL_SUBTRIB AS NF_VALOR_ICMS_SUBST,
            T1.NF_TOT_PROD AS NF_VALOR_PRODUTOS,
            0 AS NF_VALOR_SERVICOS,
            T1.NF_VLFRETE AS NF_VALOR_FRETE,
            T1.NF_VLSEGURO AS NF_VALOR_SEGURO,
            T1.NF_DESP_ACES AS NF_DESPESAS_ACESS,
            T1.NF_VL_IPI AS NF_VALOR_IPI,
            T1.nf_base_ipi AS NF_BASE_IPI,
            T1.NF_TOT_NOTA AS NF_VALOR_NOTA_FISCAL,
            T5.TRP_CODIGO AS TR_CODIGO,
            T5.TRP_RAZAO AS TR_RAZAO,
            T2.PED_FRETE,
            T1.NF_PLACAVE AS NF_PLACA_VEICULO,
            T5.TRP_UF AS TR_UF,
            T5.TRP_INSC AS TR_INSC_EST,
            T5.TRP_CGC AS TR_CNPJ_CNPF,
            T5.TRP_ENDERE AS TR_ENDERECO,
            T5.TRP_CIDADE AS TR_CIDADE,
            t5.TRP_FONE as TR_FONE,
            T1.NF_QTDE AS NF_QUANTIDADE,
            T1.NF_ESPECIE,
            T1.NF_MARCA,
            T1.NF_NUMERO,
            T1.NF_PESOBRU AS NF_PESO_BRUTO,
            T1.NF_PESOLIQ AS NF_PESO_LIQUIDO,
            COALESCE(T1.NF_OBS_OPER,'') || ' ' || COALESCE(T1.NF_OBS_OPER_AVISO2,'') AS NF_MENSAGEM_01,
            T1.NF_OBS_OPER AS NF_MENSAGEM_02,
            '' as PED_OBSERVACAO_NOTA,
            COALESCE(T1.NF_OBS_OPER,'') || ' ' || COALESCE(T1.NF_OBS_OPER_AVISO2,'') AS NFC_INF_COMPLEMENTARES,
            COALESCE(T1.NF_OBS_OPER,'') || ' ' || COALESCE(T1.NF_OBSG6,'') || ' ' ||  COALESCE(T1.NF_OBS_OPER_AVISO2,'') AS MSG_NFE_OPER_FISCAL,
            T1.nf_observacao  AS MSG_NFE_FATURAMENTO,
            '' AS TP_DESCRICAO,
            CASE WHEN (T2.PED_FRETE = 'F') THEN '02' ELSE '01' END AS NF_POR_CONTA,
            0 AS NF_VALOR_PRODUTOS_ST,
            'N' AS NOP_IMPORTACAO,
            '' AS FATURAS,
            t1.NF_VL_DESCTO,
            t1.nf_protocolo_autorizacao,
            t1.nf_data_autorizacao,
            t1.nf_hora_autorizacao,
            T1.NF_ALIQCREDSIMPLES,
            T1.NF_VLCREDSIMPLES,
            T1.nf_entr_said,
            t1.NF_STATUS_NFSE,
            t1.SRV_REGISTRO,
            t1.NF_NFSE_VLR_IR,
            t1.NF_NFSE_VLR_CSLL,
            t1.NF_NFSE_VLR_INSS,
            t1.NF_NFSE_VLR_COFINS,
            t1.NF_NFSE_VLR_PIS,
            t1.NF_NFSE_VLR_DEDUCOES,
            t1.NF_NFSE_VLR_ISS,
            t1.NF_NFSE_VLR_BASE_CALCULO,
            t1.NF_NFSE_DESCRICAO,
            t1.NF_NFSE_ALIQUOTA_ISS,
            t1.nf_export_uf_embarque,
            t1.nf_export_local_embarque,
            t1.nf_desp_aces,
            t1.NF_VALORTOT_PIS,
            t1.NF_VALORTOT_COFINS,
            t1.NF_COMPLEMENTAR,
            t1.NFE_STATUS_PRODUCAO,
            t1.NF_CC_STATUS,
            t1.NF_CC_DATA,
            t1.NF_CC_SEQUENCIA,
            t1.NF_CC_USUARIO,
            t1.NF_CC_DESCRICAO,
            T1.NF_SERIE,
            t1.NF_CANCELADA,
            t1.NF_INTERNO,
            t1.NF_VALOR_TOTAL_FCP,
            t1.NF_VALOR_TOTAL_PARTILHA_DEST,
            t1.NF_VALOR_TOTAL_PARTILHA_ORIG,
            t1.IBPT_VLAPROXTRIBUTOS,
            t1.nf_ufveiculo AS NF_UF_VEICULO,
			T1.nf_finalidade
        FROM
            NF0001 T1
            join ped0000 t2 on (t2.ped_codigo = t1.ped_codigo and t2.emp_codigo = t1.emp_codigo and t1.nf_interno <> 'S')
            JOIN ope0000 T3 ON (T3.ope_codigo = T1.ope_codigo AND T3.OPE_ESCRITA = 'S')
            JOIN CLI0000 T4 ON (T4.CLI_CODIGO = T1.CLI_CODIGO)
            LEFT JOIN CID0000 T6 ON (T6.CID_CODIGO = T4.CID_CODIGO)
            LEFT JOIN ICM0000 T7 ON (T7.ICM_UF_DESTINO = T4.CLI_UF)
            LEFT JOIN TRP0000 T5 ON (T5.trp_codigo = T2.trp_codigo)
;
CREATE OR ALTER VIEW VW_VENDEDOR_COMISSAO(
    EMP_CODIGO,
    REP_NOME,
    REP_RAZAO,
    REP_AGENCIA,
    REP_CONTA,
    REP_BANCO,
    REP_BANCOFAVOR,
    NF_NUM_NFE,
    FAT_CODIGO,
    FPC_NUMER,
    REP_CODIGO,
    FPC_DTEMIS,
    FPC_VLPARC,
    FPC_PAGTO,
    CLI_CODIGO,
    CLI_RAZAO,
    CLI_UF,
    FPC_VENCTO,
    FPC_VLPAGO,
    FPC_NPARCELAS,
    FPC_DESCONTADO,
    FAT_CANCELADA,
    PED_CODIGO,
    FAT_QTDITEM,
    FAT_VL_LIQ,
    FAT_VLNCOMIS,
    FAT_DTEMIS,
    FAT_COMIS1,
    FAT_COMIS2,
    FAT_COMIS3,
    FAT_VLFAT,
    REP_FUNCAO,
    FAT_ICMSRET,
    FAT_VL_IPI,
    FPC_EXCLUSAO,
    REP_GERENTE,
    REP_SUPERVISAO,
    REP_SITUACAO)
AS
SELECT F2.EMP_CODIGO, r1.REP_NOME, r1.REP_RAZAO, r1.REP_AGENCIA, r1.REP_CONTA, r1.REP_BANCO, r1.REP_BANCOFAVOR, N1.nf_num_nfe,  
 F2.FAT_CODIGO,F2.FPC_NUMER,F2.REP_CODIGO AS REP_CODIGO ,F2.FPC_DTEMIS,F2.FPC_VLPARC,F2.FPC_PAGTO,F2.CLI_CODIGO,
 C1.CLI_RAZAO AS CLI_RAZAO,C1.CLI_UF,
 F2.FPC_VENCTO AS FPC_VENCTO,F2.FPC_VLPAGO,F2.FPC_NPARCELAS,F2.FPC_DESCONTADO, F1.FAT_CANCELADA,F1.PED_CODIGO,
 F1.FAT_QTDITEM,F1.FAT_VL_LIQ,F1.FAT_VLNCOMIS,F1.FAT_DTEMIS,F1.FAT_COMIS1,F1.FAT_COMIS2, 
 F1.FAT_COMIS3,F1.FAT_VLFAT,R1.REP_FUNCAO,f1.fat_icmsret,f1.fat_vl_ipi ,FPC_EXCLUSAO, REP_GERENTE,REP_SUPERVISAO,REP_SITUACAO
 FROM FAT_PC01 F2 
JOIN FAT0000 F1 ON (F1.FAT_CODIGO = F2.FAT_CODIGO) AND (F2.EMP_CODIGO = F1.EMP_CODIGO)
JOIN CLI0000 C1 ON (F2.CLI_CODIGO = C1.CLI_CODIGO)
JOIN REP0000 R1 ON (R1.REP_CODIGO = F2.REP_CODIGO)
LEFT JOIN nf0001 N1 ON (N1.nf_notanumber = F1.fat_codigo) AND (N1.EMP_CODIGO = F1.EMP_CODIGO) AND (N1.nf_status_nfe <> 'C')
 UNION ALL
SELECT F2.EMP_CODIGO, r1.REP_NOME, r1.REP_RAZAO, r1.REP_AGENCIA, r1.REP_CONTA, r1.REP_BANCO, r1.REP_BANCOFAVOR, N1.nf_num_nfe,  
 F2.FAT_CODIGO,F2.FPC_NUMER,F1.REP_CODIGO_INTERNO AS REP_CODIGO,F2.FPC_DTEMIS,F2.FPC_VLPARC,F2.FPC_PAGTO,F2.CLI_CODIGO,C1.CLI_RAZAO,C1.CLI_UF,
 F2.FPC_VENCTO,F2.FPC_VLPAGO,F2.FPC_NPARCELAS,F2.FPC_DESCONTADO,
F1.FAT_CANCELADA,F1.PED_CODIGO,F1.FAT_QTDITEM,F1.FAT_VL_LIQ,F1.FAT_VLNCOMIS,F1.FAT_DTEMIS,F1.FAT_COMISSAO_VEN,F1.FAT_COMIS2, 
 F1.FAT_COMIS3,F1.FAT_VLFAT,R1.REP_FUNCAO,f1.fat_icmsret,f1.fat_vl_ipi , FPC_EXCLUSAO ,REP_GERENTE,REP_SUPERVISAO,REP_SITUACAO
 FROM FAT_PC01 F2 
JOIN FAT0000 F1 ON (F1.FAT_CODIGO = F2.FAT_CODIGO) AND (F2.EMP_CODIGO = F1.EMP_CODIGO)
JOIN CLI0000 C1 ON (F2.CLI_CODIGO = C1.CLI_CODIGO)
JOIN REP0000 R1 ON (R1.REP_CODIGO = F1.REP_CODIGO_INTERNO)
LEFT JOIN nf0001 N1 ON (N1.nf_notanumber = F1.fat_codigo) AND (N1.EMP_CODIGO = F1.EMP_CODIGO) AND (N1.nf_status_nfe <> 'C')
;

CREATE OR ALTER VIEW VW_FINANCEIRO_DUPLICATA_RATEIO(
    EMP_CODIGO,
    REGISTRO,
    TIPO,
    FATURA,
    PARCELA,
    EMISSAO,
    VENCIMENTO,
    VALOR,
    CLIENTE_FORNECEDOR,
    CCT_CODIGO,
    CONTA_NIVEL,
    CONTA_DESCRICAO,
    PERFIL_RATEIO,
    TIPO_RATEIO)
AS
SELECT
    T1.emp_codigo,
    T1.pag_registro,
    case WHEN (1=1) THEN 'P' END AS TIPO,
    T1.pag_codigo,
    coalesce(T1.ppc_numer,'01'),
    T1.ppc_dtemis,
    T1.ppc_vencto,
    T1.ppc_vlparc,
    T2.for_razao,
    T3.cct_codigo,
    T3.cct_nivel,
    T3.cct_descri,
    T1.pcxpf_registro,
    CASE WHEN (T1.PCXPF_REGISTRO = 0) THEN 'N'
    WHEN (T1.PCXPF_REGISTRO = -1) THEN  'M'
    WHEN (T1.PCXPF_REGISTRO > 0) THEN  'A'  END
FROM
    pag_pc01 T1
JOIN for0000 T2 ON (T2.for_codigo = T1.for_codigo)
LEFT JOIN cct_0000 T3 ON (T3.cct_codigo = T1.cct_codigo)
where t1.PPC_EXCLUSAO <> 'S'
union all
SELECT
    T11.emp_codigo,
    T11.fat_registro,
    case WHEN (1=1) THEN 'R' END AS TIPO,
    T11.fat_codigo,
    coalesce(T11.fpc_numer,'01'),
    T11.fpc_dtemis,
    T11.fpc_vencto,
    T11.fpc_vlparc,
    T22.cli_razao,
    T33.cct_codigo,
    T33.cct_nivel,
    T33.cct_descri,
    T11.pcxpf_registro,
    CASE WHEN (T11.PCXPF_REGISTRO = 0) THEN 'N'
    WHEN (T11.PCXPF_REGISTRO = -1) THEN 'M'
    WHEN (T11.PCXPF_REGISTRO > 0) THEN 'A' END
FROM
    fat_pc01 T11
JOIN cli0000 T22 ON (T22.cli_codigo = T11.cli_codigo)
LEFT JOIN cct_0000 T33 ON (T33.cct_codigo = T11.cct_codigo)
where t11.FPC_EXCLUSAO <> 'S'
;

CREATE OR ALTER VIEW VW_SPED_PARTICIPANTES(
    EMPRESA,
    CODIGO_SISTEMA,
    NOME,
    CODIGO_PAIS,
    CNPJ_CPF,
    INSCRICAO_ESTADUAL,
    CODIGO_MUNICIPIO_IBGE,
    SUFRAMA,
    ENDERECO,
    NUMERO,
    COMPLEMENTO,
    BAIRRO)
AS
SELECT
T1.EMP_CODIGO,
CAST('C'||T1.CLI_CODIGO AS VARCHAR(10)),
CAST(T1.CLI_RAZAO AS VARCHAR(60)),
CAST((SELECT T2.PAI_CODIGO FROM PAIS0000 T2 WHERE T2.PAI_CODIGO = T1.PAI_CODIGO) AS INTEGER),
T1.CLI_CGC,
CAST(T1.CLI_INSC AS VARCHAR(20)),
(SELECT T2.CID_COD_IBGE FROM CID0000 T2 WHERE T2.CID_CODIGO = T1.CID_CODIGO),
T1.CLI_SUFRAMA,
CAST(T1.CLI_ENDERE AS VARCHAR(50)),
CASE WHEN (1 = 1) THEN
    '0'
END,
CASE WHEN (1 = 1) THEN
    '0'
END,
CAST(T1.CLI_BAIRRO AS VARCHAR(30))
FROM
CLI0000 T1

where t1.CLI_CGC <> '00000000000000'

UNION ALL
SELECT
T1.EMP_CODIGO,
CAST('F'||T1.FOR_CODIGO AS VARCHAR(10)),
CAST(T1.FOR_RAZAO AS VARCHAR(60)),
CAST(CASE WHEN (1 = 1) THEN
    1058
END AS INTEGER),
T1.FOR_CGC,
CAST(T1.FOR_INSC AS VARCHAR(20)),
(SELECT T2.CID_COD_IBGE FROM CID0000 T2 WHERE T2.CID_CODIGO = T1.CID_CODIGO),
T1.FOR_SUFRAMA,
CAST(T1.FOR_ENDERE AS VARCHAR(50)),
CASE WHEN (1 = 1) THEN
    '0'
END,
CASE WHEN (1 = 1) THEN
    '0'
END,
CAST(T1.FOR_BAIRRO AS VARCHAR(30))
FROM
FOR0000 T1
where t1.for_CGC <> '00000000000000'
;

CREATE OR ALTER VIEW VW_SPED_EMPRESA(
    EMPRESA,
    RAZAO_SOCIAL,
    CNPJ_CPF,
    UF,
    IE,
    CODIGO_MUNICIPIO_IBGE,
    INSCRICAO_MUNICIPAL,
    SUFRAMA,
    INDICADOR_ATIVIDADE,
    NOME_FANTASIA,
    CEP,
    ENDERECO,
    NUMERO,
    COMPLEMENTO,
    BAIRRO,
    FONE,
    FAX,
    EMAIL,
    EMP_COD_INC_TRIBUTARIA,
    EMP_COD_IND_APROP_CREDITO,
    EMP_COD_IND_TIPO_APURADA,
    EMP_COD_IND_REGIME,
    MODALIDADE,
    EMP_COD_IND_ESCRITURACAO,
    CONTRIBUINTE_IPI)
AS
SELECT
T1.EMP_CODIGO,
T1.EMP_RAZAO,
T1.EMP_CGC,
T1.EMP_UF,
T1.EMP_INSC,
(SELECT T2.CID_COD_IBGE FROM CID0000 T2 WHERE T2.CID_CODIGO = T1.EMP_CONT_CID),
T1.EMP_INSC_MUNICIPAL,
T1.EMP_SUFRAMA,
T1.EMP_INDICADOR_ATIVIDADE,
T1.EMP_FANTASIA,
T1.EMP_CEP,
T1.EMP_ENDERE,
CASE WHEN (1 = 1) THEN
    ''
END,
CASE WHEN (1 = 1) THEN
    ''
END,
T1.EMP_BAIRRO,
T1.EMP_FONE,
T1.EMP_FAX,
T1.EMP_EMAIL,
T1.EMP_COD_INC_TRIBUTARIA,
T1.EMP_COD_IND_APROP_CREDITO,
T1.EMP_COD_IND_TIPO_APURADA,
T1.EMP_COD_IND_REGIME,
T1.EMP_MODALIDADE,
t1.EMP_COD_IND_ESCRITURACAO,
t1.EMP_CONIPI
FROM
EMP0000 T1
;















CREATE OR ALTER VIEW VW_CONSULTA_NOTA_FISCAL_ENTRADA(
    NFE_XML,
    ENF_REGISTRO,
    ENF_NOTANUMBER,
    OPE_NATUREZA,
    ENF_EMISSAO,
    OCP_CODIGO,
    FOR_CODIGO,
    ENF_TOT_PROD,
    ENF_VLFRETE,
    ENF_VLSEGURO,
    ENF_DESP_ACES,
    ENF_TOT_NOTA,
    ENF_TIPO_NF_ENTRADA,
    RAZAO_SOCIAL,
    EMP_CODIGO,
    ENF_FECHADO_PROJETO_OBRA,
    ENF_BASE_IPI,
    ENF_VALOR_IPI,
    ENF_BASE_ICMS,
    ENF_VALOR_ICMS,
    ENF_BASE_ICMS_ST,
    ENF_VALOR_ICMS_ST)
AS
SELECT
case when (e1.ENF_XML is null) THEN 
        'N'
     else
        'S'
end,
E1.enf_registro,
E1.ENF_NOTANUMBER,
E1.OPE_NATUREZA,
E1.ENF_EMISSAO,
(SELECT FIRST 1 T55.OCP_CODIGO FROM ENF_IT01 T55 WHERE (T55.ENF_IT_NOTANUMBER = E1.ENF_NOTANUMBER AND T55.FOR_CODIGO = E1.FOR_CODIGO AND T55.OCP_CODIGO <> '000000')),
E1.FOR_CODIGO,
E1.ENF_TOT_PROD,
E1.ENF_VLFRETE,
E1.ENF_VLSEGURO,
E1.ENF_DESP_ACES,
E1.ENF_TOT_NOTA,
E1.ENF_TIPO_NF_ENTRADA,
CASE WHEN E1.ENF_TIPO_NF_ENTRADA = 'N' THEN
  (SELECT F1.FOR_RAZAO FROM FOR0000 F1 WHERE (F1.FOR_CODIGO = E1.FOR_CODIGO))
ELSE
  (SELECT T1.TRP_RAZAO FROM TRP0000 T1 WHERE (T1.TRP_CODIGO = E1.FOR_CODIGO))
END AS RAZAO_SOCIAL,
E1.EMP_CODIGO,
E1.enf_fechado_projeto_obra,
e1.enf_base_ipi,
e1.enf_vl_ipi,
e1.enf_baseicms,
e1.enf_vl_icms,
e1.enf_vlbasesubtrib,
e1.enf_vl_subtrib


FROM ENF0001 E1
;
SET TERM ^ ;

create or alter procedure SUMARIZACAO_FORNECEDOR (
    EMP_CODIGO varchar(3),
    DATA_INICIO date,
    DATA_FIM date)
returns (
    CODIGO varchar(18),
    VALOR decimal(18,4),
    FORNECEDOR varchar(70),
    CONTA integer,
    RANQ integer,
    ACUMULADO decimal(18,4),
    SHAREMARKETINDIVIDUAL decimal(18,4),
    PERC_ACUMULADO decimal(18,4))
as
declare variable N integer;
declare variable VALORTOTAL decimal(18,4);
begin
   n = 0;
   acumulado = 0;
   ranq = 0 ;
   perc_acumulado = 0 ;
    if (:EMP_CODIGO = '') then
    EMP_CODIGO = '999';/* MULTIEMPRESA */

    

   select SUM(ENF_TOT_NOTA) AS valor
   from ENF0001 EF
   INNER JOIN FOR0000 fN ON (FN.FOR_CODIGO = EF.FOR_CODIGO)
   WHERE ENF_EMISSAO  BETWEEN :DATA_INICIO AND :DATA_FIM
    AND ENF_TOT_NOTA > 0
    AND ENF_CANCELADA IS NULL
    AND (EF.EMP_CODIGO = :EMP_CODIGO or :EMP_CODIGO = '999')
    INTO :valortotal ;


   FOR 
    SELECT EF.FOR_CODIGO AS codigo,SUM(ENF_TOT_NOTA) AS valor,count(*) AS conta, FOR_RAZAO AS fornecedor
    FROM ENF0001 EF
    INNER JOIN FOR0000 fN ON (FN.FOR_CODIGO = EF.FOR_CODIGO)
    WHERE ENF_EMISSAO  BETWEEN :DATA_INICIO AND :DATA_FIM
    AND ENF_TOT_NOTA > 0
    AND ENF_CANCELADA IS NULL
    AND (EF.EMP_CODIGO = :EMP_CODIGO or :EMP_CODIGO = '999')
    GROUP BY EF.FOR_CODIGO, FN.FOR_RAZAO
    order by 2 desc
    
       into :codigo,:valor,:conta, :fornecedor
   do
     begin
       n = n +1;
       ranq = n;
       acumulado = acumulado + valor;
       ShareMarketIndividual = (valor/ valortotal)*100;
       perc_acumulado = (acumulado/ valortotal)*100;
       suspend;
     end

end
^

SET TERM ; ^

COMMENT ON PROCEDURE SUMARIZACAO_FORNECEDOR IS 'CURVA ABC FORNECEDOR EM VOLUME DE COMPRAS ';

